{
	"id": "63e94d83aa9835894c50c4891e052c7f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MyToken is ERC20, Ownable {\r\n    //新增分红逻辑\r\n    mapping(address => uint256) public dividends; //可领取的分红\r\n    mapping(address => uint256) public claimedDividends; //未领取的分红\r\n\r\n    //总分红池子\r\n    uint256 public totalDividends;\r\n    uint256 public lastDividendTimestamp;\r\n\r\n    //事件提醒\r\n    event DividendDistributed(uint256 amount, uint256 timestamp);\r\n    event DividendClaimed(address indexed user, uint256 amount);\r\n\r\n    constructor(\r\n        uint256 initialSupply\r\n    ) ERC20(\"MyToken\", \"MTK\") Ownable(msg.sender) {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function burn(address from, uint256 amount) public onlyOwner {\r\n        _burn(from, amount);\r\n    }\r\n\r\n    //================可模块化设计部分===========================\r\n\r\n    //添加领取分红的用户\r\n    function addDividendsUser(address user, uint256 amount) public onlyOwner {\r\n        require(user != address(0x0), \"you can't input 0x00\");\r\n\r\n        dividends[user] = amount;\r\n    }\r\n\r\n    //添加批量领取分红的用户\r\n    function addBatchDividendsUsers(\r\n        address[] memory users,\r\n        uint256[] memory amounts\r\n    ) external onlyOwner {\r\n        for (uint256 i = 0; i < users.length; i++) {\r\n            addDividendsUser(users[i], amounts[i]);\r\n        }\r\n    }\r\n\r\n    function distributeDividends() external payable onlyOwner {\r\n        require(msg.value > 0, \"No MTK sent for dividends\");\r\n        require(totalSupply() > 0, \"No tokens issued\");\r\n\r\n        totalDividends += msg.value;\r\n        lastDividendTimestamp = block.timestamp;\r\n\r\n        uint256 totalTokens = totalSupply();\r\n        address[] memory holders = getTokenHolders();\r\n\r\n        //gas可优化\r\n        for (uint256 i = 0; i < holders.length; i++) {\r\n            address holder = holders[i];\r\n            uint256 balance = balanceOf(holder);\r\n            if (balance > 0) {\r\n                dividends[holder] += (msg.value * balance) / totalTokens;\r\n            }\r\n        }\r\n\r\n        emit DividendDistributed(msg.value, block.timestamp);\r\n    }\r\n\r\n    //持有者领取分红\r\n    function claimDividends() external {\r\n        uint256 amount = dividends[msg.sender];\r\n        require(amount > 0, \"No dividends to claim\");\r\n\r\n        dividends[msg.sender] = 0;\r\n        claimedDividends[msg.sender] += amount;\r\n\r\n        (bool sent, ) = msg.sender.call{value: amount}(\"\");\r\n        require(sent, \"Failed to send MTK\");\r\n\r\n        emit DividendClaimed(msg.sender, amount);\r\n    }\r\n\r\n    //获取可领取的分红额度\r\n    function getClaimableDividents(\r\n        address user\r\n    ) external view returns (uint256) {\r\n        return dividends[user];\r\n    }\r\n\r\n    function getTokenHolders() internal view returns (address[] memory) {\r\n        address[] memory holders = new address[](1);\r\n        holders[0] = msg.sender;\r\n        return holders;\r\n    }\r\n\r\n    //接受 MTK 的回退函数\r\n    receive() external payable {}\r\n\r\n\r\n    //===============================================================\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DividendClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "DividendDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "addBatchDividendsUsers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addDividendsUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimedDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeDividends",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "dividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getClaimableDividents",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastDividendTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":174:3330  contract MyToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":654:800  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MyToken.sol\":737:747  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/MyToken.sol\":760:792  _mint(msg.sender, initialSupply) */\n  tag_18\n    /* \"contracts/MyToken.sol\":766:776  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":778:791  initialSupply */\n  dup3\n    /* \"contracts/MyToken.sol\":760:765  _mint */\n  shl(0x20, tag_19)\n    /* \"contracts/MyToken.sol\":760:792  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/MyToken.sol\":654:800  constructor(... */\n  pop\n    /* \"contracts/MyToken.sol\":174:3330  contract MyToken is ERC20, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_43:\n    /* \"#utility.yul\":490:514   */\n  tag_75\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_42\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_76:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_44:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_78\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_43\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_81\n  tag_40\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":781:900   */\ntag_80:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_82\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_44\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_45:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_46:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_47:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_48:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_87:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_89\n  tag_47\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1758:1842   */\ntag_88:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_49:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_50:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_51:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_52:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_94\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_51\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2473:2512   */\n  tag_95\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_51\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_53:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_54:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_98\n    /* \"#utility.yul\":2779:2813   */\n  tag_99\n    /* \"#utility.yul\":2788:2812   */\n  tag_100\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_42\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2779:2813   */\n  tag_53\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2761:2814   */\n  tag_42\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_55:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_56:\n    /* \"#utility.yul\":3017:3056   */\n  tag_103\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_54\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3078:3169   */\n  tag_104\n    /* \"#utility.yul\":3127:3168   */\n  tag_105\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_55\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_52\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_57:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3248:3249   */\n  0x00\n    /* \"#utility.yul\":3241:3249   */\n  swap1\n  pop\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_58:\n    /* \"#utility.yul\":3338:3370   */\n  tag_108\n  tag_57\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3379:3444   */\n  tag_109\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_56\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_59:\n    /* \"#utility.yul\":3516:3636   */\ntag_111:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_114\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_58\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_60:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_117\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_49\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3867:3896   */\n  tag_118\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_50\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_119:\n    /* \"#utility.yul\":4094:4174   */\n  tag_120\n    /* \"#utility.yul\":4150:4172   */\n  tag_121\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_50\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_59\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_116:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_61:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_62:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_124\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_61\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_63:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_126\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_62\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_9:\n    /* \"#utility.yul\":4911:4948   */\n  tag_128\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_45\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_130\n  tag_46\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4999:5055   */\ntag_129:\n    /* \"#utility.yul\":5079:5117   */\n  tag_131\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_48\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5164:5231   */\n  tag_132\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_60\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_135:\n    /* \"#utility.yul\":6105:6172   */\n  tag_136\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_63\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_133)\n    /* \"#utility.yul\":5326:5944   */\ntag_134:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_137\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_49\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_138:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_142\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_62\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_141:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_133:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6321   */\ntag_64:\n    /* \"#utility.yul\":6232:6239   */\n  0x00\n    /* \"#utility.yul\":6272:6314   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6265:6270   */\n  dup3\n    /* \"#utility.yul\":6261:6315   */\n  and\n    /* \"#utility.yul\":6250:6315   */\n  swap1\n  pop\n    /* \"#utility.yul\":6195:6321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6423   */\ntag_65:\n    /* \"#utility.yul\":6364:6371   */\n  0x00\n    /* \"#utility.yul\":6393:6417   */\n  tag_145\n    /* \"#utility.yul\":6411:6416   */\n  dup3\n    /* \"#utility.yul\":6393:6417   */\n  tag_64\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6382:6417   */\n  swap1\n  pop\n    /* \"#utility.yul\":6327:6423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_66:\n    /* \"#utility.yul\":6516:6540   */\n  tag_147\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_65\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_149\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_66\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_67:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_30:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_152\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_42\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_153\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_42\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_155\n  tag_67\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7115:7151   */\ntag_154:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_68:\n    /* \"#utility.yul\":7251:7275   */\n  tag_157\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_42\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_34:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_159\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_66\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7569:7641   */\n  tag_160\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_68\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7651:7723   */\n  tag_161\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_68\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_38:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_163\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_68\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":174:3330  contract MyToken is ERC20, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":174:3330  contract MyToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x997664d7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7dfb3383\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x89d6047d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8ad0aaef\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x2eb21b22\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x2eb21b22\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6264786c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x668038e0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x68306e43\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x03c83302\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/MyToken.sol\":1621:2371  function distributeDividends() external payable onlyOwner {... */\n    tag_3:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      revert(0x00, 0x00)\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":454:490  uint256 public lastDividendTimestamp */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":808:903  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/MyToken.sol\":1361:1613  function addBatchDividendsUsers(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/MyToken.sol\":2408:2804  function claimDividends() external {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/MyToken.sol\":242:286  mapping(address => uint256) public dividends */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      revert(0x00, 0x00)\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/MyToken.sol\":314:365  mapping(address => uint256) public claimedDividends */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      revert(0x00, 0x00)\n    tag_91:\n      pop\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":2850:2984  function getClaimableDividents(... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1130:1312  function addDividendsUser(address user, uint256 amount) public onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      revert(0x00, 0x00)\n    tag_101:\n      pop\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      revert(0x00, 0x00)\n    tag_105:\n      pop\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      revert(0x00, 0x00)\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":418:447  uint256 public totalDividends */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      revert(0x00, 0x00)\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":911:1010  function burn(address from, uint256 amount) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      revert(0x00, 0x00)\n    tag_118:\n      pop\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      revert(0x00, 0x00)\n    tag_122:\n      pop\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      revert(0x00, 0x00)\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      revert(0x00, 0x00)\n    tag_133:\n      pop\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"contracts/MyToken.sol\":1621:2371  function distributeDividends() external payable onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/MyToken.sol\":1710:1711  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1698:1707  msg.value */\n      callvalue\n        /* \"contracts/MyToken.sol\":1698:1711  msg.value > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":1690:1741  require(msg.value > 0, \"No MTK sent for dividends\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/MyToken.sol\":1776:1777  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1760:1773  totalSupply() */\n      tag_144\n        /* \"contracts/MyToken.sol\":1760:1771  totalSupply */\n      tag_47\n        /* \"contracts/MyToken.sol\":1760:1773  totalSupply() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/MyToken.sol\":1760:1777  totalSupply() > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":1752:1798  require(totalSupply() > 0, \"No tokens issued\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/MyToken.sol\":1829:1838  msg.value */\n      callvalue\n        /* \"contracts/MyToken.sol\":1811:1825  totalDividends */\n      0x08\n      0x00\n        /* \"contracts/MyToken.sol\":1811:1838  totalDividends += msg.value */\n      dup3\n      dup3\n      sload\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1873:1888  block.timestamp */\n      timestamp\n        /* \"contracts/MyToken.sol\":1849:1870  lastDividendTimestamp */\n      0x09\n        /* \"contracts/MyToken.sol\":1849:1888  lastDividendTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1901:1920  uint256 totalTokens */\n      0x00\n        /* \"contracts/MyToken.sol\":1923:1936  totalSupply() */\n      tag_150\n        /* \"contracts/MyToken.sol\":1923:1934  totalSupply */\n      tag_47\n        /* \"contracts/MyToken.sol\":1923:1936  totalSupply() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/MyToken.sol\":1901:1936  uint256 totalTokens = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1947:1971  address[] memory holders */\n      0x00\n        /* \"contracts/MyToken.sol\":1974:1991  getTokenHolders() */\n      tag_151\n        /* \"contracts/MyToken.sol\":1974:1989  getTokenHolders */\n      tag_152\n        /* \"contracts/MyToken.sol\":1974:1991  getTokenHolders() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/MyToken.sol\":1947:1991  address[] memory holders = getTokenHolders() */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2033:2042  uint256 i */\n      0x00\n        /* \"contracts/MyToken.sol\":2045:2046  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2033:2046  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2028:2299  for (uint256 i = 0; i < holders.length; i++) {... */\n    tag_153:\n        /* \"contracts/MyToken.sol\":2052:2059  holders */\n      dup2\n        /* \"contracts/MyToken.sol\":2052:2066  holders.length */\n      mload\n        /* \"contracts/MyToken.sol\":2048:2049  i */\n      dup2\n        /* \"contracts/MyToken.sol\":2048:2066  i < holders.length */\n      lt\n        /* \"contracts/MyToken.sol\":2028:2299  for (uint256 i = 0; i < holders.length; i++) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"contracts/MyToken.sol\":2088:2102  address holder */\n      0x00\n        /* \"contracts/MyToken.sol\":2105:2112  holders */\n      dup3\n        /* \"contracts/MyToken.sol\":2113:2114  i */\n      dup3\n        /* \"contracts/MyToken.sol\":2105:2115  holders[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n    tag_156:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/MyToken.sol\":2088:2115  address holder = holders[i] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2130:2145  uint256 balance */\n      0x00\n        /* \"contracts/MyToken.sol\":2148:2165  balanceOf(holder) */\n      tag_159\n        /* \"contracts/MyToken.sol\":2158:2164  holder */\n      dup3\n        /* \"contracts/MyToken.sol\":2148:2157  balanceOf */\n      tag_86\n        /* \"contracts/MyToken.sol\":2148:2165  balanceOf(holder) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/MyToken.sol\":2130:2165  uint256 balance = balanceOf(holder) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2194:2195  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2184:2191  balance */\n      dup2\n        /* \"contracts/MyToken.sol\":2184:2195  balance > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":2180:2288  if (balance > 0) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"contracts/MyToken.sol\":2261:2272  totalTokens */\n      dup5\n        /* \"contracts/MyToken.sol\":2250:2257  balance */\n      dup2\n        /* \"contracts/MyToken.sol\":2238:2247  msg.value */\n      callvalue\n        /* \"contracts/MyToken.sol\":2238:2257  msg.value * balance */\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"contracts/MyToken.sol\":2237:2272  (msg.value * balance) / totalTokens */\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"contracts/MyToken.sol\":2216:2225  dividends */\n      0x06\n        /* \"contracts/MyToken.sol\":2216:2233  dividends[holder] */\n      0x00\n        /* \"contracts/MyToken.sol\":2226:2232  holder */\n      dup5\n        /* \"contracts/MyToken.sol\":2216:2233  dividends[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyToken.sol\":2216:2272  dividends[holder] += (msg.value * balance) / totalTokens */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2180:2288  if (balance > 0) {... */\n    tag_160:\n        /* \"contracts/MyToken.sol\":2073:2299  {... */\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":2068:2071  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":2028:2299  for (uint256 i = 0; i < holders.length; i++) {... */\n      jump(tag_153)\n    tag_154:\n      pop\n        /* \"contracts/MyToken.sol\":2316:2363  DividendDistributed(msg.value, block.timestamp) */\n      0x2f588cf4bb0247b0f3f60e06187f92e6fd1deaabb56e2bcc5672352337871327\n        /* \"contracts/MyToken.sol\":2336:2345  msg.value */\n      callvalue\n        /* \"contracts/MyToken.sol\":2347:2362  block.timestamp */\n      timestamp\n        /* \"contracts/MyToken.sol\":2316:2363  DividendDistributed(msg.value, block.timestamp) */\n      mload(0x40)\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyToken.sol\":1679:2371  {... */\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":1621:2371  function distributeDividends() external payable onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":454:490  uint256 public lastDividendTimestamp */\n    tag_58:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":808:903  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/MyToken.sol\":878:895  _mint(to, amount) */\n      tag_191\n        /* \"contracts/MyToken.sol\":884:886  to */\n      dup3\n        /* \"contracts/MyToken.sol\":888:894  amount */\n      dup3\n        /* \"contracts/MyToken.sol\":878:883  _mint */\n      tag_192\n        /* \"contracts/MyToken.sol\":878:895  _mint(to, amount) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/MyToken.sol\":808:903  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1361:1613  function addBatchDividendsUsers(... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/MyToken.sol\":1503:1512  uint256 i */\n      0x00\n        /* \"contracts/MyToken.sol\":1515:1516  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1503:1516  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1498:1606  for (uint256 i = 0; i < users.length; i++) {... */\n    tag_196:\n        /* \"contracts/MyToken.sol\":1522:1527  users */\n      dup3\n        /* \"contracts/MyToken.sol\":1522:1534  users.length */\n      mload\n        /* \"contracts/MyToken.sol\":1518:1519  i */\n      dup2\n        /* \"contracts/MyToken.sol\":1518:1534  i < users.length */\n      lt\n        /* \"contracts/MyToken.sol\":1498:1606  for (uint256 i = 0; i < users.length; i++) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/MyToken.sol\":1556:1594  addDividendsUser(users[i], amounts[i]) */\n      tag_199\n        /* \"contracts/MyToken.sol\":1573:1578  users */\n      dup4\n        /* \"contracts/MyToken.sol\":1579:1580  i */\n      dup3\n        /* \"contracts/MyToken.sol\":1573:1581  users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_201\n      tag_158\n      jump\t// in\n    tag_201:\n    tag_200:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/MyToken.sol\":1583:1590  amounts */\n      dup4\n        /* \"contracts/MyToken.sol\":1591:1592  i */\n      dup4\n        /* \"contracts/MyToken.sol\":1583:1593  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_202\n      jumpi\n      tag_203\n      tag_158\n      jump\t// in\n    tag_203:\n    tag_202:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/MyToken.sol\":1556:1572  addDividendsUser */\n      tag_104\n        /* \"contracts/MyToken.sol\":1556:1594  addDividendsUser(users[i], amounts[i]) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/MyToken.sol\":1536:1539  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":1498:1606  for (uint256 i = 0; i < users.length; i++) {... */\n      jump(tag_196)\n    tag_197:\n      pop\n        /* \"contracts/MyToken.sol\":1361:1613  function addBatchDividendsUsers(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2408:2804  function claimDividends() external {... */\n    tag_76:\n        /* \"contracts/MyToken.sol\":2454:2468  uint256 amount */\n      0x00\n        /* \"contracts/MyToken.sol\":2471:2480  dividends */\n      0x06\n        /* \"contracts/MyToken.sol\":2471:2492  dividends[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":2481:2491  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2471:2492  dividends[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":2454:2492  uint256 amount = dividends[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2520:2521  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2511:2517  amount */\n      dup2\n        /* \"contracts/MyToken.sol\":2511:2521  amount > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":2503:2547  require(amount > 0, \"No dividends to claim\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"contracts/MyToken.sol\":2584:2585  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2560:2569  dividends */\n      0x06\n        /* \"contracts/MyToken.sol\":2560:2581  dividends[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":2570:2580  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2560:2581  dividends[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":2560:2585  dividends[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2628:2634  amount */\n      dup1\n        /* \"contracts/MyToken.sol\":2596:2612  claimedDividends */\n      0x07\n        /* \"contracts/MyToken.sol\":2596:2624  claimedDividends[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":2613:2623  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2596:2624  claimedDividends[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyToken.sol\":2596:2634  claimedDividends[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2648:2657  bool sent */\n      0x00\n        /* \"contracts/MyToken.sol\":2663:2673  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2663:2678  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2686:2692  amount */\n      dup3\n        /* \"contracts/MyToken.sol\":2663:2697  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_213\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_212)\n    tag_213:\n      0x60\n      swap2\n      pop\n    tag_212:\n      pop\n        /* \"contracts/MyToken.sol\":2647:2697  (bool sent, ) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2716:2720  sent */\n      dup1\n        /* \"contracts/MyToken.sol\":2708:2743  require(sent, \"Failed to send MTK\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"contracts/MyToken.sol\":2777:2787  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2761:2796  DividendClaimed(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5efa67896a23b651b741b525caacba039c00ca7853be3de8eb1f4269e8669c56\n        /* \"contracts/MyToken.sol\":2789:2795  amount */\n      dup4\n        /* \"contracts/MyToken.sol\":2761:2796  DividendClaimed(msg.sender, amount) */\n      mload(0x40)\n      tag_217\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MyToken.sol\":2443:2804  {... */\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":2408:2804  function claimDividends() external {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":242:286  mapping(address => uint256) public dividends */\n    tag_81:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":314:365  mapping(address => uint256) public claimedDividends */\n    tag_94:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2850:2984  function getClaimableDividents(... */\n    tag_99:\n        /* \"contracts/MyToken.sol\":2934:2941  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":2961:2970  dividends */\n      0x06\n        /* \"contracts/MyToken.sol\":2961:2976  dividends[user] */\n      0x00\n        /* \"contracts/MyToken.sol\":2971:2975  user */\n      dup4\n        /* \"contracts/MyToken.sol\":2961:2976  dividends[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":2954:2976  return dividends[user] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2850:2984  function getClaimableDividents(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1130:1312  function addDividendsUser(address user, uint256 amount) public onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/MyToken.sol\":1238:1241  0x0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1222:1242  user != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1222:1226  user */\n      dup3\n        /* \"contracts/MyToken.sol\":1222:1242  user != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken.sol\":1214:1267  require(user != address(0x0), \"you can't input 0x00\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/MyToken.sol\":1298:1304  amount */\n      dup1\n        /* \"contracts/MyToken.sol\":1280:1289  dividends */\n      0x06\n        /* \"contracts/MyToken.sol\":1280:1295  dividends[user] */\n      0x00\n        /* \"contracts/MyToken.sol\":1290:1294  user */\n      dup5\n        /* \"contracts/MyToken.sol\":1280:1295  dividends[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1280:1304  dividends[user] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1130:1312  function addDividendsUser(address user, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_233\n      swap1\n      tag_170\n      jump\t// in\n    tag_233:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_234\n      swap1\n      tag_170\n      jump\t// in\n    tag_234:\n      dup1\n      iszero\n      tag_235\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_236\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_235)\n    tag_236:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_237:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_237\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":418:447  uint256 public totalDividends */\n    tag_116:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":911:1010  function burn(address from, uint256 amount) public onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/MyToken.sol\":983:1002  _burn(from, amount) */\n      tag_241\n        /* \"contracts/MyToken.sol\":989:993  from */\n      dup3\n        /* \"contracts/MyToken.sol\":995:1001  amount */\n      dup3\n        /* \"contracts/MyToken.sol\":983:988  _burn */\n      tag_242\n        /* \"contracts/MyToken.sol\":983:1002  _burn(from, amount) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/MyToken.sol\":911:1010  function burn(address from, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_248\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2992:3181  function getTokenHolders() internal view returns (address[] memory) {... */\n    tag_152:\n        /* \"contracts/MyToken.sol\":3042:3058  address[] memory */\n      0x60\n        /* \"contracts/MyToken.sol\":3071:3095  address[] memory holders */\n      0x00\n        /* \"contracts/MyToken.sol\":3112:3113  1 */\n      0x01\n        /* \"contracts/MyToken.sol\":3098:3114  new address[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_260\n      jumpi\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n    tag_260:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_263\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_263:\n      pop\n        /* \"contracts/MyToken.sol\":3071:3114  address[] memory holders = new address[](1) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":3138:3148  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":3125:3132  holders */\n      dup2\n        /* \"contracts/MyToken.sol\":3133:3134  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":3125:3135  holders[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_264\n      jumpi\n      tag_265\n      tag_158\n      jump\t// in\n    tag_265:\n    tag_264:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/MyToken.sol\":3125:3148  holders[0] = msg.sender */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":3166:3173  holders */\n      dup1\n        /* \"contracts/MyToken.sol\":3159:3173  return holders */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":2992:3181  function getTokenHolders() internal view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_299\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_302\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_302:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_303)\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_307)\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_308\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_309:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_310:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_311:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_312:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_313:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_362\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_309\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":711:782   */\n      tag_363\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_310\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_364\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_311\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":881:910   */\n      tag_365\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_312\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_37:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_367\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_313\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_314:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_315:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_316:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_317:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_318:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_373\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_317\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_319:\n        /* \"#utility.yul\":1876:1900   */\n      tag_375\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_318\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_376:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_320:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_378\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_319\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_321:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_322:\n        /* \"#utility.yul\":2232:2256   */\n      tag_381\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_321\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_382:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_323:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_384\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_322\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_41:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_387\n      tag_315\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2525:2644   */\n    tag_386:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_388\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_320\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_389\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_323\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_324:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_325:\n        /* \"#utility.yul\":3089:3110   */\n      tag_392\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_324\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_44:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_394\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_325\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_326:\n        /* \"#utility.yul\":3426:3450   */\n      tag_396\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_321\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_49:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_398\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_326\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_53:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_401\n      tag_315\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3801:3920   */\n    tag_400:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_402\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_320\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_403\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_320\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_404\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_323\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_327:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_328:\n        /* \"#utility.yul\":4491:4513   */\n      tag_407\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_327\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_64:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_409\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_328\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4863   */\n    tag_329:\n        /* \"#utility.yul\":4855:4856   */\n      0x00\n        /* \"#utility.yul\":4852:4853   */\n      0x00\n        /* \"#utility.yul\":4845:4857   */\n      revert\n        /* \"#utility.yul\":4869:5049   */\n    tag_262:\n        /* \"#utility.yul\":4917:4994   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4914:4915   */\n      0x00\n        /* \"#utility.yul\":4907:4995   */\n      mstore\n        /* \"#utility.yul\":5014:5018   */\n      0x41\n        /* \"#utility.yul\":5011:5012   */\n      0x04\n        /* \"#utility.yul\":5004:5019   */\n      mstore\n        /* \"#utility.yul\":5038:5042   */\n      0x24\n        /* \"#utility.yul\":5035:5036   */\n      0x00\n        /* \"#utility.yul\":5028:5043   */\n      revert\n        /* \"#utility.yul\":5055:5336   */\n    tag_330:\n        /* \"#utility.yul\":5138:5165   */\n      tag_413\n        /* \"#utility.yul\":5160:5164   */\n      dup3\n        /* \"#utility.yul\":5138:5165   */\n      tag_312\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5130:5136   */\n      dup2\n        /* \"#utility.yul\":5126:5166   */\n      add\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5256:5266   */\n      dup2\n        /* \"#utility.yul\":5253:5275   */\n      lt\n        /* \"#utility.yul\":5232:5250   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5220:5230   */\n      dup3\n        /* \"#utility.yul\":5217:5251   */\n      gt\n        /* \"#utility.yul\":5214:5276   */\n      or\n        /* \"#utility.yul\":5211:5299   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":5279:5297   */\n      tag_415\n      tag_262\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5211:5299   */\n    tag_414:\n        /* \"#utility.yul\":5319:5329   */\n      dup1\n        /* \"#utility.yul\":5315:5317   */\n      0x40\n        /* \"#utility.yul\":5308:5330   */\n      mstore\n        /* \"#utility.yul\":5098:5336   */\n      pop\n        /* \"#utility.yul\":5055:5336   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5342:5471   */\n    tag_331:\n        /* \"#utility.yul\":5376:5382   */\n      0x00\n        /* \"#utility.yul\":5403:5423   */\n      tag_417\n      tag_314\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5393:5423   */\n      swap1\n      pop\n        /* \"#utility.yul\":5432:5465   */\n      tag_418\n        /* \"#utility.yul\":5460:5464   */\n      dup3\n        /* \"#utility.yul\":5452:5458   */\n      dup3\n        /* \"#utility.yul\":5432:5465   */\n      tag_330\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5342:5471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5477:5788   */\n    tag_332:\n        /* \"#utility.yul\":5554:5558   */\n      0x00\n        /* \"#utility.yul\":5644:5662   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5636:5642   */\n      dup3\n        /* \"#utility.yul\":5633:5663   */\n      gt\n        /* \"#utility.yul\":5630:5686   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":5666:5684   */\n      tag_421\n      tag_262\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5630:5686   */\n    tag_420:\n        /* \"#utility.yul\":5716:5720   */\n      0x20\n        /* \"#utility.yul\":5708:5714   */\n      dup3\n        /* \"#utility.yul\":5704:5721   */\n      mul\n        /* \"#utility.yul\":5696:5721   */\n      swap1\n      pop\n        /* \"#utility.yul\":5776:5780   */\n      0x20\n        /* \"#utility.yul\":5770:5774   */\n      dup2\n        /* \"#utility.yul\":5766:5781   */\n      add\n        /* \"#utility.yul\":5758:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5477:5788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5794:5911   */\n    tag_333:\n        /* \"#utility.yul\":5903:5904   */\n      0x00\n        /* \"#utility.yul\":5900:5901   */\n      0x00\n        /* \"#utility.yul\":5893:5905   */\n      revert\n        /* \"#utility.yul\":5934:6644   */\n    tag_334:\n        /* \"#utility.yul\":6030:6035   */\n      0x00\n        /* \"#utility.yul\":6055:6136   */\n      tag_424\n        /* \"#utility.yul\":6071:6135   */\n      tag_425\n        /* \"#utility.yul\":6128:6134   */\n      dup5\n        /* \"#utility.yul\":6071:6135   */\n      tag_332\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6055:6136   */\n      tag_331\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6046:6136   */\n      swap1\n      pop\n        /* \"#utility.yul\":6156:6161   */\n      dup1\n        /* \"#utility.yul\":6185:6191   */\n      dup4\n        /* \"#utility.yul\":6178:6183   */\n      dup3\n        /* \"#utility.yul\":6171:6192   */\n      mstore\n        /* \"#utility.yul\":6219:6223   */\n      0x20\n        /* \"#utility.yul\":6212:6217   */\n      dup3\n        /* \"#utility.yul\":6208:6224   */\n      add\n        /* \"#utility.yul\":6201:6224   */\n      swap1\n      pop\n        /* \"#utility.yul\":6272:6276   */\n      0x20\n        /* \"#utility.yul\":6264:6270   */\n      dup5\n        /* \"#utility.yul\":6260:6277   */\n      mul\n        /* \"#utility.yul\":6252:6258   */\n      dup4\n        /* \"#utility.yul\":6248:6278   */\n      add\n        /* \"#utility.yul\":6301:6304   */\n      dup6\n        /* \"#utility.yul\":6293:6299   */\n      dup2\n        /* \"#utility.yul\":6290:6305   */\n      gt\n        /* \"#utility.yul\":6287:6409   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":6320:6399   */\n      tag_427\n      tag_333\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":6287:6409   */\n    tag_426:\n        /* \"#utility.yul\":6435:6441   */\n      dup4\n        /* \"#utility.yul\":6418:6638   */\n    tag_428:\n        /* \"#utility.yul\":6452:6458   */\n      dup2\n        /* \"#utility.yul\":6447:6450   */\n      dup2\n        /* \"#utility.yul\":6444:6459   */\n      lt\n        /* \"#utility.yul\":6418:6638   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":6527:6530   */\n      dup1\n        /* \"#utility.yul\":6556:6593   */\n      tag_431\n        /* \"#utility.yul\":6589:6592   */\n      dup9\n        /* \"#utility.yul\":6577:6587   */\n      dup3\n        /* \"#utility.yul\":6556:6593   */\n      tag_320\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6551:6554   */\n      dup5\n        /* \"#utility.yul\":6544:6594   */\n      mstore\n        /* \"#utility.yul\":6623:6627   */\n      0x20\n        /* \"#utility.yul\":6618:6621   */\n      dup5\n        /* \"#utility.yul\":6614:6628   */\n      add\n        /* \"#utility.yul\":6607:6628   */\n      swap4\n      pop\n        /* \"#utility.yul\":6494:6638   */\n      pop\n        /* \"#utility.yul\":6478:6482   */\n      0x20\n        /* \"#utility.yul\":6473:6476   */\n      dup2\n        /* \"#utility.yul\":6469:6483   */\n      add\n        /* \"#utility.yul\":6462:6483   */\n      swap1\n      pop\n        /* \"#utility.yul\":6418:6638   */\n      jump(tag_428)\n    tag_430:\n        /* \"#utility.yul\":6422:6443   */\n      pop\n        /* \"#utility.yul\":6036:6644   */\n      pop\n      pop\n        /* \"#utility.yul\":5934:6644   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:7037   */\n    tag_335:\n        /* \"#utility.yul\":6738:6743   */\n      0x00\n        /* \"#utility.yul\":6787:6790   */\n      dup3\n        /* \"#utility.yul\":6780:6784   */\n      0x1f\n        /* \"#utility.yul\":6772:6778   */\n      dup4\n        /* \"#utility.yul\":6768:6785   */\n      add\n        /* \"#utility.yul\":6764:6791   */\n      slt\n        /* \"#utility.yul\":6754:6876   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":6795:6874   */\n      tag_434\n      tag_329\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6754:6876   */\n    tag_433:\n        /* \"#utility.yul\":6912:6918   */\n      dup2\n        /* \"#utility.yul\":6899:6919   */\n      calldataload\n        /* \"#utility.yul\":6937:7031   */\n      tag_435\n        /* \"#utility.yul\":7027:7030   */\n      dup5\n        /* \"#utility.yul\":7019:7025   */\n      dup3\n        /* \"#utility.yul\":7012:7016   */\n      0x20\n        /* \"#utility.yul\":7004:7010   */\n      dup7\n        /* \"#utility.yul\":7000:7017   */\n      add\n        /* \"#utility.yul\":6937:7031   */\n      tag_334\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6928:7031   */\n      swap2\n      pop\n        /* \"#utility.yul\":6744:7037   */\n      pop\n        /* \"#utility.yul\":6667:7037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7043:7354   */\n    tag_336:\n        /* \"#utility.yul\":7120:7124   */\n      0x00\n        /* \"#utility.yul\":7210:7228   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7202:7208   */\n      dup3\n        /* \"#utility.yul\":7199:7229   */\n      gt\n        /* \"#utility.yul\":7196:7252   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":7232:7250   */\n      tag_438\n      tag_262\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7196:7252   */\n    tag_437:\n        /* \"#utility.yul\":7282:7286   */\n      0x20\n        /* \"#utility.yul\":7274:7280   */\n      dup3\n        /* \"#utility.yul\":7270:7287   */\n      mul\n        /* \"#utility.yul\":7262:7287   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7346   */\n      0x20\n        /* \"#utility.yul\":7336:7340   */\n      dup2\n        /* \"#utility.yul\":7332:7347   */\n      add\n        /* \"#utility.yul\":7324:7347   */\n      swap1\n      pop\n        /* \"#utility.yul\":7043:7354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7377:8087   */\n    tag_337:\n        /* \"#utility.yul\":7473:7478   */\n      0x00\n        /* \"#utility.yul\":7498:7579   */\n      tag_440\n        /* \"#utility.yul\":7514:7578   */\n      tag_441\n        /* \"#utility.yul\":7571:7577   */\n      dup5\n        /* \"#utility.yul\":7514:7578   */\n      tag_336\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7498:7579   */\n      tag_331\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7489:7579   */\n      swap1\n      pop\n        /* \"#utility.yul\":7599:7604   */\n      dup1\n        /* \"#utility.yul\":7628:7634   */\n      dup4\n        /* \"#utility.yul\":7621:7626   */\n      dup3\n        /* \"#utility.yul\":7614:7635   */\n      mstore\n        /* \"#utility.yul\":7662:7666   */\n      0x20\n        /* \"#utility.yul\":7655:7660   */\n      dup3\n        /* \"#utility.yul\":7651:7667   */\n      add\n        /* \"#utility.yul\":7644:7667   */\n      swap1\n      pop\n        /* \"#utility.yul\":7715:7719   */\n      0x20\n        /* \"#utility.yul\":7707:7713   */\n      dup5\n        /* \"#utility.yul\":7703:7720   */\n      mul\n        /* \"#utility.yul\":7695:7701   */\n      dup4\n        /* \"#utility.yul\":7691:7721   */\n      add\n        /* \"#utility.yul\":7744:7747   */\n      dup6\n        /* \"#utility.yul\":7736:7742   */\n      dup2\n        /* \"#utility.yul\":7733:7748   */\n      gt\n        /* \"#utility.yul\":7730:7852   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":7763:7842   */\n      tag_443\n      tag_333\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":7730:7852   */\n    tag_442:\n        /* \"#utility.yul\":7878:7884   */\n      dup4\n        /* \"#utility.yul\":7861:8081   */\n    tag_444:\n        /* \"#utility.yul\":7895:7901   */\n      dup2\n        /* \"#utility.yul\":7890:7893   */\n      dup2\n        /* \"#utility.yul\":7887:7902   */\n      lt\n        /* \"#utility.yul\":7861:8081   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":7970:7973   */\n      dup1\n        /* \"#utility.yul\":7999:8036   */\n      tag_447\n        /* \"#utility.yul\":8032:8035   */\n      dup9\n        /* \"#utility.yul\":8020:8030   */\n      dup3\n        /* \"#utility.yul\":7999:8036   */\n      tag_323\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7994:7997   */\n      dup5\n        /* \"#utility.yul\":7987:8037   */\n      mstore\n        /* \"#utility.yul\":8066:8070   */\n      0x20\n        /* \"#utility.yul\":8061:8064   */\n      dup5\n        /* \"#utility.yul\":8057:8071   */\n      add\n        /* \"#utility.yul\":8050:8071   */\n      swap4\n      pop\n        /* \"#utility.yul\":7937:8081   */\n      pop\n        /* \"#utility.yul\":7921:7925   */\n      0x20\n        /* \"#utility.yul\":7916:7919   */\n      dup2\n        /* \"#utility.yul\":7912:7926   */\n      add\n        /* \"#utility.yul\":7905:7926   */\n      swap1\n      pop\n        /* \"#utility.yul\":7861:8081   */\n      jump(tag_444)\n    tag_446:\n        /* \"#utility.yul\":7865:7886   */\n      pop\n        /* \"#utility.yul\":7479:8087   */\n      pop\n      pop\n        /* \"#utility.yul\":7377:8087   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8110:8480   */\n    tag_338:\n        /* \"#utility.yul\":8181:8186   */\n      0x00\n        /* \"#utility.yul\":8230:8233   */\n      dup3\n        /* \"#utility.yul\":8223:8227   */\n      0x1f\n        /* \"#utility.yul\":8215:8221   */\n      dup4\n        /* \"#utility.yul\":8211:8228   */\n      add\n        /* \"#utility.yul\":8207:8234   */\n      slt\n        /* \"#utility.yul\":8197:8319   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":8238:8317   */\n      tag_450\n      tag_329\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8197:8319   */\n    tag_449:\n        /* \"#utility.yul\":8355:8361   */\n      dup2\n        /* \"#utility.yul\":8342:8362   */\n      calldataload\n        /* \"#utility.yul\":8380:8474   */\n      tag_451\n        /* \"#utility.yul\":8470:8473   */\n      dup5\n        /* \"#utility.yul\":8462:8468   */\n      dup3\n        /* \"#utility.yul\":8455:8459   */\n      0x20\n        /* \"#utility.yul\":8447:8453   */\n      dup7\n        /* \"#utility.yul\":8443:8460   */\n      add\n        /* \"#utility.yul\":8380:8474   */\n      tag_337\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8371:8474   */\n      swap2\n      pop\n        /* \"#utility.yul\":8187:8480   */\n      pop\n        /* \"#utility.yul\":8110:8480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8486:9380   */\n    tag_72:\n        /* \"#utility.yul\":8604:8610   */\n      0x00\n        /* \"#utility.yul\":8612:8618   */\n      0x00\n        /* \"#utility.yul\":8661:8663   */\n      0x40\n        /* \"#utility.yul\":8649:8658   */\n      dup4\n        /* \"#utility.yul\":8640:8647   */\n      dup6\n        /* \"#utility.yul\":8636:8659   */\n      sub\n        /* \"#utility.yul\":8632:8664   */\n      slt\n        /* \"#utility.yul\":8629:8748   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":8667:8746   */\n      tag_454\n      tag_315\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8629:8748   */\n    tag_453:\n        /* \"#utility.yul\":8815:8816   */\n      0x00\n        /* \"#utility.yul\":8804:8813   */\n      dup4\n        /* \"#utility.yul\":8800:8817   */\n      add\n        /* \"#utility.yul\":8787:8818   */\n      calldataload\n        /* \"#utility.yul\":8845:8863   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8837:8843   */\n      dup2\n        /* \"#utility.yul\":8834:8864   */\n      gt\n        /* \"#utility.yul\":8831:8948   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":8867:8946   */\n      tag_456\n      tag_316\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8831:8948   */\n    tag_455:\n        /* \"#utility.yul\":8972:9050   */\n      tag_457\n        /* \"#utility.yul\":9042:9049   */\n      dup6\n        /* \"#utility.yul\":9033:9039   */\n      dup3\n        /* \"#utility.yul\":9022:9031   */\n      dup7\n        /* \"#utility.yul\":9018:9040   */\n      add\n        /* \"#utility.yul\":8972:9050   */\n      tag_335\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8962:9050   */\n      swap3\n      pop\n        /* \"#utility.yul\":8758:9060   */\n      pop\n        /* \"#utility.yul\":9127:9129   */\n      0x20\n        /* \"#utility.yul\":9116:9125   */\n      dup4\n        /* \"#utility.yul\":9112:9130   */\n      add\n        /* \"#utility.yul\":9099:9131   */\n      calldataload\n        /* \"#utility.yul\":9158:9176   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9150:9156   */\n      dup2\n        /* \"#utility.yul\":9147:9177   */\n      gt\n        /* \"#utility.yul\":9144:9261   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":9180:9259   */\n      tag_459\n      tag_316\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9144:9261   */\n    tag_458:\n        /* \"#utility.yul\":9285:9363   */\n      tag_460\n        /* \"#utility.yul\":9355:9362   */\n      dup6\n        /* \"#utility.yul\":9346:9352   */\n      dup3\n        /* \"#utility.yul\":9335:9344   */\n      dup7\n        /* \"#utility.yul\":9331:9353   */\n      add\n        /* \"#utility.yul\":9285:9363   */\n      tag_338\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9275:9363   */\n      swap2\n      pop\n        /* \"#utility.yul\":9070:9373   */\n      pop\n        /* \"#utility.yul\":8486:9380   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9386:9715   */\n    tag_80:\n        /* \"#utility.yul\":9445:9451   */\n      0x00\n        /* \"#utility.yul\":9494:9496   */\n      0x20\n        /* \"#utility.yul\":9482:9491   */\n      dup3\n        /* \"#utility.yul\":9473:9480   */\n      dup5\n        /* \"#utility.yul\":9469:9492   */\n      sub\n        /* \"#utility.yul\":9465:9497   */\n      slt\n        /* \"#utility.yul\":9462:9581   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":9500:9579   */\n      tag_463\n      tag_315\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9462:9581   */\n    tag_462:\n        /* \"#utility.yul\":9620:9621   */\n      0x00\n        /* \"#utility.yul\":9645:9698   */\n      tag_464\n        /* \"#utility.yul\":9690:9697   */\n      dup5\n        /* \"#utility.yul\":9681:9687   */\n      dup3\n        /* \"#utility.yul\":9670:9679   */\n      dup6\n        /* \"#utility.yul\":9666:9688   */\n      add\n        /* \"#utility.yul\":9645:9698   */\n      tag_320\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9635:9698   */\n      swap2\n      pop\n        /* \"#utility.yul\":9591:9708   */\n      pop\n        /* \"#utility.yul\":9386:9715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9721:9839   */\n    tag_339:\n        /* \"#utility.yul\":9808:9832   */\n      tag_466\n        /* \"#utility.yul\":9826:9831   */\n      dup2\n        /* \"#utility.yul\":9808:9832   */\n      tag_318\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9803:9806   */\n      dup3\n        /* \"#utility.yul\":9796:9833   */\n      mstore\n        /* \"#utility.yul\":9721:9839   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9845:10067   */\n    tag_109:\n        /* \"#utility.yul\":9938:9942   */\n      0x00\n        /* \"#utility.yul\":9976:9978   */\n      0x20\n        /* \"#utility.yul\":9965:9974   */\n      dup3\n        /* \"#utility.yul\":9961:9979   */\n      add\n        /* \"#utility.yul\":9953:9979   */\n      swap1\n      pop\n        /* \"#utility.yul\":9989:10060   */\n      tag_468\n        /* \"#utility.yul\":10057:10058   */\n      0x00\n        /* \"#utility.yul\":10046:10055   */\n      dup4\n        /* \"#utility.yul\":10042:10059   */\n      add\n        /* \"#utility.yul\":10033:10039   */\n      dup5\n        /* \"#utility.yul\":9989:10060   */\n      tag_339\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9845:10067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10073:10547   */\n    tag_130:\n        /* \"#utility.yul\":10141:10147   */\n      0x00\n        /* \"#utility.yul\":10149:10155   */\n      0x00\n        /* \"#utility.yul\":10198:10200   */\n      0x40\n        /* \"#utility.yul\":10186:10195   */\n      dup4\n        /* \"#utility.yul\":10177:10184   */\n      dup6\n        /* \"#utility.yul\":10173:10196   */\n      sub\n        /* \"#utility.yul\":10169:10201   */\n      slt\n        /* \"#utility.yul\":10166:10285   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":10204:10283   */\n      tag_471\n      tag_315\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10166:10285   */\n    tag_470:\n        /* \"#utility.yul\":10324:10325   */\n      0x00\n        /* \"#utility.yul\":10349:10402   */\n      tag_472\n        /* \"#utility.yul\":10394:10401   */\n      dup6\n        /* \"#utility.yul\":10385:10391   */\n      dup3\n        /* \"#utility.yul\":10374:10383   */\n      dup7\n        /* \"#utility.yul\":10370:10392   */\n      add\n        /* \"#utility.yul\":10349:10402   */\n      tag_320\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10339:10402   */\n      swap3\n      pop\n        /* \"#utility.yul\":10295:10412   */\n      pop\n        /* \"#utility.yul\":10451:10453   */\n      0x20\n        /* \"#utility.yul\":10477:10530   */\n      tag_473\n        /* \"#utility.yul\":10522:10529   */\n      dup6\n        /* \"#utility.yul\":10513:10519   */\n      dup3\n        /* \"#utility.yul\":10502:10511   */\n      dup7\n        /* \"#utility.yul\":10498:10520   */\n      add\n        /* \"#utility.yul\":10477:10530   */\n      tag_320\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10467:10530   */\n      swap2\n      pop\n        /* \"#utility.yul\":10422:10540   */\n      pop\n        /* \"#utility.yul\":10073:10547   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10553:10728   */\n    tag_340:\n        /* \"#utility.yul\":10693:10720   */\n      0x4e6f204d544b2073656e7420666f72206469766964656e647300000000000000\n        /* \"#utility.yul\":10689:10690   */\n      0x00\n        /* \"#utility.yul\":10681:10687   */\n      dup3\n        /* \"#utility.yul\":10677:10691   */\n      add\n        /* \"#utility.yul\":10670:10721   */\n      mstore\n        /* \"#utility.yul\":10553:10728   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10734:11100   */\n    tag_341:\n        /* \"#utility.yul\":10876:10879   */\n      0x00\n        /* \"#utility.yul\":10897:10964   */\n      tag_476\n        /* \"#utility.yul\":10961:10963   */\n      0x19\n        /* \"#utility.yul\":10956:10959   */\n      dup4\n        /* \"#utility.yul\":10897:10964   */\n      tag_310\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10890:10964   */\n      swap2\n      pop\n        /* \"#utility.yul\":10973:11066   */\n      tag_477\n        /* \"#utility.yul\":11062:11065   */\n      dup3\n        /* \"#utility.yul\":10973:11066   */\n      tag_340\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11091:11093   */\n      0x20\n        /* \"#utility.yul\":11086:11089   */\n      dup3\n        /* \"#utility.yul\":11082:11094   */\n      add\n        /* \"#utility.yul\":11075:11094   */\n      swap1\n      pop\n        /* \"#utility.yul\":10734:11100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11106:11525   */\n    tag_143:\n        /* \"#utility.yul\":11272:11276   */\n      0x00\n        /* \"#utility.yul\":11310:11312   */\n      0x20\n        /* \"#utility.yul\":11299:11308   */\n      dup3\n        /* \"#utility.yul\":11295:11313   */\n      add\n        /* \"#utility.yul\":11287:11313   */\n      swap1\n      pop\n        /* \"#utility.yul\":11359:11368   */\n      dup2\n        /* \"#utility.yul\":11353:11357   */\n      dup2\n        /* \"#utility.yul\":11349:11369   */\n      sub\n        /* \"#utility.yul\":11345:11346   */\n      0x00\n        /* \"#utility.yul\":11334:11343   */\n      dup4\n        /* \"#utility.yul\":11330:11347   */\n      add\n        /* \"#utility.yul\":11323:11370   */\n      mstore\n        /* \"#utility.yul\":11387:11518   */\n      tag_479\n        /* \"#utility.yul\":11513:11517   */\n      dup2\n        /* \"#utility.yul\":11387:11518   */\n      tag_341\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11379:11518   */\n      swap1\n      pop\n        /* \"#utility.yul\":11106:11525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11531:11697   */\n    tag_342:\n        /* \"#utility.yul\":11671:11689   */\n      0x4e6f20746f6b656e732069737375656400000000000000000000000000000000\n        /* \"#utility.yul\":11667:11668   */\n      0x00\n        /* \"#utility.yul\":11659:11665   */\n      dup3\n        /* \"#utility.yul\":11655:11669   */\n      add\n        /* \"#utility.yul\":11648:11690   */\n      mstore\n        /* \"#utility.yul\":11531:11697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11703:12069   */\n    tag_343:\n        /* \"#utility.yul\":11845:11848   */\n      0x00\n        /* \"#utility.yul\":11866:11933   */\n      tag_482\n        /* \"#utility.yul\":11930:11932   */\n      0x10\n        /* \"#utility.yul\":11925:11928   */\n      dup4\n        /* \"#utility.yul\":11866:11933   */\n      tag_310\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11859:11933   */\n      swap2\n      pop\n        /* \"#utility.yul\":11942:12035   */\n      tag_483\n        /* \"#utility.yul\":12031:12034   */\n      dup3\n        /* \"#utility.yul\":11942:12035   */\n      tag_342\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12060:12062   */\n      0x20\n        /* \"#utility.yul\":12055:12058   */\n      dup3\n        /* \"#utility.yul\":12051:12063   */\n      add\n        /* \"#utility.yul\":12044:12063   */\n      swap1\n      pop\n        /* \"#utility.yul\":11703:12069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12075:12494   */\n    tag_147:\n        /* \"#utility.yul\":12241:12245   */\n      0x00\n        /* \"#utility.yul\":12279:12281   */\n      0x20\n        /* \"#utility.yul\":12268:12277   */\n      dup3\n        /* \"#utility.yul\":12264:12282   */\n      add\n        /* \"#utility.yul\":12256:12282   */\n      swap1\n      pop\n        /* \"#utility.yul\":12328:12337   */\n      dup2\n        /* \"#utility.yul\":12322:12326   */\n      dup2\n        /* \"#utility.yul\":12318:12338   */\n      sub\n        /* \"#utility.yul\":12314:12315   */\n      0x00\n        /* \"#utility.yul\":12303:12312   */\n      dup4\n        /* \"#utility.yul\":12299:12316   */\n      add\n        /* \"#utility.yul\":12292:12339   */\n      mstore\n        /* \"#utility.yul\":12356:12487   */\n      tag_485\n        /* \"#utility.yul\":12482:12486   */\n      dup2\n        /* \"#utility.yul\":12356:12487   */\n      tag_343\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12348:12487   */\n      swap1\n      pop\n        /* \"#utility.yul\":12075:12494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12500:12680   */\n    tag_344:\n        /* \"#utility.yul\":12548:12625   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12545:12546   */\n      0x00\n        /* \"#utility.yul\":12538:12626   */\n      mstore\n        /* \"#utility.yul\":12645:12649   */\n      0x11\n        /* \"#utility.yul\":12642:12643   */\n      0x04\n        /* \"#utility.yul\":12635:12650   */\n      mstore\n        /* \"#utility.yul\":12669:12673   */\n      0x24\n        /* \"#utility.yul\":12666:12667   */\n      0x00\n        /* \"#utility.yul\":12659:12674   */\n      revert\n        /* \"#utility.yul\":12686:12877   */\n    tag_149:\n        /* \"#utility.yul\":12726:12729   */\n      0x00\n        /* \"#utility.yul\":12745:12765   */\n      tag_488\n        /* \"#utility.yul\":12763:12764   */\n      dup3\n        /* \"#utility.yul\":12745:12765   */\n      tag_321\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12740:12765   */\n      swap2\n      pop\n        /* \"#utility.yul\":12779:12799   */\n      tag_489\n        /* \"#utility.yul\":12797:12798   */\n      dup4\n        /* \"#utility.yul\":12779:12799   */\n      tag_321\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":12774:12799   */\n      swap3\n      pop\n        /* \"#utility.yul\":12822:12823   */\n      dup3\n        /* \"#utility.yul\":12819:12820   */\n      dup3\n        /* \"#utility.yul\":12815:12824   */\n      add\n        /* \"#utility.yul\":12808:12824   */\n      swap1\n      pop\n        /* \"#utility.yul\":12843:12846   */\n      dup1\n        /* \"#utility.yul\":12840:12841   */\n      dup3\n        /* \"#utility.yul\":12837:12847   */\n      gt\n        /* \"#utility.yul\":12834:12870   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":12850:12868   */\n      tag_491\n      tag_344\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12834:12870   */\n    tag_490:\n        /* \"#utility.yul\":12686:12877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12883:13063   */\n    tag_158:\n        /* \"#utility.yul\":12931:13008   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12928:12929   */\n      0x00\n        /* \"#utility.yul\":12921:13009   */\n      mstore\n        /* \"#utility.yul\":13028:13032   */\n      0x32\n        /* \"#utility.yul\":13025:13026   */\n      0x04\n        /* \"#utility.yul\":13018:13033   */\n      mstore\n        /* \"#utility.yul\":13052:13056   */\n      0x24\n        /* \"#utility.yul\":13049:13050   */\n      0x00\n        /* \"#utility.yul\":13042:13057   */\n      revert\n        /* \"#utility.yul\":13069:13479   */\n    tag_162:\n        /* \"#utility.yul\":13109:13116   */\n      0x00\n        /* \"#utility.yul\":13132:13152   */\n      tag_494\n        /* \"#utility.yul\":13150:13151   */\n      dup3\n        /* \"#utility.yul\":13132:13152   */\n      tag_321\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13127:13152   */\n      swap2\n      pop\n        /* \"#utility.yul\":13166:13186   */\n      tag_495\n        /* \"#utility.yul\":13184:13185   */\n      dup4\n        /* \"#utility.yul\":13166:13186   */\n      tag_321\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13161:13186   */\n      swap3\n      pop\n        /* \"#utility.yul\":13221:13222   */\n      dup3\n        /* \"#utility.yul\":13218:13219   */\n      dup3\n        /* \"#utility.yul\":13214:13223   */\n      mul\n        /* \"#utility.yul\":13243:13273   */\n      tag_496\n        /* \"#utility.yul\":13261:13272   */\n      dup2\n        /* \"#utility.yul\":13243:13273   */\n      tag_321\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13232:13273   */\n      swap2\n      pop\n        /* \"#utility.yul\":13422:13423   */\n      dup3\n        /* \"#utility.yul\":13413:13420   */\n      dup3\n        /* \"#utility.yul\":13409:13424   */\n      div\n        /* \"#utility.yul\":13406:13407   */\n      dup5\n        /* \"#utility.yul\":13403:13425   */\n      eq\n        /* \"#utility.yul\":13383:13384   */\n      dup4\n        /* \"#utility.yul\":13376:13385   */\n      iszero\n        /* \"#utility.yul\":13356:13439   */\n      or\n        /* \"#utility.yul\":13333:13472   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":13452:13470   */\n      tag_498\n      tag_344\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13333:13472   */\n    tag_497:\n        /* \"#utility.yul\":13117:13479   */\n      pop\n        /* \"#utility.yul\":13069:13479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13485:13665   */\n    tag_345:\n        /* \"#utility.yul\":13533:13610   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13530:13531   */\n      0x00\n        /* \"#utility.yul\":13523:13611   */\n      mstore\n        /* \"#utility.yul\":13630:13634   */\n      0x12\n        /* \"#utility.yul\":13627:13628   */\n      0x04\n        /* \"#utility.yul\":13620:13635   */\n      mstore\n        /* \"#utility.yul\":13654:13658   */\n      0x24\n        /* \"#utility.yul\":13651:13652   */\n      0x00\n        /* \"#utility.yul\":13644:13659   */\n      revert\n        /* \"#utility.yul\":13671:13856   */\n    tag_164:\n        /* \"#utility.yul\":13711:13712   */\n      0x00\n        /* \"#utility.yul\":13728:13748   */\n      tag_501\n        /* \"#utility.yul\":13746:13747   */\n      dup3\n        /* \"#utility.yul\":13728:13748   */\n      tag_321\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":13723:13748   */\n      swap2\n      pop\n        /* \"#utility.yul\":13762:13782   */\n      tag_502\n        /* \"#utility.yul\":13780:13781   */\n      dup4\n        /* \"#utility.yul\":13762:13782   */\n      tag_321\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13757:13782   */\n      swap3\n      pop\n        /* \"#utility.yul\":13801:13802   */\n      dup3\n        /* \"#utility.yul\":13791:13826   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":13806:13824   */\n      tag_504\n      tag_345\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13791:13826   */\n    tag_503:\n        /* \"#utility.yul\":13848:13849   */\n      dup3\n        /* \"#utility.yul\":13845:13846   */\n      dup3\n        /* \"#utility.yul\":13841:13850   */\n      div\n        /* \"#utility.yul\":13836:13850   */\n      swap1\n      pop\n        /* \"#utility.yul\":13671:13856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13862:14194   */\n    tag_167:\n        /* \"#utility.yul\":13983:13987   */\n      0x00\n        /* \"#utility.yul\":14021:14023   */\n      0x40\n        /* \"#utility.yul\":14010:14019   */\n      dup3\n        /* \"#utility.yul\":14006:14024   */\n      add\n        /* \"#utility.yul\":13998:14024   */\n      swap1\n      pop\n        /* \"#utility.yul\":14034:14105   */\n      tag_506\n        /* \"#utility.yul\":14102:14103   */\n      0x00\n        /* \"#utility.yul\":14091:14100   */\n      dup4\n        /* \"#utility.yul\":14087:14104   */\n      add\n        /* \"#utility.yul\":14078:14084   */\n      dup6\n        /* \"#utility.yul\":14034:14105   */\n      tag_326\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14115:14187   */\n      tag_507\n        /* \"#utility.yul\":14183:14185   */\n      0x20\n        /* \"#utility.yul\":14172:14181   */\n      dup4\n        /* \"#utility.yul\":14168:14186   */\n      add\n        /* \"#utility.yul\":14159:14165   */\n      dup5\n        /* \"#utility.yul\":14115:14187   */\n      tag_326\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13862:14194   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14200:14380   */\n    tag_346:\n        /* \"#utility.yul\":14248:14325   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14245:14246   */\n      0x00\n        /* \"#utility.yul\":14238:14326   */\n      mstore\n        /* \"#utility.yul\":14345:14349   */\n      0x22\n        /* \"#utility.yul\":14342:14343   */\n      0x04\n        /* \"#utility.yul\":14335:14350   */\n      mstore\n        /* \"#utility.yul\":14369:14373   */\n      0x24\n        /* \"#utility.yul\":14366:14367   */\n      0x00\n        /* \"#utility.yul\":14359:14374   */\n      revert\n        /* \"#utility.yul\":14386:14706   */\n    tag_170:\n        /* \"#utility.yul\":14430:14436   */\n      0x00\n        /* \"#utility.yul\":14467:14468   */\n      0x02\n        /* \"#utility.yul\":14461:14465   */\n      dup3\n        /* \"#utility.yul\":14457:14469   */\n      div\n        /* \"#utility.yul\":14447:14469   */\n      swap1\n      pop\n        /* \"#utility.yul\":14514:14515   */\n      0x01\n        /* \"#utility.yul\":14508:14512   */\n      dup3\n        /* \"#utility.yul\":14504:14516   */\n      and\n        /* \"#utility.yul\":14535:14553   */\n      dup1\n        /* \"#utility.yul\":14525:14606   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":14591:14595   */\n      0x7f\n        /* \"#utility.yul\":14583:14589   */\n      dup3\n        /* \"#utility.yul\":14579:14596   */\n      and\n        /* \"#utility.yul\":14569:14596   */\n      swap2\n      pop\n        /* \"#utility.yul\":14525:14606   */\n    tag_510:\n        /* \"#utility.yul\":14653:14655   */\n      0x20\n        /* \"#utility.yul\":14645:14651   */\n      dup3\n        /* \"#utility.yul\":14642:14656   */\n      lt\n        /* \"#utility.yul\":14622:14640   */\n      dup2\n        /* \"#utility.yul\":14619:14657   */\n      sub\n        /* \"#utility.yul\":14616:14700   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":14672:14690   */\n      tag_512\n      tag_346\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14616:14700   */\n    tag_511:\n        /* \"#utility.yul\":14437:14706   */\n      pop\n        /* \"#utility.yul\":14386:14706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14712:14883   */\n    tag_347:\n        /* \"#utility.yul\":14852:14875   */\n      0x4e6f206469766964656e647320746f20636c61696d0000000000000000000000\n        /* \"#utility.yul\":14848:14849   */\n      0x00\n        /* \"#utility.yul\":14840:14846   */\n      dup3\n        /* \"#utility.yul\":14836:14850   */\n      add\n        /* \"#utility.yul\":14829:14876   */\n      mstore\n        /* \"#utility.yul\":14712:14883   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14889:15255   */\n    tag_348:\n        /* \"#utility.yul\":15031:15034   */\n      0x00\n        /* \"#utility.yul\":15052:15119   */\n      tag_515\n        /* \"#utility.yul\":15116:15118   */\n      0x15\n        /* \"#utility.yul\":15111:15114   */\n      dup4\n        /* \"#utility.yul\":15052:15119   */\n      tag_310\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":15045:15119   */\n      swap2\n      pop\n        /* \"#utility.yul\":15128:15221   */\n      tag_516\n        /* \"#utility.yul\":15217:15220   */\n      dup3\n        /* \"#utility.yul\":15128:15221   */\n      tag_347\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":15246:15248   */\n      0x20\n        /* \"#utility.yul\":15241:15244   */\n      dup3\n        /* \"#utility.yul\":15237:15249   */\n      add\n        /* \"#utility.yul\":15230:15249   */\n      swap1\n      pop\n        /* \"#utility.yul\":14889:15255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15261:15680   */\n    tag_207:\n        /* \"#utility.yul\":15427:15431   */\n      0x00\n        /* \"#utility.yul\":15465:15467   */\n      0x20\n        /* \"#utility.yul\":15454:15463   */\n      dup3\n        /* \"#utility.yul\":15450:15468   */\n      add\n        /* \"#utility.yul\":15442:15468   */\n      swap1\n      pop\n        /* \"#utility.yul\":15514:15523   */\n      dup2\n        /* \"#utility.yul\":15508:15512   */\n      dup2\n        /* \"#utility.yul\":15504:15524   */\n      sub\n        /* \"#utility.yul\":15500:15501   */\n      0x00\n        /* \"#utility.yul\":15489:15498   */\n      dup4\n        /* \"#utility.yul\":15485:15502   */\n      add\n        /* \"#utility.yul\":15478:15525   */\n      mstore\n        /* \"#utility.yul\":15542:15673   */\n      tag_518\n        /* \"#utility.yul\":15668:15672   */\n      dup2\n        /* \"#utility.yul\":15542:15673   */\n      tag_348\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15534:15673   */\n      swap1\n      pop\n        /* \"#utility.yul\":15261:15680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15686:15833   */\n    tag_349:\n        /* \"#utility.yul\":15787:15798   */\n      0x00\n        /* \"#utility.yul\":15824:15827   */\n      dup2\n        /* \"#utility.yul\":15809:15827   */\n      swap1\n      pop\n        /* \"#utility.yul\":15686:15833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15839:15953   */\n    tag_350:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15959:16357   */\n    tag_351:\n        /* \"#utility.yul\":16118:16121   */\n      0x00\n        /* \"#utility.yul\":16139:16222   */\n      tag_522\n        /* \"#utility.yul\":16220:16221   */\n      0x00\n        /* \"#utility.yul\":16215:16218   */\n      dup4\n        /* \"#utility.yul\":16139:16222   */\n      tag_349\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":16132:16222   */\n      swap2\n      pop\n        /* \"#utility.yul\":16231:16324   */\n      tag_523\n        /* \"#utility.yul\":16320:16323   */\n      dup3\n        /* \"#utility.yul\":16231:16324   */\n      tag_350\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":16349:16350   */\n      0x00\n        /* \"#utility.yul\":16344:16347   */\n      dup3\n        /* \"#utility.yul\":16340:16351   */\n      add\n        /* \"#utility.yul\":16333:16351   */\n      swap1\n      pop\n        /* \"#utility.yul\":15959:16357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16363:16742   */\n    tag_210:\n        /* \"#utility.yul\":16547:16550   */\n      0x00\n        /* \"#utility.yul\":16569:16716   */\n      tag_525\n        /* \"#utility.yul\":16712:16715   */\n      dup3\n        /* \"#utility.yul\":16569:16716   */\n      tag_351\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":16562:16716   */\n      swap2\n      pop\n        /* \"#utility.yul\":16733:16736   */\n      dup2\n        /* \"#utility.yul\":16726:16736   */\n      swap1\n      pop\n        /* \"#utility.yul\":16363:16742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16748:16916   */\n    tag_352:\n        /* \"#utility.yul\":16888:16908   */\n      0x4661696c656420746f2073656e64204d544b0000000000000000000000000000\n        /* \"#utility.yul\":16884:16885   */\n      0x00\n        /* \"#utility.yul\":16876:16882   */\n      dup3\n        /* \"#utility.yul\":16872:16886   */\n      add\n        /* \"#utility.yul\":16865:16909   */\n      mstore\n        /* \"#utility.yul\":16748:16916   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16922:17288   */\n    tag_353:\n        /* \"#utility.yul\":17064:17067   */\n      0x00\n        /* \"#utility.yul\":17085:17152   */\n      tag_528\n        /* \"#utility.yul\":17149:17151   */\n      0x12\n        /* \"#utility.yul\":17144:17147   */\n      dup4\n        /* \"#utility.yul\":17085:17152   */\n      tag_310\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":17078:17152   */\n      swap2\n      pop\n        /* \"#utility.yul\":17161:17254   */\n      tag_529\n        /* \"#utility.yul\":17250:17253   */\n      dup3\n        /* \"#utility.yul\":17161:17254   */\n      tag_352\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":17279:17281   */\n      0x20\n        /* \"#utility.yul\":17274:17277   */\n      dup3\n        /* \"#utility.yul\":17270:17282   */\n      add\n        /* \"#utility.yul\":17263:17282   */\n      swap1\n      pop\n        /* \"#utility.yul\":16922:17288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17294:17713   */\n    tag_216:\n        /* \"#utility.yul\":17460:17464   */\n      0x00\n        /* \"#utility.yul\":17498:17500   */\n      0x20\n        /* \"#utility.yul\":17487:17496   */\n      dup3\n        /* \"#utility.yul\":17483:17501   */\n      add\n        /* \"#utility.yul\":17475:17501   */\n      swap1\n      pop\n        /* \"#utility.yul\":17547:17556   */\n      dup2\n        /* \"#utility.yul\":17541:17545   */\n      dup2\n        /* \"#utility.yul\":17537:17557   */\n      sub\n        /* \"#utility.yul\":17533:17534   */\n      0x00\n        /* \"#utility.yul\":17522:17531   */\n      dup4\n        /* \"#utility.yul\":17518:17535   */\n      add\n        /* \"#utility.yul\":17511:17558   */\n      mstore\n        /* \"#utility.yul\":17575:17706   */\n      tag_531\n        /* \"#utility.yul\":17701:17705   */\n      dup2\n        /* \"#utility.yul\":17575:17706   */\n      tag_353\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":17567:17706   */\n      swap1\n      pop\n        /* \"#utility.yul\":17294:17713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17719:17889   */\n    tag_354:\n        /* \"#utility.yul\":17859:17881   */\n      0x796f752063616e277420696e7075742030783030000000000000000000000000\n        /* \"#utility.yul\":17855:17856   */\n      0x00\n        /* \"#utility.yul\":17847:17853   */\n      dup3\n        /* \"#utility.yul\":17843:17857   */\n      add\n        /* \"#utility.yul\":17836:17882   */\n      mstore\n        /* \"#utility.yul\":17719:17889   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17895:18261   */\n    tag_355:\n        /* \"#utility.yul\":18037:18040   */\n      0x00\n        /* \"#utility.yul\":18058:18125   */\n      tag_534\n        /* \"#utility.yul\":18122:18124   */\n      0x14\n        /* \"#utility.yul\":18117:18120   */\n      dup4\n        /* \"#utility.yul\":18058:18125   */\n      tag_310\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":18051:18125   */\n      swap2\n      pop\n        /* \"#utility.yul\":18134:18227   */\n      tag_535\n        /* \"#utility.yul\":18223:18226   */\n      dup3\n        /* \"#utility.yul\":18134:18227   */\n      tag_354\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":18252:18254   */\n      0x20\n        /* \"#utility.yul\":18247:18250   */\n      dup3\n        /* \"#utility.yul\":18243:18255   */\n      add\n        /* \"#utility.yul\":18236:18255   */\n      swap1\n      pop\n        /* \"#utility.yul\":17895:18261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18267:18686   */\n    tag_230:\n        /* \"#utility.yul\":18433:18437   */\n      0x00\n        /* \"#utility.yul\":18471:18473   */\n      0x20\n        /* \"#utility.yul\":18460:18469   */\n      dup3\n        /* \"#utility.yul\":18456:18474   */\n      add\n        /* \"#utility.yul\":18448:18474   */\n      swap1\n      pop\n        /* \"#utility.yul\":18520:18529   */\n      dup2\n        /* \"#utility.yul\":18514:18518   */\n      dup2\n        /* \"#utility.yul\":18510:18530   */\n      sub\n        /* \"#utility.yul\":18506:18507   */\n      0x00\n        /* \"#utility.yul\":18495:18504   */\n      dup4\n        /* \"#utility.yul\":18491:18508   */\n      add\n        /* \"#utility.yul\":18484:18531   */\n      mstore\n        /* \"#utility.yul\":18548:18679   */\n      tag_537\n        /* \"#utility.yul\":18674:18678   */\n      dup2\n        /* \"#utility.yul\":18548:18679   */\n      tag_355\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":18540:18679   */\n      swap1\n      pop\n        /* \"#utility.yul\":18267:18686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18692:19134   */\n    tag_275:\n        /* \"#utility.yul\":18841:18845   */\n      0x00\n        /* \"#utility.yul\":18879:18881   */\n      0x60\n        /* \"#utility.yul\":18868:18877   */\n      dup3\n        /* \"#utility.yul\":18864:18882   */\n      add\n        /* \"#utility.yul\":18856:18882   */\n      swap1\n      pop\n        /* \"#utility.yul\":18892:18963   */\n      tag_539\n        /* \"#utility.yul\":18960:18961   */\n      0x00\n        /* \"#utility.yul\":18949:18958   */\n      dup4\n        /* \"#utility.yul\":18945:18962   */\n      add\n        /* \"#utility.yul\":18936:18942   */\n      dup7\n        /* \"#utility.yul\":18892:18963   */\n      tag_339\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":18973:19045   */\n      tag_540\n        /* \"#utility.yul\":19041:19043   */\n      0x20\n        /* \"#utility.yul\":19030:19039   */\n      dup4\n        /* \"#utility.yul\":19026:19044   */\n      add\n        /* \"#utility.yul\":19017:19023   */\n      dup6\n        /* \"#utility.yul\":18973:19045   */\n      tag_326\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":19055:19127   */\n      tag_541\n        /* \"#utility.yul\":19123:19125   */\n      0x40\n        /* \"#utility.yul\":19112:19121   */\n      dup4\n        /* \"#utility.yul\":19108:19126   */\n      add\n        /* \"#utility.yul\":19099:19105   */\n      dup5\n        /* \"#utility.yul\":19055:19127   */\n      tag_326\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":18692:19134   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122068e47c4c69cce0f571226e1a5f689007f19a528343b238a12c9308c27a79082b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_985": {
									"entryPoint": null,
									"id": 985,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 537,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 342,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 670,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7961:7",
										"nodeType": "YulBlock",
										"src": "0:7961:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "608:80:7",
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nativeSrc": "618:22:7",
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nativeSrc": "627:13:7",
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nativeSrc": "649:33:7",
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nativeSrc": "649:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:7",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:7",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:7",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nativeSrc": "771:274:7",
													"nodeType": "YulBlock",
													"src": "771:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:7",
																"nodeType": "YulBlock",
																"src": "817:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:7"
																			},
																			"nativeSrc": "819:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:7"
																		},
																		"nativeSrc": "819:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:7"
																		},
																		"nativeSrc": "788:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:7",
																		"nodeType": "YulLiteral",
																		"src": "813:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:7"
																},
																"nativeSrc": "784:32:7",
																"nodeType": "YulFunctionCall",
																"src": "784:32:7"
															},
															"nativeSrc": "781:119:7",
															"nodeType": "YulIf",
															"src": "781:119:7"
														},
														{
															"nativeSrc": "910:128:7",
															"nodeType": "YulBlock",
															"src": "910:128:7",
															"statements": [
																{
																	"nativeSrc": "925:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:7",
																		"nodeType": "YulLiteral",
																		"src": "939:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:7",
																			"nodeType": "YulTypedName",
																			"src": "929:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:7",
																	"nodeType": "YulAssignment",
																	"src": "954:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:7"
																				},
																				"nativeSrc": "996:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:7"
																		},
																		"nativeSrc": "964:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:7",
														"nodeType": "YulTypedName",
														"src": "741:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:7",
														"nodeType": "YulTypedName",
														"src": "752:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:7",
														"nodeType": "YulTypedName",
														"src": "764:6:7",
														"type": ""
													}
												],
												"src": "694:351:7"
											},
											{
												"body": {
													"nativeSrc": "1110:40:7",
													"nodeType": "YulBlock",
													"src": "1110:40:7",
													"statements": [
														{
															"nativeSrc": "1121:22:7",
															"nodeType": "YulAssignment",
															"src": "1121:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:7"
																},
																"nativeSrc": "1131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:7",
														"nodeType": "YulTypedName",
														"src": "1093:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:7",
														"nodeType": "YulTypedName",
														"src": "1103:6:7",
														"type": ""
													}
												],
												"src": "1051:99:7"
											},
											{
												"body": {
													"nativeSrc": "1184:152:7",
													"nodeType": "YulBlock",
													"src": "1184:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nativeSrc": "1194:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:7"
															},
															"nativeSrc": "1194:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:7"
																},
																"nativeSrc": "1291:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:7"
															},
															"nativeSrc": "1291:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:7"
																},
																"nativeSrc": "1315:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:7"
															},
															"nativeSrc": "1315:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:7"
											},
											{
												"body": {
													"nativeSrc": "1370:152:7",
													"nodeType": "YulBlock",
													"src": "1370:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:7"
																},
																"nativeSrc": "1380:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:7"
															},
															"nativeSrc": "1380:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:7"
																},
																"nativeSrc": "1477:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:7"
															},
															"nativeSrc": "1477:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:7"
																},
																"nativeSrc": "1501:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:7"
															},
															"nativeSrc": "1501:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:7"
											},
											{
												"body": {
													"nativeSrc": "1579:269:7",
													"nodeType": "YulBlock",
													"src": "1579:269:7",
													"statements": [
														{
															"nativeSrc": "1589:22:7",
															"nodeType": "YulAssignment",
															"src": "1589:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:7"
																},
																"nativeSrc": "1599:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:7"
																}
															]
														},
														{
															"nativeSrc": "1620:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:7"
																},
																"nativeSrc": "1646:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:7",
																"nodeType": "YulBlock",
																"src": "1697:51:7",
																"statements": [
																	{
																		"nativeSrc": "1711:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:7"
																			},
																			"nativeSrc": "1721:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:7"
																},
																"nativeSrc": "1670:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:7"
															},
															"nativeSrc": "1667:81:7",
															"nodeType": "YulIf",
															"src": "1667:81:7"
														},
														{
															"body": {
																"nativeSrc": "1800:42:7",
																"nodeType": "YulBlock",
																"src": "1800:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:7"
																			},
																			"nativeSrc": "1814:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:7"
																		},
																		"nativeSrc": "1814:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:7"
																		},
																		"nativeSrc": "1784:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:7"
																},
																"nativeSrc": "1761:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:7"
															},
															"nativeSrc": "1758:84:7",
															"nodeType": "YulIf",
															"src": "1758:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:7",
														"nodeType": "YulTypedName",
														"src": "1563:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:7",
														"nodeType": "YulTypedName",
														"src": "1572:6:7",
														"type": ""
													}
												],
												"src": "1528:320:7"
											},
											{
												"body": {
													"nativeSrc": "1908:87:7",
													"nodeType": "YulBlock",
													"src": "1908:87:7",
													"statements": [
														{
															"nativeSrc": "1918:11:7",
															"nodeType": "YulAssignment",
															"src": "1918:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:7",
																"nodeType": "YulIdentifier",
																"src": "1926:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:7"
																},
																"nativeSrc": "1939:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:7"
															},
															"nativeSrc": "1939:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:7"
														},
														{
															"nativeSrc": "1962:26:7",
															"nodeType": "YulAssignment",
															"src": "1962:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:7"
																},
																"nativeSrc": "1970:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:7",
														"nodeType": "YulTypedName",
														"src": "1895:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:7",
														"nodeType": "YulTypedName",
														"src": "1903:4:7",
														"type": ""
													}
												],
												"src": "1854:141:7"
											},
											{
												"body": {
													"nativeSrc": "2045:49:7",
													"nodeType": "YulBlock",
													"src": "2045:49:7",
													"statements": [
														{
															"nativeSrc": "2055:33:7",
															"nodeType": "YulAssignment",
															"src": "2055:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:7"
																		},
																		"nativeSrc": "2069:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:7"
																},
																"nativeSrc": "2065:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:7",
														"nodeType": "YulTypedName",
														"src": "2028:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:7",
														"nodeType": "YulTypedName",
														"src": "2038:6:7",
														"type": ""
													}
												],
												"src": "2001:93:7"
											},
											{
												"body": {
													"nativeSrc": "2153:54:7",
													"nodeType": "YulBlock",
													"src": "2153:54:7",
													"statements": [
														{
															"nativeSrc": "2163:37:7",
															"nodeType": "YulAssignment",
															"src": "2163:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:7"
																},
																"nativeSrc": "2184:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:7",
														"nodeType": "YulTypedName",
														"src": "2128:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:7",
														"nodeType": "YulTypedName",
														"src": "2134:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:7",
														"nodeType": "YulTypedName",
														"src": "2144:8:7",
														"type": ""
													}
												],
												"src": "2100:107:7"
											},
											{
												"body": {
													"nativeSrc": "2289:317:7",
													"nodeType": "YulBlock",
													"src": "2289:317:7",
													"statements": [
														{
															"nativeSrc": "2299:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:7"
																},
																"nativeSrc": "2316:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:7"
																},
																"nativeSrc": "2355:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:7",
															"nodeType": "YulAssignment",
															"src": "2461:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:7"
																},
																"nativeSrc": "2473:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:7"
																}
															]
														},
														{
															"nativeSrc": "2521:30:7",
															"nodeType": "YulAssignment",
															"src": "2521:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:7"
																		},
																		"nativeSrc": "2541:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:7"
																},
																"nativeSrc": "2530:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:7"
																}
															]
														},
														{
															"nativeSrc": "2560:40:7",
															"nodeType": "YulAssignment",
															"src": "2560:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:7"
																		},
																		"nativeSrc": "2580:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:7"
																},
																"nativeSrc": "2570:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:7",
														"nodeType": "YulTypedName",
														"src": "2250:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:7",
														"nodeType": "YulTypedName",
														"src": "2257:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:7",
														"nodeType": "YulTypedName",
														"src": "2269:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:7",
														"nodeType": "YulTypedName",
														"src": "2282:6:7",
														"type": ""
													}
												],
												"src": "2213:393:7"
											},
											{
												"body": {
													"nativeSrc": "2644:28:7",
													"nodeType": "YulBlock",
													"src": "2644:28:7",
													"statements": [
														{
															"nativeSrc": "2654:12:7",
															"nodeType": "YulAssignment",
															"src": "2654:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:7",
																"nodeType": "YulIdentifier",
																"src": "2661:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:7",
														"nodeType": "YulTypedName",
														"src": "2630:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:7",
														"nodeType": "YulTypedName",
														"src": "2640:3:7",
														"type": ""
													}
												],
												"src": "2612:60:7"
											},
											{
												"body": {
													"nativeSrc": "2738:82:7",
													"nodeType": "YulBlock",
													"src": "2738:82:7",
													"statements": [
														{
															"nativeSrc": "2748:66:7",
															"nodeType": "YulAssignment",
															"src": "2748:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:7"
																				},
																				"nativeSrc": "2788:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:7"
																		},
																		"nativeSrc": "2779:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:7"
																},
																"nativeSrc": "2761:53:7",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:7",
														"nodeType": "YulTypedName",
														"src": "2718:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:7",
														"nodeType": "YulTypedName",
														"src": "2728:9:7",
														"type": ""
													}
												],
												"src": "2678:142:7"
											},
											{
												"body": {
													"nativeSrc": "2873:28:7",
													"nodeType": "YulBlock",
													"src": "2873:28:7",
													"statements": [
														{
															"nativeSrc": "2883:12:7",
															"nodeType": "YulAssignment",
															"src": "2883:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:7",
																"nodeType": "YulIdentifier",
																"src": "2890:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:7",
														"nodeType": "YulTypedName",
														"src": "2859:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:7",
														"nodeType": "YulTypedName",
														"src": "2869:3:7",
														"type": ""
													}
												],
												"src": "2826:75:7"
											},
											{
												"body": {
													"nativeSrc": "2983:193:7",
													"nodeType": "YulBlock",
													"src": "2983:193:7",
													"statements": [
														{
															"nativeSrc": "2993:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:7"
																},
																"nativeSrc": "3017:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:7"
																				},
																				"nativeSrc": "3106:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:7"
																				},
																				"nativeSrc": "3127:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:7"
																		},
																		"nativeSrc": "3078:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:7"
																},
																"nativeSrc": "3065:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:7"
															},
															"nativeSrc": "3065:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:7",
														"nodeType": "YulTypedName",
														"src": "2960:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:7",
														"nodeType": "YulTypedName",
														"src": "2966:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:7",
														"nodeType": "YulTypedName",
														"src": "2974:7:7",
														"type": ""
													}
												],
												"src": "2907:269:7"
											},
											{
												"body": {
													"nativeSrc": "3231:24:7",
													"nodeType": "YulBlock",
													"src": "3231:24:7",
													"statements": [
														{
															"nativeSrc": "3241:8:7",
															"nodeType": "YulAssignment",
															"src": "3241:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:7",
																"nodeType": "YulLiteral",
																"src": "3248:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:7",
														"nodeType": "YulTypedName",
														"src": "3227:3:7",
														"type": ""
													}
												],
												"src": "3182:73:7"
											},
											{
												"body": {
													"nativeSrc": "3314:136:7",
													"nodeType": "YulBlock",
													"src": "3314:136:7",
													"statements": [
														{
															"nativeSrc": "3324:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:7"
																},
																"nativeSrc": "3338:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:7"
																},
																"nativeSrc": "3379:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:7"
															},
															"nativeSrc": "3379:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:7",
														"nodeType": "YulTypedName",
														"src": "3300:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:7",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"src": "3261:189:7"
											},
											{
												"body": {
													"nativeSrc": "3506:136:7",
													"nodeType": "YulBlock",
													"src": "3506:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:7",
																"nodeType": "YulBlock",
																"src": "3573:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:7"
																			},
																			"nativeSrc": "3587:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:7"
																		},
																		"nativeSrc": "3587:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:7"
																},
																"nativeSrc": "3523:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:7"
															},
															"nativeSrc": "3516:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:7",
																"nodeType": "YulBlock",
																"src": "3538:26:7",
																"statements": [
																	{
																		"nativeSrc": "3540:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:7"
																			},
																			"nativeSrc": "3549:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:7",
																"nodeType": "YulBlock",
																"src": "3520:2:7",
																"statements": []
															},
															"src": "3516:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:7",
														"nodeType": "YulTypedName",
														"src": "3494:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:7",
														"nodeType": "YulTypedName",
														"src": "3501:3:7",
														"type": ""
													}
												],
												"src": "3456:186:7"
											},
											{
												"body": {
													"nativeSrc": "3727:464:7",
													"nodeType": "YulBlock",
													"src": "3727:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:7",
																"nodeType": "YulBlock",
																"src": "3753:431:7",
																"statements": [
																	{
																		"nativeSrc": "3767:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:7"
																			},
																			"nativeSrc": "3783:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:7",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:7"
																					},
																					"nativeSrc": "3867:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:7"
																			},
																			"nativeSrc": "3853:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:7",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:7",
																			"nodeType": "YulBlock",
																			"src": "4054:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:7"
																			},
																			"nativeSrc": "4035:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:7"
																		},
																		"nativeSrc": "4032:49:7",
																		"nodeType": "YulIf",
																		"src": "4032:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:7"
																							},
																							"nativeSrc": "4150:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:7"
																					},
																					"nativeSrc": "4136:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:7"
																			},
																			"nativeSrc": "4094:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:7"
																		},
																		"nativeSrc": "4094:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:7"
																},
																"nativeSrc": "3741:11:7",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:7"
															},
															"nativeSrc": "3738:446:7",
															"nodeType": "YulIf",
															"src": "3738:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:7",
														"nodeType": "YulTypedName",
														"src": "3703:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:7",
														"nodeType": "YulTypedName",
														"src": "3710:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:7",
														"nodeType": "YulTypedName",
														"src": "3715:10:7",
														"type": ""
													}
												],
												"src": "3648:543:7"
											},
											{
												"body": {
													"nativeSrc": "4260:54:7",
													"nodeType": "YulBlock",
													"src": "4260:54:7",
													"statements": [
														{
															"nativeSrc": "4270:37:7",
															"nodeType": "YulAssignment",
															"src": "4270:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:7"
																},
																"nativeSrc": "4291:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:7",
														"nodeType": "YulTypedName",
														"src": "4235:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:7",
														"nodeType": "YulTypedName",
														"src": "4241:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:7",
														"nodeType": "YulTypedName",
														"src": "4251:8:7",
														"type": ""
													}
												],
												"src": "4197:117:7"
											},
											{
												"body": {
													"nativeSrc": "4371:118:7",
													"nodeType": "YulBlock",
													"src": "4371:118:7",
													"statements": [
														{
															"nativeSrc": "4381:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:7"
																				},
																				"nativeSrc": "4426:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:7"
																				},
																				"nativeSrc": "4441:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:7"
																		},
																		"nativeSrc": "4397:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:7"
																},
																"nativeSrc": "4393:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:7",
															"nodeType": "YulAssignment",
															"src": "4458:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:7"
																},
																"nativeSrc": "4468:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:7",
														"nodeType": "YulTypedName",
														"src": "4348:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:7",
														"nodeType": "YulTypedName",
														"src": "4354:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:7",
														"nodeType": "YulTypedName",
														"src": "4364:6:7",
														"type": ""
													}
												],
												"src": "4320:169:7"
											},
											{
												"body": {
													"nativeSrc": "4575:214:7",
													"nodeType": "YulBlock",
													"src": "4575:214:7",
													"statements": [
														{
															"nativeSrc": "4708:37:7",
															"nodeType": "YulAssignment",
															"src": "4708:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:7"
																},
																"nativeSrc": "4716:29:7",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:7"
																}
															]
														},
														{
															"nativeSrc": "4754:29:7",
															"nodeType": "YulAssignment",
															"src": "4754:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:7"
																		},
																		"nativeSrc": "4771:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:7"
																},
																"nativeSrc": "4762:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:7",
														"nodeType": "YulTypedName",
														"src": "4556:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:7",
														"nodeType": "YulTypedName",
														"src": "4562:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:7",
														"nodeType": "YulTypedName",
														"src": "4570:4:7",
														"type": ""
													}
												],
												"src": "4494:295:7"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:7",
													"nodeType": "YulBlock",
													"src": "4886:1303:7",
													"statements": [
														{
															"nativeSrc": "4897:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:7"
																},
																"nativeSrc": "4911:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:7",
																"nodeType": "YulBlock",
																"src": "5033:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:7"
																			},
																			"nativeSrc": "5035:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:7"
																		},
																		"nativeSrc": "5035:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:7"
																},
																"nativeSrc": "5002:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:7"
															},
															"nativeSrc": "4999:56:7",
															"nodeType": "YulIf",
															"src": "4999:56:7"
														},
														{
															"nativeSrc": "5065:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:7"
																		},
																		"nativeSrc": "5105:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:7"
																},
																"nativeSrc": "5079:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:7"
																},
																"nativeSrc": "5164:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:7"
															},
															"nativeSrc": "5164:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:7"
														},
														{
															"nativeSrc": "5241:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:7",
																"nodeType": "YulLiteral",
																"src": "5258:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:7",
															"nodeType": "YulAssignment",
															"src": "5269:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:7",
																"nodeType": "YulLiteral",
																"src": "5282:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:7",
																		"nodeType": "YulBlock",
																		"src": "5333:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:7"
																							},
																							"nativeSrc": "5374:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:7"
																					},
																					"nativeSrc": "5362:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:7"
																					},
																					"nativeSrc": "5412:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:7",
																					"nodeType": "YulBlock",
																					"src": "5530:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:7"
																												},
																												"nativeSrc": "5569:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:7"
																										},
																										"nativeSrc": "5563:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:7"
																								},
																								"nativeSrc": "5548:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:7"
																							},
																							"nativeSrc": "5548:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:7"
																						},
																						{
																							"nativeSrc": "5607:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:7",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:7"
																								},
																								"nativeSrc": "5617:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:7",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:7",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:7"
																								},
																								"nativeSrc": "5661:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:7"
																					},
																					"nativeSrc": "5493:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:7"
																				},
																				"nativeSrc": "5485:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:7",
																					"nodeType": "YulBlock",
																					"src": "5508:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:7"
																								},
																								"nativeSrc": "5515:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:7",
																					"nodeType": "YulBlock",
																					"src": "5489:3:7",
																					"statements": []
																				},
																				"src": "5485:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:7",
																					"nodeType": "YulBlock",
																					"src": "5729:156:7",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:7"
																										},
																										"nativeSrc": "5770:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:7"
																								},
																								"nativeSrc": "5764:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:7",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:7",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:7"
																												},
																												"nativeSrc": "5852:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:7"
																										},
																										"nativeSrc": "5822:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:7"
																								},
																								"nativeSrc": "5807:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:7"
																							},
																							"nativeSrc": "5807:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:7"
																					},
																					"nativeSrc": "5709:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:7"
																				},
																				"nativeSrc": "5706:179:7",
																				"nodeType": "YulIf",
																				"src": "5706:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:7",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:7"
																									},
																									"nativeSrc": "5915:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:7",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:7"
																							},
																							"nativeSrc": "5911:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:7"
																					},
																					"nativeSrc": "5898:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:7"
																				},
																				"nativeSrc": "5898:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:7",
																	"nodeType": "YulCase",
																	"src": "5326:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:7",
																		"nodeType": "YulBlock",
																		"src": "5961:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:7",
																					"nodeType": "YulBlock",
																					"src": "6012:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:7"
																										},
																										"nativeSrc": "6045:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:7"
																								},
																								"nativeSrc": "6039:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:7"
																				},
																				"nativeSrc": "6002:77:7",
																				"nodeType": "YulIf",
																				"src": "6002:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:7"
																							},
																							"nativeSrc": "6105:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:7"
																					},
																					"nativeSrc": "6092:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:7"
																				},
																				"nativeSrc": "6092:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:7"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:7",
																	"nodeType": "YulCase",
																	"src": "5953:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:7"
																},
																"nativeSrc": "5303:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:7"
															},
															"nativeSrc": "5296:887:7",
															"nodeType": "YulSwitch",
															"src": "5296:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:7",
														"nodeType": "YulTypedName",
														"src": "4875:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:7",
														"nodeType": "YulTypedName",
														"src": "4881:3:7",
														"type": ""
													}
												],
												"src": "4794:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6240:81:7",
													"nodeType": "YulBlock",
													"src": "6240:81:7",
													"statements": [
														{
															"nativeSrc": "6250:65:7",
															"nodeType": "YulAssignment",
															"src": "6250:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6265:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6265:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:42:7",
																		"nodeType": "YulLiteral",
																		"src": "6272:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:7"
																},
																"nativeSrc": "6261:54:7",
																"nodeType": "YulFunctionCall",
																"src": "6261:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6250:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6250:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6195:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6222:5:7",
														"nodeType": "YulTypedName",
														"src": "6222:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6232:7:7",
														"nodeType": "YulTypedName",
														"src": "6232:7:7",
														"type": ""
													}
												],
												"src": "6195:126:7"
											},
											{
												"body": {
													"nativeSrc": "6372:51:7",
													"nodeType": "YulBlock",
													"src": "6372:51:7",
													"statements": [
														{
															"nativeSrc": "6382:35:7",
															"nodeType": "YulAssignment",
															"src": "6382:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6411:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6411:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6393:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6393:17:7"
																},
																"nativeSrc": "6393:24:7",
																"nodeType": "YulFunctionCall",
																"src": "6393:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6382:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6382:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6327:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6354:5:7",
														"nodeType": "YulTypedName",
														"src": "6354:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6364:7:7",
														"nodeType": "YulTypedName",
														"src": "6364:7:7",
														"type": ""
													}
												],
												"src": "6327:96:7"
											},
											{
												"body": {
													"nativeSrc": "6494:53:7",
													"nodeType": "YulBlock",
													"src": "6494:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:7"
																		},
																		"nativeSrc": "6516:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:7"
																},
																"nativeSrc": "6504:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:7"
															},
															"nativeSrc": "6504:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:7",
														"nodeType": "YulTypedName",
														"src": "6482:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:7",
														"nodeType": "YulTypedName",
														"src": "6489:3:7",
														"type": ""
													}
												],
												"src": "6429:118:7"
											},
											{
												"body": {
													"nativeSrc": "6651:124:7",
													"nodeType": "YulBlock",
													"src": "6651:124:7",
													"statements": [
														{
															"nativeSrc": "6661:26:7",
															"nodeType": "YulAssignment",
															"src": "6661:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:7"
																},
																"nativeSrc": "6669:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:7"
																		},
																		"nativeSrc": "6750:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:7"
																},
																"nativeSrc": "6697:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:7"
															},
															"nativeSrc": "6697:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:7",
														"nodeType": "YulTypedName",
														"src": "6623:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:7",
														"nodeType": "YulTypedName",
														"src": "6635:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:7",
														"nodeType": "YulTypedName",
														"src": "6646:4:7",
														"type": ""
													}
												],
												"src": "6553:222:7"
											},
											{
												"body": {
													"nativeSrc": "6809:152:7",
													"nodeType": "YulBlock",
													"src": "6809:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:7"
																},
																"nativeSrc": "6819:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:7"
															},
															"nativeSrc": "6819:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:7"
																},
																"nativeSrc": "6916:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:7"
															},
															"nativeSrc": "6916:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:7"
																},
																"nativeSrc": "6940:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:7"
															},
															"nativeSrc": "6940:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:7"
											},
											{
												"body": {
													"nativeSrc": "7011:147:7",
													"nodeType": "YulBlock",
													"src": "7011:147:7",
													"statements": [
														{
															"nativeSrc": "7021:25:7",
															"nodeType": "YulAssignment",
															"src": "7021:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:7"
																},
																"nativeSrc": "7026:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:7"
																}
															]
														},
														{
															"nativeSrc": "7055:25:7",
															"nodeType": "YulAssignment",
															"src": "7055:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:7"
																},
																"nativeSrc": "7060:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:7"
																}
															]
														},
														{
															"nativeSrc": "7089:16:7",
															"nodeType": "YulAssignment",
															"src": "7089:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:7"
																},
																"nativeSrc": "7096:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:7",
																"nodeType": "YulBlock",
																"src": "7129:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:7"
																			},
																			"nativeSrc": "7131:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:7"
																		},
																		"nativeSrc": "7131:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:7"
																},
																"nativeSrc": "7118:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:7"
															},
															"nativeSrc": "7115:36:7",
															"nodeType": "YulIf",
															"src": "7115:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:7",
														"nodeType": "YulTypedName",
														"src": "6998:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:7",
														"nodeType": "YulTypedName",
														"src": "7001:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:7",
														"nodeType": "YulTypedName",
														"src": "7007:3:7",
														"type": ""
													}
												],
												"src": "6967:191:7"
											},
											{
												"body": {
													"nativeSrc": "7229:53:7",
													"nodeType": "YulBlock",
													"src": "7229:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:7"
																		},
																		"nativeSrc": "7251:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:7"
																},
																"nativeSrc": "7239:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:7"
															},
															"nativeSrc": "7239:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:7",
														"nodeType": "YulTypedName",
														"src": "7217:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:7",
														"nodeType": "YulTypedName",
														"src": "7224:3:7",
														"type": ""
													}
												],
												"src": "7164:118:7"
											},
											{
												"body": {
													"nativeSrc": "7442:288:7",
													"nodeType": "YulBlock",
													"src": "7442:288:7",
													"statements": [
														{
															"nativeSrc": "7452:26:7",
															"nodeType": "YulAssignment",
															"src": "7452:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:7"
																},
																"nativeSrc": "7460:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:7"
																		},
																		"nativeSrc": "7541:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:7"
																},
																"nativeSrc": "7488:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:7"
															},
															"nativeSrc": "7488:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:7"
																		},
																		"nativeSrc": "7622:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:7"
																},
																"nativeSrc": "7569:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:7"
															},
															"nativeSrc": "7569:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:7"
																		},
																		"nativeSrc": "7704:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:7"
																},
																"nativeSrc": "7651:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:7"
															},
															"nativeSrc": "7651:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:7",
														"nodeType": "YulTypedName",
														"src": "7398:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:7",
														"nodeType": "YulTypedName",
														"src": "7410:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:7",
														"nodeType": "YulTypedName",
														"src": "7418:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:7",
														"nodeType": "YulTypedName",
														"src": "7426:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:7",
														"nodeType": "YulTypedName",
														"src": "7437:4:7",
														"type": ""
													}
												],
												"src": "7288:442:7"
											},
											{
												"body": {
													"nativeSrc": "7834:124:7",
													"nodeType": "YulBlock",
													"src": "7834:124:7",
													"statements": [
														{
															"nativeSrc": "7844:26:7",
															"nodeType": "YulAssignment",
															"src": "7844:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:7"
																},
																"nativeSrc": "7852:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:7"
																		},
																		"nativeSrc": "7933:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:7"
																},
																"nativeSrc": "7880:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:7"
															},
															"nativeSrc": "7880:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:7",
														"nodeType": "YulTypedName",
														"src": "7806:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:7",
														"nodeType": "YulTypedName",
														"src": "7818:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:7",
														"nodeType": "YulTypedName",
														"src": "7829:4:7",
														"type": ""
													}
												],
												"src": "7736:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2979 CODESIZE SUB DUP1 PUSH2 0x2979 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4EE JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x74D JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x156 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x150 CALLER DUP3 PUSH2 0x219 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x931 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x289 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29A PUSH0 DUP4 DUP4 PUSH2 0x29E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2EE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x8A1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3BC JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x377 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x403 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x44D JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP2 EQ PUSH2 0x4D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E8 DUP2 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x503 JUMPI PUSH2 0x502 PUSH2 0x4B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x510 DUP5 DUP3 DUP6 ADD PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x594 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5A7 JUMPI PUSH2 0x5A6 PUSH2 0x550 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x609 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x613 DUP7 DUP4 PUSH2 0x5CE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x64E PUSH2 0x649 PUSH2 0x644 DUP5 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x667 DUP4 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x67B PUSH2 0x673 DUP3 PUSH2 0x655 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5DA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x692 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x69D DUP2 DUP5 DUP5 PUSH2 0x65E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C0 JUMPI PUSH2 0x6B5 PUSH0 DUP3 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x705 JUMPI PUSH2 0x6D6 DUP2 PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x6DF DUP5 PUSH2 0x5BF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6EE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x702 PUSH2 0x6FA DUP6 PUSH2 0x5BF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6A2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x725 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x70A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x73D DUP4 DUP4 PUSH2 0x716 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x756 DUP3 PUSH2 0x519 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x76F JUMPI PUSH2 0x76E PUSH2 0x523 JUMP JUMPDEST JUMPDEST PUSH2 0x779 DUP3 SLOAD PUSH2 0x57D JUMP JUMPDEST PUSH2 0x784 DUP3 DUP3 DUP6 PUSH2 0x6C4 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7B5 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7A3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7AD DUP6 DUP3 PUSH2 0x732 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x814 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7C3 DUP7 PUSH2 0x5AD JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7EA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7C5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x807 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x803 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x716 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x845 DUP3 PUSH2 0x81C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x855 DUP2 PUSH2 0x83B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86E PUSH0 DUP4 ADD DUP5 PUSH2 0x84C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x8AB DUP3 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x8B6 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x874 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8DD DUP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8F6 PUSH0 DUP4 ADD DUP7 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x903 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x910 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x92B PUSH0 DUP4 ADD DUP5 PUSH2 0x8D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x203B DUP1 PUSH2 0x93E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x143 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x997664D7 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52A JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x7DFB3383 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x89D6047D EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x8AD0AAEF EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40C JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x2EB21B22 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x2EB21B22 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x6264786C EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x668038E0 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x68306E43 EQ PUSH2 0x2DE JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x3C83302 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E8 JUMPI PUSH2 0x14A JUMP JUMPDEST CALLDATASIZE PUSH2 0x14A JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x156 PUSH2 0x552 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x262 PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x884 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x36A PUSH2 0xAF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x420 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x474 PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55A PUSH2 0xE16 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5A5 PUSH2 0x7C3 JUMP JUMPDEST GT PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x60D PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x618 PUSH2 0xE9D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6D3 JUMPI PUSH0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0x1D08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 PUSH2 0x650 DUP3 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x6C4 JUMPI DUP5 DUP2 CALLVALUE PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x61F JUMP JUMPDEST POP PUSH32 0x2F588CF4BB0247B0F3F60E06187F92E6FD1DEAABB56E2BCC5672352337871327 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x705 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x720 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74C SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x797 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x76E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x797 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7AB PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH2 0x7B8 DUP2 DUP6 DUP6 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7D6 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E3 DUP6 DUP3 DUP6 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x7EE DUP6 DUP6 DUP6 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x810 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x81A DUP3 DUP3 PUSH2 0x10DD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x826 PUSH2 0xE16 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x87F JUMPI PUSH2 0x872 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x84A JUMPI PUSH2 0x849 PUSH2 0x1D08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x865 JUMPI PUSH2 0x864 PUSH2 0x1D08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xB5E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x82B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9C1 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5EFA67896A23B651B741B525CAACBA039C00CA7853BE3DE8EB1F4269E8669C56 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0xB01 PUSH0 PUSH2 0x115C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 PUSH2 0xE16 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC51 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC7D SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC9F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCE0 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0xCEA DUP3 DUP3 PUSH2 0x121F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xCF8 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH2 0xD05 DUP2 DUP6 DUP6 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD9A PUSH2 0xE16 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE13 DUP2 PUSH2 0x115C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE1E PUSH2 0xF41 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE3C PUSH2 0xC1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH2 0xE5F PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEBB JUMPI PUSH2 0xEBA PUSH2 0x18D5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEE9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP CALLER DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xF00 JUMPI PUSH2 0xEFF PUSH2 0x1D08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF55 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x129E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF65 DUP5 DUP5 PUSH2 0xD10 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFE7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFD8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFE6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x129E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1054 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D8 DUP4 DUP4 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1158 PUSH0 DUP4 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x128F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129A DUP3 PUSH0 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1467 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14BD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14B1 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x158B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1546 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15D2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1679 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16C8 DUP3 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x16D2 DUP2 DUP6 PUSH2 0x1690 JUMP JUMPDEST SWAP4 POP PUSH2 0x16E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x16EB DUP2 PUSH2 0x16AE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x170E DUP2 DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1750 DUP3 PUSH2 0x1727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1760 DUP2 PUSH2 0x1746 JUMP JUMPDEST DUP2 EQ PUSH2 0x176A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x177B DUP2 PUSH2 0x1757 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1793 DUP2 PUSH2 0x1781 JUMP JUMPDEST DUP2 EQ PUSH2 0x179D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AE DUP2 PUSH2 0x178A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CA JUMPI PUSH2 0x17C9 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D7 DUP6 DUP3 DUP7 ADD PUSH2 0x176D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E8 DUP6 DUP3 DUP7 ADD PUSH2 0x17A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1806 DUP2 PUSH2 0x17F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x181F PUSH0 DUP4 ADD DUP5 PUSH2 0x17FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x182E DUP2 PUSH2 0x1781 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1847 PUSH0 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1871 DUP7 DUP3 DUP8 ADD PUSH2 0x176D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1882 DUP7 DUP3 DUP8 ADD PUSH2 0x176D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1893 DUP7 DUP3 DUP8 ADD PUSH2 0x17A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B2 DUP2 PUSH2 0x189D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CB PUSH0 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x190B DUP3 PUSH2 0x16AE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x192A JUMPI PUSH2 0x1929 PUSH2 0x18D5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x193C PUSH2 0x1716 JUMP JUMPDEST SWAP1 POP PUSH2 0x1948 DUP3 DUP3 PUSH2 0x1902 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1967 JUMPI PUSH2 0x1966 PUSH2 0x18D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x198E PUSH2 0x1989 DUP5 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x1978 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19DA JUMPI DUP1 PUSH2 0x19C6 DUP9 DUP3 PUSH2 0x176D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19B3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19F8 JUMPI PUSH2 0x19F7 PUSH2 0x18D1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A08 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x197C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A2B JUMPI PUSH2 0x1A2A PUSH2 0x18D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4E PUSH2 0x1A49 DUP5 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A70 PUSH2 0x1978 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A9A JUMPI DUP1 PUSH2 0x1A86 DUP9 DUP3 PUSH2 0x17A0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A73 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x18D1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AC8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B04 JUMPI PUSH2 0x1B03 PUSH2 0x1723 JUMP JUMPDEST JUMPDEST PUSH2 0x1B10 DUP6 DUP3 DUP7 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B31 JUMPI PUSH2 0x1B30 PUSH2 0x1723 JUMP JUMPDEST JUMPDEST PUSH2 0x1B3D DUP6 DUP3 DUP7 ADD PUSH2 0x1AA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B69 DUP5 DUP3 DUP6 ADD PUSH2 0x176D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7B DUP2 PUSH2 0x1746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B94 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB0 JUMPI PUSH2 0x1BAF PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBD DUP6 DUP3 DUP7 ADD PUSH2 0x176D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BCE DUP6 DUP3 DUP7 ADD PUSH2 0x176D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F204D544B2073656E7420666F72206469766964656E647300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0C PUSH1 0x19 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C17 DUP3 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C39 DUP2 PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E732069737375656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C74 PUSH1 0x10 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7F DUP3 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA1 DUP2 PUSH2 0x1C68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CDF DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEA DUP4 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D3F DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4A DUP4 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D58 DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DAD DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB8 DUP4 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DC8 JUMPI PUSH2 0x1DC7 PUSH2 0x1D76 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1DF3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E3E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x1DFA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206469766964656E647320746F20636C61696D0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8B PUSH1 0x15 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E96 DUP3 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB8 DUP2 PUSH2 0x1E7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED7 PUSH0 DUP4 PUSH2 0x1EBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE2 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF6 DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204D544B0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F34 PUSH1 0x12 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3F DUP3 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F61 DUP2 PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x796F752063616E277420696E7075742030783030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9C PUSH1 0x14 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA7 DUP3 PUSH2 0x1F68 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC9 DUP2 PUSH2 0x1F90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FE3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1FF0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1FFD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xE47C4C69CCE0F57122 PUSH15 0x1A5F689007F19A528343B238A12C93 ADDMOD 0xC2 PUSH27 0x79082B64736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "174:3156:6:-:0;;;654:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;737:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;760:32:6::2;766:10;778:13;760:5;;;:32;;:::i;:::-;654:146:::0;174:3156;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3248:1;3241:8;;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;174:3156:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1265": {
									"entryPoint": null,
									"id": 1265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3912,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4766,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4639,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3606,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4317,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3905,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3930,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4444,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4077,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5229,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addBatchDividendsUsers_1075": {
									"entryPoint": 2078,
									"id": 1075,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addDividendsUser_1041": {
									"entryPoint": 2910,
									"id": 1041,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3344,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1953,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2731,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1015": {
									"entryPoint": 3288,
									"id": 1015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimDividends_1222": {
									"entryPoint": 2180,
									"id": 1222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimedDividends_949": {
									"entryPoint": 2819,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 2048,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@distributeDividends_1169": {
									"entryPoint": 1362,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dividends_945": {
									"entryPoint": 2710,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getClaimableDividents_1234": {
									"entryPoint": 2840,
									"id": 1234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenHolders_1261": {
									"entryPoint": 3741,
									"id": 1261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastDividendTimestamp_953": {
									"entryPoint": 2042,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1000": {
									"entryPoint": 2056,
									"id": 1000,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1809,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3098,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2800,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 3138,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalDividends_951": {
									"entryPoint": 3282,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1987,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1996,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3474,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 3310,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7635,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7674,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48": {
									"entryPoint": 7128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17": {
									"entryPoint": 8040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22": {
									"entryPoint": 7232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 7881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f": {
									"entryPoint": 7936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19137:7",
										"nodeType": "YulBlock",
										"src": "0:19137:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4835:28:7",
													"nodeType": "YulBlock",
													"src": "4835:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4852:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4852:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4855:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4845:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:7"
																},
																"nativeSrc": "4845:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4845:12:7"
															},
															"nativeSrc": "4845:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "4845:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4746:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4746:117:7"
											},
											{
												"body": {
													"nativeSrc": "4897:152:7",
													"nodeType": "YulBlock",
													"src": "4897:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4914:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4914:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4917:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4917:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4907:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4907:6:7"
																},
																"nativeSrc": "4907:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4907:88:7"
															},
															"nativeSrc": "4907:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4907:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5011:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5011:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5014:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5014:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:7"
																},
																"nativeSrc": "5004:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5004:15:7"
															},
															"nativeSrc": "5004:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5004:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5035:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5038:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5038:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5028:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:7"
																},
																"nativeSrc": "5028:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5028:15:7"
															},
															"nativeSrc": "5028:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5028:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4869:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4869:180:7"
											},
											{
												"body": {
													"nativeSrc": "5098:238:7",
													"nodeType": "YulBlock",
													"src": "5098:238:7",
													"statements": [
														{
															"nativeSrc": "5108:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5108:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5130:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5130:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5160:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5160:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5138:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "5138:21:7"
																		},
																		"nativeSrc": "5138:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5138:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5126:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5126:3:7"
																},
																"nativeSrc": "5126:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5126:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5112:10:7",
																	"nodeType": "YulTypedName",
																	"src": "5112:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5277:22:7",
																"nodeType": "YulBlock",
																"src": "5277:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5279:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5279:16:7"
																			},
																			"nativeSrc": "5279:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5279:18:7"
																		},
																		"nativeSrc": "5279:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5279:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5220:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "5220:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5232:18:7",
																				"nodeType": "YulLiteral",
																				"src": "5232:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5217:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5217:2:7"
																		},
																		"nativeSrc": "5217:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5217:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5256:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "5256:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5268:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5268:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5253:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5253:2:7"
																		},
																		"nativeSrc": "5253:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5253:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5214:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5214:2:7"
																},
																"nativeSrc": "5214:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5214:62:7"
															},
															"nativeSrc": "5211:88:7",
															"nodeType": "YulIf",
															"src": "5211:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5315:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5315:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5319:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5319:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5308:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:7"
																},
																"nativeSrc": "5308:22:7",
																"nodeType": "YulFunctionCall",
																"src": "5308:22:7"
															},
															"nativeSrc": "5308:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "5308:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5055:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5084:6:7",
														"nodeType": "YulTypedName",
														"src": "5084:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5092:4:7",
														"nodeType": "YulTypedName",
														"src": "5092:4:7",
														"type": ""
													}
												],
												"src": "5055:281:7"
											},
											{
												"body": {
													"nativeSrc": "5383:88:7",
													"nodeType": "YulBlock",
													"src": "5383:88:7",
													"statements": [
														{
															"nativeSrc": "5393:30:7",
															"nodeType": "YulAssignment",
															"src": "5393:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5403:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5403:18:7"
																},
																"nativeSrc": "5403:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5403:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5452:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5452:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5460:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5460:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5432:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "5432:19:7"
																},
																"nativeSrc": "5432:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5432:33:7"
															},
															"nativeSrc": "5432:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5432:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5342:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5367:4:7",
														"nodeType": "YulTypedName",
														"src": "5367:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5376:6:7",
														"nodeType": "YulTypedName",
														"src": "5376:6:7",
														"type": ""
													}
												],
												"src": "5342:129:7"
											},
											{
												"body": {
													"nativeSrc": "5559:229:7",
													"nodeType": "YulBlock",
													"src": "5559:229:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5664:22:7",
																"nodeType": "YulBlock",
																"src": "5664:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5666:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5666:16:7"
																			},
																			"nativeSrc": "5666:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5666:18:7"
																		},
																		"nativeSrc": "5666:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5666:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5636:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5636:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5644:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5644:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5633:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5633:2:7"
																},
																"nativeSrc": "5633:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5633:30:7"
															},
															"nativeSrc": "5630:56:7",
															"nodeType": "YulIf",
															"src": "5630:56:7"
														},
														{
															"nativeSrc": "5696:25:7",
															"nodeType": "YulAssignment",
															"src": "5696:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5708:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5708:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5716:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5716:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5704:3:7"
																},
																"nativeSrc": "5704:17:7",
																"nodeType": "YulFunctionCall",
																"src": "5704:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5696:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5696:4:7"
																}
															]
														},
														{
															"nativeSrc": "5758:23:7",
															"nodeType": "YulAssignment",
															"src": "5758:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5770:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5770:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5776:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5776:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5766:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5766:3:7"
																},
																"nativeSrc": "5766:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5766:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5758:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5758:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5477:311:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5543:6:7",
														"nodeType": "YulTypedName",
														"src": "5543:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5554:4:7",
														"nodeType": "YulTypedName",
														"src": "5554:4:7",
														"type": ""
													}
												],
												"src": "5477:311:7"
											},
											{
												"body": {
													"nativeSrc": "5883:28:7",
													"nodeType": "YulBlock",
													"src": "5883:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5900:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5900:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5903:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5903:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5893:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:7"
																},
																"nativeSrc": "5893:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5893:12:7"
															},
															"nativeSrc": "5893:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5893:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5794:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5794:117:7"
											},
											{
												"body": {
													"nativeSrc": "6036:608:7",
													"nodeType": "YulBlock",
													"src": "6036:608:7",
													"statements": [
														{
															"nativeSrc": "6046:90:7",
															"nodeType": "YulAssignment",
															"src": "6046:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6128:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6128:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "6071:56:7",
																			"nodeType": "YulIdentifier",
																			"src": "6071:56:7"
																		},
																		"nativeSrc": "6071:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6071:64:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6055:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "6055:15:7"
																},
																"nativeSrc": "6055:81:7",
																"nodeType": "YulFunctionCall",
																"src": "6055:81:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6046:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6046:5:7"
																}
															]
														},
														{
															"nativeSrc": "6145:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6145:16:7",
															"value": {
																"name": "array",
																"nativeSrc": "6156:5:7",
																"nodeType": "YulIdentifier",
																"src": "6156:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6149:3:7",
																	"nodeType": "YulTypedName",
																	"src": "6149:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6178:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6178:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6185:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6185:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6171:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:7"
																},
																"nativeSrc": "6171:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6171:21:7"
															},
															"nativeSrc": "6171:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6171:21:7"
														},
														{
															"nativeSrc": "6201:23:7",
															"nodeType": "YulAssignment",
															"src": "6201:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6212:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6212:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6219:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6219:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6208:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6208:3:7"
																},
																"nativeSrc": "6208:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6208:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6201:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6201:3:7"
																}
															]
														},
														{
															"nativeSrc": "6234:44:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6234:44:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6252:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6252:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6264:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6264:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6272:4:7",
																				"nodeType": "YulLiteral",
																				"src": "6272:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6260:3:7"
																		},
																		"nativeSrc": "6260:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6260:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6248:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6248:3:7"
																},
																"nativeSrc": "6248:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6248:30:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6238:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6238:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6306:103:7",
																"nodeType": "YulBlock",
																"src": "6306:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6320:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6320:77:7"
																			},
																			"nativeSrc": "6320:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6320:79:7"
																		},
																		"nativeSrc": "6320:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6320:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6293:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6293:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6301:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6301:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6290:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6290:2:7"
																},
																"nativeSrc": "6290:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6290:15:7"
															},
															"nativeSrc": "6287:122:7",
															"nodeType": "YulIf",
															"src": "6287:122:7"
														},
														{
															"body": {
																"nativeSrc": "6494:144:7",
																"nodeType": "YulBlock",
																"src": "6494:144:7",
																"statements": [
																	{
																		"nativeSrc": "6509:21:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6509:21:7",
																		"value": {
																			"name": "src",
																			"nativeSrc": "6527:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6527:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "6513:10:7",
																				"nodeType": "YulTypedName",
																				"src": "6513:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6551:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6551:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "6577:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6577:10:7"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "6589:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6589:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "6556:20:7",
																						"nodeType": "YulIdentifier",
																						"src": "6556:20:7"
																					},
																					"nativeSrc": "6556:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6556:37:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6544:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6544:6:7"
																			},
																			"nativeSrc": "6544:50:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6544:50:7"
																		},
																		"nativeSrc": "6544:50:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6544:50:7"
																	},
																	{
																		"nativeSrc": "6607:21:7",
																		"nodeType": "YulAssignment",
																		"src": "6607:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6618:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6618:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6623:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6623:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6614:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6614:3:7"
																			},
																			"nativeSrc": "6614:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6614:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6607:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6607:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6447:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6447:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6452:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6452:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6444:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6444:2:7"
																},
																"nativeSrc": "6444:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6444:15:7"
															},
															"nativeSrc": "6418:220:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6460:25:7",
																"nodeType": "YulBlock",
																"src": "6460:25:7",
																"statements": [
																	{
																		"nativeSrc": "6462:21:7",
																		"nodeType": "YulAssignment",
																		"src": "6462:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6473:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6473:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6478:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6478:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6469:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6469:3:7"
																			},
																			"nativeSrc": "6469:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6469:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6462:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6462:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6422:21:7",
																"nodeType": "YulBlock",
																"src": "6422:21:7",
																"statements": [
																	{
																		"nativeSrc": "6424:17:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6424:17:7",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "6435:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6435:6:7"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "6428:3:7",
																				"nodeType": "YulTypedName",
																				"src": "6428:3:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6418:220:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5934:710:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6006:6:7",
														"nodeType": "YulTypedName",
														"src": "6006:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6014:6:7",
														"nodeType": "YulTypedName",
														"src": "6014:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6022:3:7",
														"nodeType": "YulTypedName",
														"src": "6022:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6030:5:7",
														"nodeType": "YulTypedName",
														"src": "6030:5:7",
														"type": ""
													}
												],
												"src": "5934:710:7"
											},
											{
												"body": {
													"nativeSrc": "6744:293:7",
													"nodeType": "YulBlock",
													"src": "6744:293:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6793:83:7",
																"nodeType": "YulBlock",
																"src": "6793:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6795:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6795:77:7"
																			},
																			"nativeSrc": "6795:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6795:79:7"
																		},
																		"nativeSrc": "6795:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6795:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6780:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6780:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6768:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6768:3:7"
																				},
																				"nativeSrc": "6768:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6768:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6787:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6787:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6764:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6764:3:7"
																		},
																		"nativeSrc": "6764:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6764:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6757:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6757:6:7"
																},
																"nativeSrc": "6757:35:7",
																"nodeType": "YulFunctionCall",
																"src": "6757:35:7"
															},
															"nativeSrc": "6754:122:7",
															"nodeType": "YulIf",
															"src": "6754:122:7"
														},
														{
															"nativeSrc": "6885:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6885:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6912:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6912:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6899:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6899:12:7"
																},
																"nativeSrc": "6899:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6899:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6889:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6889:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6928:103:7",
															"nodeType": "YulAssignment",
															"src": "6928:103:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7004:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7004:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7012:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7012:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7000:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7000:3:7"
																		},
																		"nativeSrc": "7000:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7000:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7019:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7019:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7027:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7027:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6937:62:7",
																	"nodeType": "YulIdentifier",
																	"src": "6937:62:7"
																},
																"nativeSrc": "6937:94:7",
																"nodeType": "YulFunctionCall",
																"src": "6937:94:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6928:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6928:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6667:370:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6722:6:7",
														"nodeType": "YulTypedName",
														"src": "6722:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6730:3:7",
														"nodeType": "YulTypedName",
														"src": "6730:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6738:5:7",
														"nodeType": "YulTypedName",
														"src": "6738:5:7",
														"type": ""
													}
												],
												"src": "6667:370:7"
											},
											{
												"body": {
													"nativeSrc": "7125:229:7",
													"nodeType": "YulBlock",
													"src": "7125:229:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7230:22:7",
																"nodeType": "YulBlock",
																"src": "7230:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7232:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7232:16:7"
																			},
																			"nativeSrc": "7232:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7232:18:7"
																		},
																		"nativeSrc": "7232:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7232:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7202:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7202:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7210:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7210:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7199:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7199:2:7"
																},
																"nativeSrc": "7199:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7199:30:7"
															},
															"nativeSrc": "7196:56:7",
															"nodeType": "YulIf",
															"src": "7196:56:7"
														},
														{
															"nativeSrc": "7262:25:7",
															"nodeType": "YulAssignment",
															"src": "7262:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7274:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7274:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7282:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7282:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7270:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7270:3:7"
																},
																"nativeSrc": "7270:17:7",
																"nodeType": "YulFunctionCall",
																"src": "7270:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7262:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7262:4:7"
																}
															]
														},
														{
															"nativeSrc": "7324:23:7",
															"nodeType": "YulAssignment",
															"src": "7324:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7336:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7336:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7342:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7342:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7332:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7332:3:7"
																},
																"nativeSrc": "7332:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7332:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7324:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7324:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7043:311:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7109:6:7",
														"nodeType": "YulTypedName",
														"src": "7109:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7120:4:7",
														"nodeType": "YulTypedName",
														"src": "7120:4:7",
														"type": ""
													}
												],
												"src": "7043:311:7"
											},
											{
												"body": {
													"nativeSrc": "7479:608:7",
													"nodeType": "YulBlock",
													"src": "7479:608:7",
													"statements": [
														{
															"nativeSrc": "7489:90:7",
															"nodeType": "YulAssignment",
															"src": "7489:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7571:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7571:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "7514:56:7",
																			"nodeType": "YulIdentifier",
																			"src": "7514:56:7"
																		},
																		"nativeSrc": "7514:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7514:64:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7498:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "7498:15:7"
																},
																"nativeSrc": "7498:81:7",
																"nodeType": "YulFunctionCall",
																"src": "7498:81:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7489:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7489:5:7"
																}
															]
														},
														{
															"nativeSrc": "7588:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7588:16:7",
															"value": {
																"name": "array",
																"nativeSrc": "7599:5:7",
																"nodeType": "YulIdentifier",
																"src": "7599:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7592:3:7",
																	"nodeType": "YulTypedName",
																	"src": "7592:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7621:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7621:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7628:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7628:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7614:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7614:6:7"
																},
																"nativeSrc": "7614:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7614:21:7"
															},
															"nativeSrc": "7614:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7614:21:7"
														},
														{
															"nativeSrc": "7644:23:7",
															"nodeType": "YulAssignment",
															"src": "7644:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7655:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7655:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7662:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7662:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7651:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7651:3:7"
																},
																"nativeSrc": "7651:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7651:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "7644:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7644:3:7"
																}
															]
														},
														{
															"nativeSrc": "7677:44:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7677:44:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7695:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7707:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7707:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7715:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7715:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7703:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:7"
																		},
																		"nativeSrc": "7703:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7703:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7691:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7691:3:7"
																},
																"nativeSrc": "7691:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7691:30:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7681:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7681:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7749:103:7",
																"nodeType": "YulBlock",
																"src": "7749:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7763:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7763:77:7"
																			},
																			"nativeSrc": "7763:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7763:79:7"
																		},
																		"nativeSrc": "7763:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7763:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7736:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7736:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7744:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7744:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7733:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7733:2:7"
																},
																"nativeSrc": "7733:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7733:15:7"
															},
															"nativeSrc": "7730:122:7",
															"nodeType": "YulIf",
															"src": "7730:122:7"
														},
														{
															"body": {
																"nativeSrc": "7937:144:7",
																"nodeType": "YulBlock",
																"src": "7937:144:7",
																"statements": [
																	{
																		"nativeSrc": "7952:21:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7952:21:7",
																		"value": {
																			"name": "src",
																			"nativeSrc": "7970:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7970:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "7956:10:7",
																				"nodeType": "YulTypedName",
																				"src": "7956:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7994:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7994:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "8020:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "8020:10:7"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "8032:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8032:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "7999:20:7",
																						"nodeType": "YulIdentifier",
																						"src": "7999:20:7"
																					},
																					"nativeSrc": "7999:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7999:37:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7987:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7987:6:7"
																			},
																			"nativeSrc": "7987:50:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7987:50:7"
																		},
																		"nativeSrc": "7987:50:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7987:50:7"
																	},
																	{
																		"nativeSrc": "8050:21:7",
																		"nodeType": "YulAssignment",
																		"src": "8050:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8061:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8061:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8066:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8066:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8057:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8057:3:7"
																			},
																			"nativeSrc": "8057:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8057:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "8050:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8050:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7890:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7890:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7895:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7895:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7887:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7887:2:7"
																},
																"nativeSrc": "7887:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7887:15:7"
															},
															"nativeSrc": "7861:220:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7903:25:7",
																"nodeType": "YulBlock",
																"src": "7903:25:7",
																"statements": [
																	{
																		"nativeSrc": "7905:21:7",
																		"nodeType": "YulAssignment",
																		"src": "7905:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7916:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7916:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7921:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7921:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7912:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7912:3:7"
																			},
																			"nativeSrc": "7912:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7912:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7905:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7905:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7865:21:7",
																"nodeType": "YulBlock",
																"src": "7865:21:7",
																"statements": [
																	{
																		"nativeSrc": "7867:17:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7867:17:7",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "7878:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7878:6:7"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "7871:3:7",
																				"nodeType": "YulTypedName",
																				"src": "7871:3:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7861:220:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7377:710:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7449:6:7",
														"nodeType": "YulTypedName",
														"src": "7449:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7457:6:7",
														"nodeType": "YulTypedName",
														"src": "7457:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7465:3:7",
														"nodeType": "YulTypedName",
														"src": "7465:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7473:5:7",
														"nodeType": "YulTypedName",
														"src": "7473:5:7",
														"type": ""
													}
												],
												"src": "7377:710:7"
											},
											{
												"body": {
													"nativeSrc": "8187:293:7",
													"nodeType": "YulBlock",
													"src": "8187:293:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8236:83:7",
																"nodeType": "YulBlock",
																"src": "8236:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8238:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8238:77:7"
																			},
																			"nativeSrc": "8238:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8238:79:7"
																		},
																		"nativeSrc": "8238:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8238:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8215:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8215:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8223:4:7",
																						"nodeType": "YulLiteral",
																						"src": "8223:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8211:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8211:3:7"
																				},
																				"nativeSrc": "8211:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8211:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8230:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8230:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8207:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8207:3:7"
																		},
																		"nativeSrc": "8207:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8207:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8200:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8200:6:7"
																},
																"nativeSrc": "8200:35:7",
																"nodeType": "YulFunctionCall",
																"src": "8200:35:7"
															},
															"nativeSrc": "8197:122:7",
															"nodeType": "YulIf",
															"src": "8197:122:7"
														},
														{
															"nativeSrc": "8328:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8328:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8355:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8355:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8342:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "8342:12:7"
																},
																"nativeSrc": "8342:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8342:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8332:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8332:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8371:103:7",
															"nodeType": "YulAssignment",
															"src": "8371:103:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8447:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8447:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8455:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8455:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8443:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8443:3:7"
																		},
																		"nativeSrc": "8443:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8443:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8462:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8462:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8470:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8470:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8380:62:7",
																	"nodeType": "YulIdentifier",
																	"src": "8380:62:7"
																},
																"nativeSrc": "8380:94:7",
																"nodeType": "YulFunctionCall",
																"src": "8380:94:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8371:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8371:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8110:370:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8165:6:7",
														"nodeType": "YulTypedName",
														"src": "8165:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8173:3:7",
														"nodeType": "YulTypedName",
														"src": "8173:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8181:5:7",
														"nodeType": "YulTypedName",
														"src": "8181:5:7",
														"type": ""
													}
												],
												"src": "8110:370:7"
											},
											{
												"body": {
													"nativeSrc": "8619:761:7",
													"nodeType": "YulBlock",
													"src": "8619:761:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8665:83:7",
																"nodeType": "YulBlock",
																"src": "8665:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8667:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8667:77:7"
																			},
																			"nativeSrc": "8667:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8667:79:7"
																		},
																		"nativeSrc": "8667:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8667:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8640:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8640:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8649:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8649:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8636:3:7"
																		},
																		"nativeSrc": "8636:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8636:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8661:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8661:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8632:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8632:3:7"
																},
																"nativeSrc": "8632:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8632:32:7"
															},
															"nativeSrc": "8629:119:7",
															"nodeType": "YulIf",
															"src": "8629:119:7"
														},
														{
															"nativeSrc": "8758:302:7",
															"nodeType": "YulBlock",
															"src": "8758:302:7",
															"statements": [
																{
																	"nativeSrc": "8773:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8773:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8804:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8804:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8815:1:7",
																						"nodeType": "YulLiteral",
																						"src": "8815:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8800:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8800:3:7"
																				},
																				"nativeSrc": "8800:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8800:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8787:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "8787:12:7"
																		},
																		"nativeSrc": "8787:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8787:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8777:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8777:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8865:83:7",
																		"nodeType": "YulBlock",
																		"src": "8865:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8867:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "8867:77:7"
																					},
																					"nativeSrc": "8867:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8867:79:7"
																				},
																				"nativeSrc": "8867:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8867:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8837:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8837:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8845:18:7",
																				"nodeType": "YulLiteral",
																				"src": "8845:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8834:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8834:2:7"
																		},
																		"nativeSrc": "8834:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8834:30:7"
																	},
																	"nativeSrc": "8831:117:7",
																	"nodeType": "YulIf",
																	"src": "8831:117:7"
																},
																{
																	"nativeSrc": "8962:88:7",
																	"nodeType": "YulAssignment",
																	"src": "8962:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9022:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9022:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9033:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9033:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9018:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9018:3:7"
																				},
																				"nativeSrc": "9018:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9018:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9042:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9042:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "8972:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "8972:45:7"
																		},
																		"nativeSrc": "8972:78:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8972:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8962:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8962:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9070:303:7",
															"nodeType": "YulBlock",
															"src": "9070:303:7",
															"statements": [
																{
																	"nativeSrc": "9085:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9085:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9116:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9116:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9127:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9127:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9112:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9112:3:7"
																				},
																				"nativeSrc": "9112:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9112:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9099:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "9099:12:7"
																		},
																		"nativeSrc": "9099:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9099:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9089:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9089:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9178:83:7",
																		"nodeType": "YulBlock",
																		"src": "9178:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9180:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "9180:77:7"
																					},
																					"nativeSrc": "9180:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9180:79:7"
																				},
																				"nativeSrc": "9180:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9180:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9150:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9150:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9158:18:7",
																				"nodeType": "YulLiteral",
																				"src": "9158:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9147:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9147:2:7"
																		},
																		"nativeSrc": "9147:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9147:30:7"
																	},
																	"nativeSrc": "9144:117:7",
																	"nodeType": "YulIf",
																	"src": "9144:117:7"
																},
																{
																	"nativeSrc": "9275:88:7",
																	"nodeType": "YulAssignment",
																	"src": "9275:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9335:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9335:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9346:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9346:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9331:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9331:3:7"
																				},
																				"nativeSrc": "9331:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9331:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9355:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9355:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "9285:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "9285:45:7"
																		},
																		"nativeSrc": "9285:78:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9285:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9275:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9275:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8486:894:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8581:9:7",
														"nodeType": "YulTypedName",
														"src": "8581:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8592:7:7",
														"nodeType": "YulTypedName",
														"src": "8592:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8604:6:7",
														"nodeType": "YulTypedName",
														"src": "8604:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8612:6:7",
														"nodeType": "YulTypedName",
														"src": "8612:6:7",
														"type": ""
													}
												],
												"src": "8486:894:7"
											},
											{
												"body": {
													"nativeSrc": "9452:263:7",
													"nodeType": "YulBlock",
													"src": "9452:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9498:83:7",
																"nodeType": "YulBlock",
																"src": "9498:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9500:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9500:77:7"
																			},
																			"nativeSrc": "9500:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9500:79:7"
																		},
																		"nativeSrc": "9500:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9500:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9473:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9473:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9482:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9482:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9469:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9469:3:7"
																		},
																		"nativeSrc": "9469:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9469:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9494:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9494:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9465:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9465:3:7"
																},
																"nativeSrc": "9465:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9465:32:7"
															},
															"nativeSrc": "9462:119:7",
															"nodeType": "YulIf",
															"src": "9462:119:7"
														},
														{
															"nativeSrc": "9591:117:7",
															"nodeType": "YulBlock",
															"src": "9591:117:7",
															"statements": [
																{
																	"nativeSrc": "9606:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9606:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9620:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9620:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9610:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9610:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9635:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9635:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9670:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9670:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9681:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9681:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9666:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9666:3:7"
																				},
																				"nativeSrc": "9666:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9666:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9690:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9690:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9645:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9645:20:7"
																		},
																		"nativeSrc": "9645:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9645:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9635:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9635:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9386:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9422:9:7",
														"nodeType": "YulTypedName",
														"src": "9422:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9433:7:7",
														"nodeType": "YulTypedName",
														"src": "9433:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9445:6:7",
														"nodeType": "YulTypedName",
														"src": "9445:6:7",
														"type": ""
													}
												],
												"src": "9386:329:7"
											},
											{
												"body": {
													"nativeSrc": "9786:53:7",
													"nodeType": "YulBlock",
													"src": "9786:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9803:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9803:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9826:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9826:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9808:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9808:17:7"
																		},
																		"nativeSrc": "9808:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9796:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:7"
																},
																"nativeSrc": "9796:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9796:37:7"
															},
															"nativeSrc": "9796:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9796:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9721:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9774:5:7",
														"nodeType": "YulTypedName",
														"src": "9774:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9781:3:7",
														"nodeType": "YulTypedName",
														"src": "9781:3:7",
														"type": ""
													}
												],
												"src": "9721:118:7"
											},
											{
												"body": {
													"nativeSrc": "9943:124:7",
													"nodeType": "YulBlock",
													"src": "9943:124:7",
													"statements": [
														{
															"nativeSrc": "9953:26:7",
															"nodeType": "YulAssignment",
															"src": "9953:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9965:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9965:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9976:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9976:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9961:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9961:3:7"
																},
																"nativeSrc": "9961:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9961:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9953:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9953:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10033:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10033:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10046:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10046:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10057:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10057:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10042:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10042:3:7"
																		},
																		"nativeSrc": "10042:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10042:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9989:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9989:43:7"
																},
																"nativeSrc": "9989:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9989:71:7"
															},
															"nativeSrc": "9989:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9989:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9845:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9915:9:7",
														"nodeType": "YulTypedName",
														"src": "9915:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9927:6:7",
														"nodeType": "YulTypedName",
														"src": "9927:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9938:4:7",
														"nodeType": "YulTypedName",
														"src": "9938:4:7",
														"type": ""
													}
												],
												"src": "9845:222:7"
											},
											{
												"body": {
													"nativeSrc": "10156:391:7",
													"nodeType": "YulBlock",
													"src": "10156:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10202:83:7",
																"nodeType": "YulBlock",
																"src": "10202:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10204:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10204:77:7"
																			},
																			"nativeSrc": "10204:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10204:79:7"
																		},
																		"nativeSrc": "10204:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10204:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10177:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10177:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10186:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10186:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10173:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10173:3:7"
																		},
																		"nativeSrc": "10173:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10173:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10198:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10198:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10169:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10169:3:7"
																},
																"nativeSrc": "10169:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10169:32:7"
															},
															"nativeSrc": "10166:119:7",
															"nodeType": "YulIf",
															"src": "10166:119:7"
														},
														{
															"nativeSrc": "10295:117:7",
															"nodeType": "YulBlock",
															"src": "10295:117:7",
															"statements": [
																{
																	"nativeSrc": "10310:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10310:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10324:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10324:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10314:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10314:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10339:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10339:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10374:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10374:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10385:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10385:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10370:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10370:3:7"
																				},
																				"nativeSrc": "10370:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10370:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10394:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10394:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10349:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10349:20:7"
																		},
																		"nativeSrc": "10349:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10349:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10339:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10339:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10422:118:7",
															"nodeType": "YulBlock",
															"src": "10422:118:7",
															"statements": [
																{
																	"nativeSrc": "10437:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10437:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10451:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10451:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10441:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10441:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10467:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10467:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10502:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10502:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10513:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10513:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10498:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10498:3:7"
																				},
																				"nativeSrc": "10498:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10498:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10522:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10522:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10477:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10477:20:7"
																		},
																		"nativeSrc": "10477:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10477:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10467:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10467:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10073:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10118:9:7",
														"nodeType": "YulTypedName",
														"src": "10118:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10129:7:7",
														"nodeType": "YulTypedName",
														"src": "10129:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10141:6:7",
														"nodeType": "YulTypedName",
														"src": "10141:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10149:6:7",
														"nodeType": "YulTypedName",
														"src": "10149:6:7",
														"type": ""
													}
												],
												"src": "10073:474:7"
											},
											{
												"body": {
													"nativeSrc": "10659:69:7",
													"nodeType": "YulBlock",
													"src": "10659:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10681:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10681:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10689:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10689:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10677:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10677:3:7"
																		},
																		"nativeSrc": "10677:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10677:14:7"
																	},
																	{
																		"hexValue": "4e6f204d544b2073656e7420666f72206469766964656e6473",
																		"kind": "string",
																		"nativeSrc": "10693:27:7",
																		"nodeType": "YulLiteral",
																		"src": "10693:27:7",
																		"type": "",
																		"value": "No MTK sent for dividends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10670:6:7"
																},
																"nativeSrc": "10670:51:7",
																"nodeType": "YulFunctionCall",
																"src": "10670:51:7"
															},
															"nativeSrc": "10670:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "10670:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48",
												"nativeSrc": "10553:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10651:6:7",
														"nodeType": "YulTypedName",
														"src": "10651:6:7",
														"type": ""
													}
												],
												"src": "10553:175:7"
											},
											{
												"body": {
													"nativeSrc": "10880:220:7",
													"nodeType": "YulBlock",
													"src": "10880:220:7",
													"statements": [
														{
															"nativeSrc": "10890:74:7",
															"nodeType": "YulAssignment",
															"src": "10890:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10956:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10956:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10961:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10897:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10897:58:7"
																},
																"nativeSrc": "10897:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10897:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10890:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10890:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11062:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11062:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48",
																	"nativeSrc": "10973:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10973:88:7"
																},
																"nativeSrc": "10973:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10973:93:7"
															},
															"nativeSrc": "10973:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10973:93:7"
														},
														{
															"nativeSrc": "11075:19:7",
															"nodeType": "YulAssignment",
															"src": "11075:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11086:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11086:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11091:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11091:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11082:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11082:3:7"
																},
																"nativeSrc": "11082:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11082:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11075:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11075:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10734:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10868:3:7",
														"nodeType": "YulTypedName",
														"src": "10868:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10876:3:7",
														"nodeType": "YulTypedName",
														"src": "10876:3:7",
														"type": ""
													}
												],
												"src": "10734:366:7"
											},
											{
												"body": {
													"nativeSrc": "11277:248:7",
													"nodeType": "YulBlock",
													"src": "11277:248:7",
													"statements": [
														{
															"nativeSrc": "11287:26:7",
															"nodeType": "YulAssignment",
															"src": "11287:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11299:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11299:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11310:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11310:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11295:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11295:3:7"
																},
																"nativeSrc": "11295:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11295:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11287:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11287:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11334:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11334:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11345:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11345:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11330:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11330:3:7"
																		},
																		"nativeSrc": "11330:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11330:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11353:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11353:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11359:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11359:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11349:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11349:3:7"
																		},
																		"nativeSrc": "11349:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11349:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11323:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11323:6:7"
																},
																"nativeSrc": "11323:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11323:47:7"
															},
															"nativeSrc": "11323:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11323:47:7"
														},
														{
															"nativeSrc": "11379:139:7",
															"nodeType": "YulAssignment",
															"src": "11379:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11513:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11513:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11387:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11387:124:7"
																},
																"nativeSrc": "11387:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11387:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11379:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11379:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11106:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11257:9:7",
														"nodeType": "YulTypedName",
														"src": "11257:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11272:4:7",
														"nodeType": "YulTypedName",
														"src": "11272:4:7",
														"type": ""
													}
												],
												"src": "11106:419:7"
											},
											{
												"body": {
													"nativeSrc": "11637:60:7",
													"nodeType": "YulBlock",
													"src": "11637:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11659:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11659:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11667:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11667:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11655:3:7"
																		},
																		"nativeSrc": "11655:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11655:14:7"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320697373756564",
																		"kind": "string",
																		"nativeSrc": "11671:18:7",
																		"nodeType": "YulLiteral",
																		"src": "11671:18:7",
																		"type": "",
																		"value": "No tokens issued"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11648:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11648:6:7"
																},
																"nativeSrc": "11648:42:7",
																"nodeType": "YulFunctionCall",
																"src": "11648:42:7"
															},
															"nativeSrc": "11648:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "11648:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22",
												"nativeSrc": "11531:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11629:6:7",
														"nodeType": "YulTypedName",
														"src": "11629:6:7",
														"type": ""
													}
												],
												"src": "11531:166:7"
											},
											{
												"body": {
													"nativeSrc": "11849:220:7",
													"nodeType": "YulBlock",
													"src": "11849:220:7",
													"statements": [
														{
															"nativeSrc": "11859:74:7",
															"nodeType": "YulAssignment",
															"src": "11859:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11925:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11925:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11930:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11930:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11866:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11866:58:7"
																},
																"nativeSrc": "11866:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11866:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11859:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11859:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12031:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12031:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22",
																	"nativeSrc": "11942:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11942:88:7"
																},
																"nativeSrc": "11942:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11942:93:7"
															},
															"nativeSrc": "11942:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11942:93:7"
														},
														{
															"nativeSrc": "12044:19:7",
															"nodeType": "YulAssignment",
															"src": "12044:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12055:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12055:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12060:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12060:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12051:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12051:3:7"
																},
																"nativeSrc": "12051:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12051:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12044:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11703:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11837:3:7",
														"nodeType": "YulTypedName",
														"src": "11837:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11845:3:7",
														"nodeType": "YulTypedName",
														"src": "11845:3:7",
														"type": ""
													}
												],
												"src": "11703:366:7"
											},
											{
												"body": {
													"nativeSrc": "12246:248:7",
													"nodeType": "YulBlock",
													"src": "12246:248:7",
													"statements": [
														{
															"nativeSrc": "12256:26:7",
															"nodeType": "YulAssignment",
															"src": "12256:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12268:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12268:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12279:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12279:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12264:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12264:3:7"
																},
																"nativeSrc": "12264:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12264:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12256:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12256:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12303:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12303:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12314:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12314:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12299:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12299:3:7"
																		},
																		"nativeSrc": "12299:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12299:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12322:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12322:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12328:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12328:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12318:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12318:3:7"
																		},
																		"nativeSrc": "12318:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12318:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12292:6:7"
																},
																"nativeSrc": "12292:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12292:47:7"
															},
															"nativeSrc": "12292:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12292:47:7"
														},
														{
															"nativeSrc": "12348:139:7",
															"nodeType": "YulAssignment",
															"src": "12348:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12482:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12482:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12356:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12356:124:7"
																},
																"nativeSrc": "12356:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12356:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12348:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12348:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12075:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12226:9:7",
														"nodeType": "YulTypedName",
														"src": "12226:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12241:4:7",
														"nodeType": "YulTypedName",
														"src": "12241:4:7",
														"type": ""
													}
												],
												"src": "12075:419:7"
											},
											{
												"body": {
													"nativeSrc": "12528:152:7",
													"nodeType": "YulBlock",
													"src": "12528:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12545:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12545:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12548:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12548:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12538:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12538:6:7"
																},
																"nativeSrc": "12538:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12538:88:7"
															},
															"nativeSrc": "12538:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12538:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12642:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12642:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12645:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12645:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12635:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12635:6:7"
																},
																"nativeSrc": "12635:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12635:15:7"
															},
															"nativeSrc": "12635:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12635:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12666:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12666:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12669:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12669:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12659:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12659:6:7"
																},
																"nativeSrc": "12659:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12659:15:7"
															},
															"nativeSrc": "12659:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12659:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12500:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12500:180:7"
											},
											{
												"body": {
													"nativeSrc": "12730:147:7",
													"nodeType": "YulBlock",
													"src": "12730:147:7",
													"statements": [
														{
															"nativeSrc": "12740:25:7",
															"nodeType": "YulAssignment",
															"src": "12740:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12763:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12763:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12745:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12745:17:7"
																},
																"nativeSrc": "12745:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12745:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12740:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12740:1:7"
																}
															]
														},
														{
															"nativeSrc": "12774:25:7",
															"nodeType": "YulAssignment",
															"src": "12774:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12797:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12797:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12779:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12779:17:7"
																},
																"nativeSrc": "12779:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12779:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12774:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12774:1:7"
																}
															]
														},
														{
															"nativeSrc": "12808:16:7",
															"nodeType": "YulAssignment",
															"src": "12808:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12819:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12819:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12822:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12822:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12815:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12815:3:7"
																},
																"nativeSrc": "12815:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12815:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12808:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12808:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12848:22:7",
																"nodeType": "YulBlock",
																"src": "12848:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12850:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12850:16:7"
																			},
																			"nativeSrc": "12850:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12850:18:7"
																		},
																		"nativeSrc": "12850:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12850:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12840:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12840:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12843:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12843:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12837:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12837:2:7"
																},
																"nativeSrc": "12837:10:7",
																"nodeType": "YulFunctionCall",
																"src": "12837:10:7"
															},
															"nativeSrc": "12834:36:7",
															"nodeType": "YulIf",
															"src": "12834:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12686:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12717:1:7",
														"nodeType": "YulTypedName",
														"src": "12717:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12720:1:7",
														"nodeType": "YulTypedName",
														"src": "12720:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12726:3:7",
														"nodeType": "YulTypedName",
														"src": "12726:3:7",
														"type": ""
													}
												],
												"src": "12686:191:7"
											},
											{
												"body": {
													"nativeSrc": "12911:152:7",
													"nodeType": "YulBlock",
													"src": "12911:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12928:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12928:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12931:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12931:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12921:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12921:6:7"
																},
																"nativeSrc": "12921:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12921:88:7"
															},
															"nativeSrc": "12921:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12921:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13025:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13025:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13028:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13028:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13018:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13018:6:7"
																},
																"nativeSrc": "13018:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13018:15:7"
															},
															"nativeSrc": "13018:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13018:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13049:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13049:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13052:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13052:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13042:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13042:6:7"
																},
																"nativeSrc": "13042:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13042:15:7"
															},
															"nativeSrc": "13042:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13042:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12883:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12883:180:7"
											},
											{
												"body": {
													"nativeSrc": "13117:362:7",
													"nodeType": "YulBlock",
													"src": "13117:362:7",
													"statements": [
														{
															"nativeSrc": "13127:25:7",
															"nodeType": "YulAssignment",
															"src": "13127:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13150:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13150:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13132:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13132:17:7"
																},
																"nativeSrc": "13132:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13132:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13127:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13127:1:7"
																}
															]
														},
														{
															"nativeSrc": "13161:25:7",
															"nodeType": "YulAssignment",
															"src": "13161:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13184:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13184:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13166:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13166:17:7"
																},
																"nativeSrc": "13166:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13166:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13161:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13161:1:7"
																}
															]
														},
														{
															"nativeSrc": "13195:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13195:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13218:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13218:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13221:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13221:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13214:3:7"
																},
																"nativeSrc": "13214:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13214:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13199:11:7",
																	"nodeType": "YulTypedName",
																	"src": "13199:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13232:41:7",
															"nodeType": "YulAssignment",
															"src": "13232:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13261:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "13261:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13243:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13243:17:7"
																},
																"nativeSrc": "13243:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13243:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13232:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "13232:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13450:22:7",
																"nodeType": "YulBlock",
																"src": "13450:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13452:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13452:16:7"
																			},
																			"nativeSrc": "13452:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13452:18:7"
																		},
																		"nativeSrc": "13452:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13452:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13383:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "13383:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13376:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "13376:6:7"
																				},
																				"nativeSrc": "13376:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13376:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13406:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "13406:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13413:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "13413:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13422:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "13422:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13409:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "13409:3:7"
																						},
																						"nativeSrc": "13409:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "13409:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13403:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "13403:2:7"
																				},
																				"nativeSrc": "13403:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13403:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13356:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13356:2:7"
																		},
																		"nativeSrc": "13356:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13356:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13336:6:7"
																},
																"nativeSrc": "13336:113:7",
																"nodeType": "YulFunctionCall",
																"src": "13336:113:7"
															},
															"nativeSrc": "13333:139:7",
															"nodeType": "YulIf",
															"src": "13333:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13069:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13100:1:7",
														"nodeType": "YulTypedName",
														"src": "13100:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13103:1:7",
														"nodeType": "YulTypedName",
														"src": "13103:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13109:7:7",
														"nodeType": "YulTypedName",
														"src": "13109:7:7",
														"type": ""
													}
												],
												"src": "13069:410:7"
											},
											{
												"body": {
													"nativeSrc": "13513:152:7",
													"nodeType": "YulBlock",
													"src": "13513:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13530:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13530:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13533:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13533:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13523:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13523:6:7"
																},
																"nativeSrc": "13523:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13523:88:7"
															},
															"nativeSrc": "13523:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13523:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13627:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13627:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13630:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13630:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13620:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13620:6:7"
																},
																"nativeSrc": "13620:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13620:15:7"
															},
															"nativeSrc": "13620:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13620:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13651:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13651:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13654:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13654:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13644:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13644:6:7"
																},
																"nativeSrc": "13644:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13644:15:7"
															},
															"nativeSrc": "13644:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13644:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13485:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13485:180:7"
											},
											{
												"body": {
													"nativeSrc": "13713:143:7",
													"nodeType": "YulBlock",
													"src": "13713:143:7",
													"statements": [
														{
															"nativeSrc": "13723:25:7",
															"nodeType": "YulAssignment",
															"src": "13723:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13746:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13746:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13728:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13728:17:7"
																},
																"nativeSrc": "13728:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13728:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13723:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13723:1:7"
																}
															]
														},
														{
															"nativeSrc": "13757:25:7",
															"nodeType": "YulAssignment",
															"src": "13757:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13780:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13780:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13762:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13762:17:7"
																},
																"nativeSrc": "13762:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13762:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13757:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13757:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13804:22:7",
																"nodeType": "YulBlock",
																"src": "13804:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13806:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13806:16:7"
																			},
																			"nativeSrc": "13806:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13806:18:7"
																		},
																		"nativeSrc": "13806:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13806:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13801:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13801:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13794:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13794:6:7"
																},
																"nativeSrc": "13794:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13794:9:7"
															},
															"nativeSrc": "13791:35:7",
															"nodeType": "YulIf",
															"src": "13791:35:7"
														},
														{
															"nativeSrc": "13836:14:7",
															"nodeType": "YulAssignment",
															"src": "13836:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13845:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13845:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13848:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13848:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13841:3:7"
																},
																"nativeSrc": "13841:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13841:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13836:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13836:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13671:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13702:1:7",
														"nodeType": "YulTypedName",
														"src": "13702:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13705:1:7",
														"nodeType": "YulTypedName",
														"src": "13705:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13711:1:7",
														"nodeType": "YulTypedName",
														"src": "13711:1:7",
														"type": ""
													}
												],
												"src": "13671:185:7"
											},
											{
												"body": {
													"nativeSrc": "13988:206:7",
													"nodeType": "YulBlock",
													"src": "13988:206:7",
													"statements": [
														{
															"nativeSrc": "13998:26:7",
															"nodeType": "YulAssignment",
															"src": "13998:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14010:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14010:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14021:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14021:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14006:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14006:3:7"
																},
																"nativeSrc": "14006:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14006:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13998:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13998:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14078:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14078:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14091:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14091:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14102:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14102:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14087:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14087:3:7"
																		},
																		"nativeSrc": "14087:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14087:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14034:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14034:43:7"
																},
																"nativeSrc": "14034:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14034:71:7"
															},
															"nativeSrc": "14034:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14034:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14159:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14159:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14172:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14172:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14183:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14183:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14168:3:7"
																		},
																		"nativeSrc": "14168:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14168:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14115:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14115:43:7"
																},
																"nativeSrc": "14115:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14115:72:7"
															},
															"nativeSrc": "14115:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14115:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13862:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13952:9:7",
														"nodeType": "YulTypedName",
														"src": "13952:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13964:6:7",
														"nodeType": "YulTypedName",
														"src": "13964:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13972:6:7",
														"nodeType": "YulTypedName",
														"src": "13972:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13983:4:7",
														"nodeType": "YulTypedName",
														"src": "13983:4:7",
														"type": ""
													}
												],
												"src": "13862:332:7"
											},
											{
												"body": {
													"nativeSrc": "14228:152:7",
													"nodeType": "YulBlock",
													"src": "14228:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14245:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14245:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14248:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14248:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14238:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14238:6:7"
																},
																"nativeSrc": "14238:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14238:88:7"
															},
															"nativeSrc": "14238:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14238:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14342:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14342:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14345:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14345:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14335:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14335:6:7"
																},
																"nativeSrc": "14335:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14335:15:7"
															},
															"nativeSrc": "14335:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14335:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14366:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14366:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14369:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14369:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14359:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14359:6:7"
																},
																"nativeSrc": "14359:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14359:15:7"
															},
															"nativeSrc": "14359:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14359:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14200:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14200:180:7"
											},
											{
												"body": {
													"nativeSrc": "14437:269:7",
													"nodeType": "YulBlock",
													"src": "14437:269:7",
													"statements": [
														{
															"nativeSrc": "14447:22:7",
															"nodeType": "YulAssignment",
															"src": "14447:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14461:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14461:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14467:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14467:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14457:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14457:3:7"
																},
																"nativeSrc": "14457:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14457:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14447:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14447:6:7"
																}
															]
														},
														{
															"nativeSrc": "14478:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14478:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14508:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14508:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14514:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14514:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14504:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14504:3:7"
																},
																"nativeSrc": "14504:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14504:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14482:18:7",
																	"nodeType": "YulTypedName",
																	"src": "14482:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14555:51:7",
																"nodeType": "YulBlock",
																"src": "14555:51:7",
																"statements": [
																	{
																		"nativeSrc": "14569:27:7",
																		"nodeType": "YulAssignment",
																		"src": "14569:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14583:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "14583:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14591:4:7",
																					"nodeType": "YulLiteral",
																					"src": "14591:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14579:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "14579:3:7"
																			},
																			"nativeSrc": "14579:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14579:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14569:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14569:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14535:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "14535:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14528:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14528:6:7"
																},
																"nativeSrc": "14528:26:7",
																"nodeType": "YulFunctionCall",
																"src": "14528:26:7"
															},
															"nativeSrc": "14525:81:7",
															"nodeType": "YulIf",
															"src": "14525:81:7"
														},
														{
															"body": {
																"nativeSrc": "14658:42:7",
																"nodeType": "YulBlock",
																"src": "14658:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14672:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14672:16:7"
																			},
																			"nativeSrc": "14672:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14672:18:7"
																		},
																		"nativeSrc": "14672:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14672:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14622:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "14622:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14645:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14645:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14653:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14653:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14642:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "14642:2:7"
																		},
																		"nativeSrc": "14642:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14642:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14619:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14619:2:7"
																},
																"nativeSrc": "14619:38:7",
																"nodeType": "YulFunctionCall",
																"src": "14619:38:7"
															},
															"nativeSrc": "14616:84:7",
															"nodeType": "YulIf",
															"src": "14616:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "14386:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14421:4:7",
														"nodeType": "YulTypedName",
														"src": "14421:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14430:6:7",
														"nodeType": "YulTypedName",
														"src": "14430:6:7",
														"type": ""
													}
												],
												"src": "14386:320:7"
											},
											{
												"body": {
													"nativeSrc": "14818:65:7",
													"nodeType": "YulBlock",
													"src": "14818:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14840:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14840:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14848:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14848:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14836:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14836:3:7"
																		},
																		"nativeSrc": "14836:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14836:14:7"
																	},
																	{
																		"hexValue": "4e6f206469766964656e647320746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "14852:23:7",
																		"nodeType": "YulLiteral",
																		"src": "14852:23:7",
																		"type": "",
																		"value": "No dividends to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14829:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14829:6:7"
																},
																"nativeSrc": "14829:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14829:47:7"
															},
															"nativeSrc": "14829:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14829:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8",
												"nativeSrc": "14712:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14810:6:7",
														"nodeType": "YulTypedName",
														"src": "14810:6:7",
														"type": ""
													}
												],
												"src": "14712:171:7"
											},
											{
												"body": {
													"nativeSrc": "15035:220:7",
													"nodeType": "YulBlock",
													"src": "15035:220:7",
													"statements": [
														{
															"nativeSrc": "15045:74:7",
															"nodeType": "YulAssignment",
															"src": "15045:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15111:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15111:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15116:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15116:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15052:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15052:58:7"
																},
																"nativeSrc": "15052:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15052:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15045:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15045:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15217:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15217:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8",
																	"nativeSrc": "15128:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15128:88:7"
																},
																"nativeSrc": "15128:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15128:93:7"
															},
															"nativeSrc": "15128:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15128:93:7"
														},
														{
															"nativeSrc": "15230:19:7",
															"nodeType": "YulAssignment",
															"src": "15230:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15241:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15241:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15246:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15246:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15237:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15237:3:7"
																},
																"nativeSrc": "15237:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15237:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15230:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15230:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14889:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15023:3:7",
														"nodeType": "YulTypedName",
														"src": "15023:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15031:3:7",
														"nodeType": "YulTypedName",
														"src": "15031:3:7",
														"type": ""
													}
												],
												"src": "14889:366:7"
											},
											{
												"body": {
													"nativeSrc": "15432:248:7",
													"nodeType": "YulBlock",
													"src": "15432:248:7",
													"statements": [
														{
															"nativeSrc": "15442:26:7",
															"nodeType": "YulAssignment",
															"src": "15442:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15454:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15454:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15465:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15465:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15450:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15450:3:7"
																},
																"nativeSrc": "15450:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15450:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15442:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15442:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15489:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15489:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15500:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15500:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15485:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15485:3:7"
																		},
																		"nativeSrc": "15485:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15485:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15508:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15508:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15514:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15514:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15504:3:7"
																		},
																		"nativeSrc": "15504:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15504:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15478:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15478:6:7"
																},
																"nativeSrc": "15478:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15478:47:7"
															},
															"nativeSrc": "15478:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15478:47:7"
														},
														{
															"nativeSrc": "15534:139:7",
															"nodeType": "YulAssignment",
															"src": "15534:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15668:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15668:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15542:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15542:124:7"
																},
																"nativeSrc": "15542:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15542:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15534:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15534:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15261:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15412:9:7",
														"nodeType": "YulTypedName",
														"src": "15412:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15427:4:7",
														"nodeType": "YulTypedName",
														"src": "15427:4:7",
														"type": ""
													}
												],
												"src": "15261:419:7"
											},
											{
												"body": {
													"nativeSrc": "15799:34:7",
													"nodeType": "YulBlock",
													"src": "15799:34:7",
													"statements": [
														{
															"nativeSrc": "15809:18:7",
															"nodeType": "YulAssignment",
															"src": "15809:18:7",
															"value": {
																"name": "pos",
																"nativeSrc": "15824:3:7",
																"nodeType": "YulIdentifier",
																"src": "15824:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15809:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "15809:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15686:147:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15771:3:7",
														"nodeType": "YulTypedName",
														"src": "15771:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15776:6:7",
														"nodeType": "YulTypedName",
														"src": "15776:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15787:11:7",
														"nodeType": "YulTypedName",
														"src": "15787:11:7",
														"type": ""
													}
												],
												"src": "15686:147:7"
											},
											{
												"body": {
													"nativeSrc": "15945:8:7",
													"nodeType": "YulBlock",
													"src": "15945:8:7",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "15839:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15937:6:7",
														"nodeType": "YulTypedName",
														"src": "15937:6:7",
														"type": ""
													}
												],
												"src": "15839:114:7"
											},
											{
												"body": {
													"nativeSrc": "16122:235:7",
													"nodeType": "YulBlock",
													"src": "16122:235:7",
													"statements": [
														{
															"nativeSrc": "16132:90:7",
															"nodeType": "YulAssignment",
															"src": "16132:90:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16215:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16215:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16220:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16220:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16139:75:7",
																	"nodeType": "YulIdentifier",
																	"src": "16139:75:7"
																},
																"nativeSrc": "16139:83:7",
																"nodeType": "YulFunctionCall",
																"src": "16139:83:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16132:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16132:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16320:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16320:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "16231:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16231:88:7"
																},
																"nativeSrc": "16231:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16231:93:7"
															},
															"nativeSrc": "16231:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16231:93:7"
														},
														{
															"nativeSrc": "16333:18:7",
															"nodeType": "YulAssignment",
															"src": "16333:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16344:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16344:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16349:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16349:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16340:3:7"
																},
																"nativeSrc": "16340:11:7",
																"nodeType": "YulFunctionCall",
																"src": "16340:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16333:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16333:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15959:398:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16110:3:7",
														"nodeType": "YulTypedName",
														"src": "16110:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16118:3:7",
														"nodeType": "YulTypedName",
														"src": "16118:3:7",
														"type": ""
													}
												],
												"src": "15959:398:7"
											},
											{
												"body": {
													"nativeSrc": "16551:191:7",
													"nodeType": "YulBlock",
													"src": "16551:191:7",
													"statements": [
														{
															"nativeSrc": "16562:154:7",
															"nodeType": "YulAssignment",
															"src": "16562:154:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16712:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16712:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16569:141:7",
																	"nodeType": "YulIdentifier",
																	"src": "16569:141:7"
																},
																"nativeSrc": "16569:147:7",
																"nodeType": "YulFunctionCall",
																"src": "16569:147:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16562:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16562:3:7"
																}
															]
														},
														{
															"nativeSrc": "16726:10:7",
															"nodeType": "YulAssignment",
															"src": "16726:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "16733:3:7",
																"nodeType": "YulIdentifier",
																"src": "16733:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16726:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16726:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16363:379:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16538:3:7",
														"nodeType": "YulTypedName",
														"src": "16538:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16547:3:7",
														"nodeType": "YulTypedName",
														"src": "16547:3:7",
														"type": ""
													}
												],
												"src": "16363:379:7"
											},
											{
												"body": {
													"nativeSrc": "16854:62:7",
													"nodeType": "YulBlock",
													"src": "16854:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16876:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16876:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16884:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16884:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16872:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16872:3:7"
																		},
																		"nativeSrc": "16872:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16872:14:7"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204d544b",
																		"kind": "string",
																		"nativeSrc": "16888:20:7",
																		"nodeType": "YulLiteral",
																		"src": "16888:20:7",
																		"type": "",
																		"value": "Failed to send MTK"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16865:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16865:6:7"
																},
																"nativeSrc": "16865:44:7",
																"nodeType": "YulFunctionCall",
																"src": "16865:44:7"
															},
															"nativeSrc": "16865:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "16865:44:7"
														}
													]
												},
												"name": "store_literal_in_memory_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f",
												"nativeSrc": "16748:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16846:6:7",
														"nodeType": "YulTypedName",
														"src": "16846:6:7",
														"type": ""
													}
												],
												"src": "16748:168:7"
											},
											{
												"body": {
													"nativeSrc": "17068:220:7",
													"nodeType": "YulBlock",
													"src": "17068:220:7",
													"statements": [
														{
															"nativeSrc": "17078:74:7",
															"nodeType": "YulAssignment",
															"src": "17078:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17144:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17144:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17149:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17149:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17085:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "17085:58:7"
																},
																"nativeSrc": "17085:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17085:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17078:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17078:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17250:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17250:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f",
																	"nativeSrc": "17161:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17161:88:7"
																},
																"nativeSrc": "17161:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17161:93:7"
															},
															"nativeSrc": "17161:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17161:93:7"
														},
														{
															"nativeSrc": "17263:19:7",
															"nodeType": "YulAssignment",
															"src": "17263:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17274:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17274:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17279:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17279:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17270:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17270:3:7"
																},
																"nativeSrc": "17270:12:7",
																"nodeType": "YulFunctionCall",
																"src": "17270:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17263:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17263:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16922:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17056:3:7",
														"nodeType": "YulTypedName",
														"src": "17056:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17064:3:7",
														"nodeType": "YulTypedName",
														"src": "17064:3:7",
														"type": ""
													}
												],
												"src": "16922:366:7"
											},
											{
												"body": {
													"nativeSrc": "17465:248:7",
													"nodeType": "YulBlock",
													"src": "17465:248:7",
													"statements": [
														{
															"nativeSrc": "17475:26:7",
															"nodeType": "YulAssignment",
															"src": "17475:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17487:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17487:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17498:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17498:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17483:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17483:3:7"
																},
																"nativeSrc": "17483:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17483:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17475:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17475:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17522:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17522:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17533:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17533:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17518:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17518:3:7"
																		},
																		"nativeSrc": "17518:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17518:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17541:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17541:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17547:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17547:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17537:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17537:3:7"
																		},
																		"nativeSrc": "17537:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17537:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17511:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17511:6:7"
																},
																"nativeSrc": "17511:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17511:47:7"
															},
															"nativeSrc": "17511:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17511:47:7"
														},
														{
															"nativeSrc": "17567:139:7",
															"nodeType": "YulAssignment",
															"src": "17567:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17701:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17701:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17575:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17575:124:7"
																},
																"nativeSrc": "17575:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17575:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17567:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17567:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17294:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17445:9:7",
														"nodeType": "YulTypedName",
														"src": "17445:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17460:4:7",
														"nodeType": "YulTypedName",
														"src": "17460:4:7",
														"type": ""
													}
												],
												"src": "17294:419:7"
											},
											{
												"body": {
													"nativeSrc": "17825:64:7",
													"nodeType": "YulBlock",
													"src": "17825:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17847:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17847:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17855:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17855:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17843:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17843:3:7"
																		},
																		"nativeSrc": "17843:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17843:14:7"
																	},
																	{
																		"hexValue": "796f752063616e277420696e7075742030783030",
																		"kind": "string",
																		"nativeSrc": "17859:22:7",
																		"nodeType": "YulLiteral",
																		"src": "17859:22:7",
																		"type": "",
																		"value": "you can't input 0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17836:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17836:6:7"
																},
																"nativeSrc": "17836:46:7",
																"nodeType": "YulFunctionCall",
																"src": "17836:46:7"
															},
															"nativeSrc": "17836:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "17836:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17",
												"nativeSrc": "17719:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17817:6:7",
														"nodeType": "YulTypedName",
														"src": "17817:6:7",
														"type": ""
													}
												],
												"src": "17719:170:7"
											},
											{
												"body": {
													"nativeSrc": "18041:220:7",
													"nodeType": "YulBlock",
													"src": "18041:220:7",
													"statements": [
														{
															"nativeSrc": "18051:74:7",
															"nodeType": "YulAssignment",
															"src": "18051:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18117:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18117:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18122:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18122:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18058:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18058:58:7"
																},
																"nativeSrc": "18058:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18058:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18051:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18051:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18223:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18223:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17",
																	"nativeSrc": "18134:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18134:88:7"
																},
																"nativeSrc": "18134:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18134:93:7"
															},
															"nativeSrc": "18134:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18134:93:7"
														},
														{
															"nativeSrc": "18236:19:7",
															"nodeType": "YulAssignment",
															"src": "18236:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18247:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18247:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18252:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18252:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18243:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18243:3:7"
																},
																"nativeSrc": "18243:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18243:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18236:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18236:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17895:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18029:3:7",
														"nodeType": "YulTypedName",
														"src": "18029:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18037:3:7",
														"nodeType": "YulTypedName",
														"src": "18037:3:7",
														"type": ""
													}
												],
												"src": "17895:366:7"
											},
											{
												"body": {
													"nativeSrc": "18438:248:7",
													"nodeType": "YulBlock",
													"src": "18438:248:7",
													"statements": [
														{
															"nativeSrc": "18448:26:7",
															"nodeType": "YulAssignment",
															"src": "18448:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18460:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18460:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18471:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18471:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18456:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18456:3:7"
																},
																"nativeSrc": "18456:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18456:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18448:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18448:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18495:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18495:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18506:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18506:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18491:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18491:3:7"
																		},
																		"nativeSrc": "18491:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18491:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18514:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18514:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18520:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18520:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18510:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18510:3:7"
																		},
																		"nativeSrc": "18510:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18510:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18484:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18484:6:7"
																},
																"nativeSrc": "18484:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18484:47:7"
															},
															"nativeSrc": "18484:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18484:47:7"
														},
														{
															"nativeSrc": "18540:139:7",
															"nodeType": "YulAssignment",
															"src": "18540:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18674:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18674:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18548:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18548:124:7"
																},
																"nativeSrc": "18548:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18548:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18540:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18540:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18267:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18418:9:7",
														"nodeType": "YulTypedName",
														"src": "18418:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18433:4:7",
														"nodeType": "YulTypedName",
														"src": "18433:4:7",
														"type": ""
													}
												],
												"src": "18267:419:7"
											},
											{
												"body": {
													"nativeSrc": "18846:288:7",
													"nodeType": "YulBlock",
													"src": "18846:288:7",
													"statements": [
														{
															"nativeSrc": "18856:26:7",
															"nodeType": "YulAssignment",
															"src": "18856:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18868:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18868:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18879:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18879:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18864:3:7"
																},
																"nativeSrc": "18864:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18864:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18856:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18856:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18936:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18936:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18949:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18960:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18960:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18945:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18945:3:7"
																		},
																		"nativeSrc": "18945:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18945:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18892:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18892:43:7"
																},
																"nativeSrc": "18892:71:7",
																"nodeType": "YulFunctionCall",
																"src": "18892:71:7"
															},
															"nativeSrc": "18892:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "18892:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19017:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19017:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19030:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19030:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19041:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19041:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19026:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19026:3:7"
																		},
																		"nativeSrc": "19026:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19026:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18973:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18973:43:7"
																},
																"nativeSrc": "18973:72:7",
																"nodeType": "YulFunctionCall",
																"src": "18973:72:7"
															},
															"nativeSrc": "18973:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "18973:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19099:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19099:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19112:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19112:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19123:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19123:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19108:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19108:3:7"
																		},
																		"nativeSrc": "19108:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19108:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19055:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19055:43:7"
																},
																"nativeSrc": "19055:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19055:72:7"
															},
															"nativeSrc": "19055:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19055:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18692:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18802:9:7",
														"nodeType": "YulTypedName",
														"src": "18802:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18814:6:7",
														"nodeType": "YulTypedName",
														"src": "18814:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18822:6:7",
														"nodeType": "YulTypedName",
														"src": "18822:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18830:6:7",
														"nodeType": "YulTypedName",
														"src": "18830:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18841:4:7",
														"nodeType": "YulTypedName",
														"src": "18841:4:7",
														"type": ""
													}
												],
												"src": "18692:442:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48(memPtr) {\n\n        mstore(add(memPtr, 0), \"No MTK sent for dividends\")\n\n    }\n\n    function abi_encode_t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens issued\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8(memPtr) {\n\n        mstore(add(memPtr, 0), \"No dividends to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send MTK\")\n\n    }\n\n    function abi_encode_t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17(memPtr) {\n\n        mstore(add(memPtr, 0), \"you can't input 0x00\")\n\n    }\n\n    function abi_encode_t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x143 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x997664D7 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52A JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x7DFB3383 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x89D6047D EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x8AD0AAEF EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40C JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x2EB21B22 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x2EB21B22 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x6264786C EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x668038E0 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x68306E43 EQ PUSH2 0x2DE JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x3C83302 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E8 JUMPI PUSH2 0x14A JUMP JUMPDEST CALLDATASIZE PUSH2 0x14A JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x156 PUSH2 0x552 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x184D JUMP JUMPDEST PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x262 PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x884 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x36A PUSH2 0xAF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x420 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x474 PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55A PUSH2 0xE16 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5A5 PUSH2 0x7C3 JUMP JUMPDEST GT PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x60D PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x618 PUSH2 0xE9D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6D3 JUMPI PUSH0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0x1D08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 PUSH2 0x650 DUP3 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x6C4 JUMPI DUP5 DUP2 CALLVALUE PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x61F JUMP JUMPDEST POP PUSH32 0x2F588CF4BB0247B0F3F60E06187F92E6FD1DEAABB56E2BCC5672352337871327 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x705 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x720 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74C SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x797 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x76E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x797 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7AB PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH2 0x7B8 DUP2 DUP6 DUP6 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7D6 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E3 DUP6 DUP3 DUP6 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x7EE DUP6 DUP6 DUP6 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x810 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x81A DUP3 DUP3 PUSH2 0x10DD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x826 PUSH2 0xE16 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x87F JUMPI PUSH2 0x872 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x84A JUMPI PUSH2 0x849 PUSH2 0x1D08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x865 JUMPI PUSH2 0x864 PUSH2 0x1D08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xB5E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x82B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FE SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9C1 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5EFA67896A23B651B741B525CAACBA039C00CA7853BE3DE8EB1F4269E8669C56 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0xB01 PUSH0 PUSH2 0x115C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 PUSH2 0xE16 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC51 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC7D SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC9F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCE0 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0xCEA DUP3 DUP3 PUSH2 0x121F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xCF8 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH2 0xD05 DUP2 DUP6 DUP6 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD9A PUSH2 0xE16 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE13 DUP2 PUSH2 0x115C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE1E PUSH2 0xF41 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE3C PUSH2 0xC1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH2 0xE5F PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEBB JUMPI PUSH2 0xEBA PUSH2 0x18D5 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEE9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP CALLER DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xF00 JUMPI PUSH2 0xEFF PUSH2 0x1D08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF55 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x129E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF65 DUP5 DUP5 PUSH2 0xD10 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFE7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFD8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFE6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x129E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1054 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D8 DUP4 DUP4 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1158 PUSH0 DUP4 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x128F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129A DUP3 PUSH0 DUP4 PUSH2 0x146D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1467 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14BD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14B1 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x158B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1546 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15D2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x161C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1679 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16C8 DUP3 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x16D2 DUP2 DUP6 PUSH2 0x1690 JUMP JUMPDEST SWAP4 POP PUSH2 0x16E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x16EB DUP2 PUSH2 0x16AE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x170E DUP2 DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1750 DUP3 PUSH2 0x1727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1760 DUP2 PUSH2 0x1746 JUMP JUMPDEST DUP2 EQ PUSH2 0x176A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x177B DUP2 PUSH2 0x1757 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1793 DUP2 PUSH2 0x1781 JUMP JUMPDEST DUP2 EQ PUSH2 0x179D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AE DUP2 PUSH2 0x178A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CA JUMPI PUSH2 0x17C9 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D7 DUP6 DUP3 DUP7 ADD PUSH2 0x176D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E8 DUP6 DUP3 DUP7 ADD PUSH2 0x17A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1806 DUP2 PUSH2 0x17F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x181F PUSH0 DUP4 ADD DUP5 PUSH2 0x17FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x182E DUP2 PUSH2 0x1781 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1847 PUSH0 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1871 DUP7 DUP3 DUP8 ADD PUSH2 0x176D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1882 DUP7 DUP3 DUP8 ADD PUSH2 0x176D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1893 DUP7 DUP3 DUP8 ADD PUSH2 0x17A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B2 DUP2 PUSH2 0x189D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CB PUSH0 DUP4 ADD DUP5 PUSH2 0x18A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x190B DUP3 PUSH2 0x16AE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x192A JUMPI PUSH2 0x1929 PUSH2 0x18D5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x193C PUSH2 0x1716 JUMP JUMPDEST SWAP1 POP PUSH2 0x1948 DUP3 DUP3 PUSH2 0x1902 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1967 JUMPI PUSH2 0x1966 PUSH2 0x18D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x198E PUSH2 0x1989 DUP5 PUSH2 0x194D JUMP JUMPDEST PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x1978 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19DA JUMPI DUP1 PUSH2 0x19C6 DUP9 DUP3 PUSH2 0x176D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19B3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19F8 JUMPI PUSH2 0x19F7 PUSH2 0x18D1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A08 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x197C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A2B JUMPI PUSH2 0x1A2A PUSH2 0x18D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4E PUSH2 0x1A49 DUP5 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A70 PUSH2 0x1978 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A9A JUMPI DUP1 PUSH2 0x1A86 DUP9 DUP3 PUSH2 0x17A0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A73 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x18D1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AC8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE7 JUMPI PUSH2 0x1AE6 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B04 JUMPI PUSH2 0x1B03 PUSH2 0x1723 JUMP JUMPDEST JUMPDEST PUSH2 0x1B10 DUP6 DUP3 DUP7 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B31 JUMPI PUSH2 0x1B30 PUSH2 0x1723 JUMP JUMPDEST JUMPDEST PUSH2 0x1B3D DUP6 DUP3 DUP7 ADD PUSH2 0x1AA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B69 DUP5 DUP3 DUP6 ADD PUSH2 0x176D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7B DUP2 PUSH2 0x1746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B94 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB0 JUMPI PUSH2 0x1BAF PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBD DUP6 DUP3 DUP7 ADD PUSH2 0x176D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BCE DUP6 DUP3 DUP7 ADD PUSH2 0x176D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F204D544B2073656E7420666F72206469766964656E647300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0C PUSH1 0x19 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C17 DUP3 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C39 DUP2 PUSH2 0x1C00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E732069737375656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C74 PUSH1 0x10 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7F DUP3 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA1 DUP2 PUSH2 0x1C68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CDF DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEA DUP4 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D3F DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4A DUP4 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D58 DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x1CA8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DAD DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB8 DUP4 PUSH2 0x1781 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DC8 JUMPI PUSH2 0x1DC7 PUSH2 0x1D76 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1DF3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E3E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x1DFA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206469766964656E647320746F20636C61696D0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8B PUSH1 0x15 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E96 DUP3 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB8 DUP2 PUSH2 0x1E7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED7 PUSH0 DUP4 PUSH2 0x1EBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE2 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF6 DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204D544B0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F34 PUSH1 0x12 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3F DUP3 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F61 DUP2 PUSH2 0x1F28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x796F752063616E277420696E7075742030783030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9C PUSH1 0x14 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA7 DUP3 PUSH2 0x1F68 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC9 DUP2 PUSH2 0x1F90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FE3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1FF0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1FFD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xE47C4C69CCE0F57122 PUSH15 0x1A5F689007F19A528343B238A12C93 ADDMOD 0xC2 PUSH27 0x79082B64736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "174:3156:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:750;;;:::i;:::-;;1760:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:36:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;808:95:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1361:252;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2408:396;;;;;;;;;;;;;:::i;:::-;;242:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;314:51:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2850:134;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1130:182;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;418:29:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;911:99;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1621:750:6;1531:13:0;:11;:13::i;:::-;1710:1:6::1;1698:9;:13;1690:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1776:1;1760:13;:11;:13::i;:::-;:17;1752:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1829:9;1811:14;;:27;;;;;;;:::i;:::-;;;;;;;;1873:15;1849:21;:39;;;;1901:19;1923:13;:11;:13::i;:::-;1901:35;;1947:24;1974:17;:15;:17::i;:::-;1947:44;;2033:9;2045:1;2033:13;;2028:271;2052:7;:14;2048:1;:18;2028:271;;;2088:14;2105:7;2113:1;2105:10;;;;;;;;:::i;:::-;;;;;;;;2088:27;;2130:15;2148:17;2158:6;2148:9;:17::i;:::-;2130:35;;2194:1;2184:7;:11;2180:108;;;2261:11;2250:7;2238:9;:19;;;;:::i;:::-;2237:35;;;;:::i;:::-;2216:9;:17;2226:6;2216:17;;;;;;;;;;;;;;;;:56;;;;;;;:::i;:::-;;;;;;;;2180:108;2073:226;;2068:3;;;;;;;2028:271;;;;2316:47;2336:9;2347:15;2316:47;;;;;;;:::i;:::-;;;;;;;;1679:692;;1621:750::o:0;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;454:36:6:-;;;;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;808:95:6:-;1531:13:0;:11;:13::i;:::-;878:17:6::1;884:2;888:6;878:5;:17::i;:::-;808:95:::0;;:::o;1361:252::-;1531:13:0;:11;:13::i;:::-;1503:9:6::1;1515:1;1503:13;;1498:108;1522:5;:12;1518:1;:16;1498:108;;;1556:38;1573:5;1579:1;1573:8;;;;;;;;:::i;:::-;;;;;;;;1583:7;1591:1;1583:10;;;;;;;;:::i;:::-;;;;;;;;1556:16;:38::i;:::-;1536:3;;;;;;;1498:108;;;;1361:252:::0;;:::o;2408:396::-;2454:14;2471:9;:21;2481:10;2471:21;;;;;;;;;;;;;;;;2454:38;;2520:1;2511:6;:10;2503:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2584:1;2560:9;:21;2570:10;2560:21;;;;;;;;;;;;;;;:25;;;;2628:6;2596:16;:28;2613:10;2596:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;2648:9;2663:10;:15;;2686:6;2663:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2647:50;;;2716:4;2708:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2777:10;2761:35;;;2789:6;2761:35;;;;;;:::i;:::-;;;;;;;;2443:361;;2408:396::o;242:44::-;;;;;;;;;;;;;;;;;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;314:51:6:-;;;;;;;;;;;;;;;;;:::o;2850:134::-;2934:7;2961:9;:15;2971:4;2961:15;;;;;;;;;;;;;;;;2954:22;;2850:134;;;:::o;1130:182::-;1531:13:0;:11;:13::i;:::-;1238:3:6::1;1222:20;;:4;:20;;::::0;1214:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1298:6;1280:9;:15;1290:4;1280:15;;;;;;;;;;;;;;;:24;;;;1130:182:::0;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;418:29:6:-;;;;:::o;911:99::-;1531:13:0;:11;:13::i;:::-;983:19:6::1;989:4;995:6;983:5;:19::i;:::-;911:99:::0;;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2992:189:6:-;3042:16;3071:24;3112:1;3098:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3071:43;;3138:10;3125:7;3133:1;3125:10;;;;;;;;:::i;:::-;;;;;;;:23;;;;;;;;;;;3166:7;3159:14;;;2992:189;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7965:206:2:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:117::-;4855:1;4852;4845:12;4869:180;4917:77;4914:1;4907:88;5014:4;5011:1;5004:15;5038:4;5035:1;5028:15;5055:281;5138:27;5160:4;5138:27;:::i;:::-;5130:6;5126:40;5268:6;5256:10;5253:22;5232:18;5220:10;5217:34;5214:62;5211:88;;;5279:18;;:::i;:::-;5211:88;5319:10;5315:2;5308:22;5098:238;5055:281;;:::o;5342:129::-;5376:6;5403:20;;:::i;:::-;5393:30;;5432:33;5460:4;5452:6;5432:33;:::i;:::-;5342:129;;;:::o;5477:311::-;5554:4;5644:18;5636:6;5633:30;5630:56;;;5666:18;;:::i;:::-;5630:56;5716:4;5708:6;5704:17;5696:25;;5776:4;5770;5766:15;5758:23;;5477:311;;;:::o;5794:117::-;5903:1;5900;5893:12;5934:710;6030:5;6055:81;6071:64;6128:6;6071:64;:::i;:::-;6055:81;:::i;:::-;6046:90;;6156:5;6185:6;6178:5;6171:21;6219:4;6212:5;6208:16;6201:23;;6272:4;6264:6;6260:17;6252:6;6248:30;6301:3;6293:6;6290:15;6287:122;;;6320:79;;:::i;:::-;6287:122;6435:6;6418:220;6452:6;6447:3;6444:15;6418:220;;;6527:3;6556:37;6589:3;6577:10;6556:37;:::i;:::-;6551:3;6544:50;6623:4;6618:3;6614:14;6607:21;;6494:144;6478:4;6473:3;6469:14;6462:21;;6418:220;;;6422:21;6036:608;;5934:710;;;;;:::o;6667:370::-;6738:5;6787:3;6780:4;6772:6;6768:17;6764:27;6754:122;;6795:79;;:::i;:::-;6754:122;6912:6;6899:20;6937:94;7027:3;7019:6;7012:4;7004:6;7000:17;6937:94;:::i;:::-;6928:103;;6744:293;6667:370;;;;:::o;7043:311::-;7120:4;7210:18;7202:6;7199:30;7196:56;;;7232:18;;:::i;:::-;7196:56;7282:4;7274:6;7270:17;7262:25;;7342:4;7336;7332:15;7324:23;;7043:311;;;:::o;7377:710::-;7473:5;7498:81;7514:64;7571:6;7514:64;:::i;:::-;7498:81;:::i;:::-;7489:90;;7599:5;7628:6;7621:5;7614:21;7662:4;7655:5;7651:16;7644:23;;7715:4;7707:6;7703:17;7695:6;7691:30;7744:3;7736:6;7733:15;7730:122;;;7763:79;;:::i;:::-;7730:122;7878:6;7861:220;7895:6;7890:3;7887:15;7861:220;;;7970:3;7999:37;8032:3;8020:10;7999:37;:::i;:::-;7994:3;7987:50;8066:4;8061:3;8057:14;8050:21;;7937:144;7921:4;7916:3;7912:14;7905:21;;7861:220;;;7865:21;7479:608;;7377:710;;;;;:::o;8110:370::-;8181:5;8230:3;8223:4;8215:6;8211:17;8207:27;8197:122;;8238:79;;:::i;:::-;8197:122;8355:6;8342:20;8380:94;8470:3;8462:6;8455:4;8447:6;8443:17;8380:94;:::i;:::-;8371:103;;8187:293;8110:370;;;;:::o;8486:894::-;8604:6;8612;8661:2;8649:9;8640:7;8636:23;8632:32;8629:119;;;8667:79;;:::i;:::-;8629:119;8815:1;8804:9;8800:17;8787:31;8845:18;8837:6;8834:30;8831:117;;;8867:79;;:::i;:::-;8831:117;8972:78;9042:7;9033:6;9022:9;9018:22;8972:78;:::i;:::-;8962:88;;8758:302;9127:2;9116:9;9112:18;9099:32;9158:18;9150:6;9147:30;9144:117;;;9180:79;;:::i;:::-;9144:117;9285:78;9355:7;9346:6;9335:9;9331:22;9285:78;:::i;:::-;9275:88;;9070:303;8486:894;;;;;:::o;9386:329::-;9445:6;9494:2;9482:9;9473:7;9469:23;9465:32;9462:119;;;9500:79;;:::i;:::-;9462:119;9620:1;9645:53;9690:7;9681:6;9670:9;9666:22;9645:53;:::i;:::-;9635:63;;9591:117;9386:329;;;;:::o;9721:118::-;9808:24;9826:5;9808:24;:::i;:::-;9803:3;9796:37;9721:118;;:::o;9845:222::-;9938:4;9976:2;9965:9;9961:18;9953:26;;9989:71;10057:1;10046:9;10042:17;10033:6;9989:71;:::i;:::-;9845:222;;;;:::o;10073:474::-;10141:6;10149;10198:2;10186:9;10177:7;10173:23;10169:32;10166:119;;;10204:79;;:::i;:::-;10166:119;10324:1;10349:53;10394:7;10385:6;10374:9;10370:22;10349:53;:::i;:::-;10339:63;;10295:117;10451:2;10477:53;10522:7;10513:6;10502:9;10498:22;10477:53;:::i;:::-;10467:63;;10422:118;10073:474;;;;;:::o;10553:175::-;10693:27;10689:1;10681:6;10677:14;10670:51;10553:175;:::o;10734:366::-;10876:3;10897:67;10961:2;10956:3;10897:67;:::i;:::-;10890:74;;10973:93;11062:3;10973:93;:::i;:::-;11091:2;11086:3;11082:12;11075:19;;10734:366;;;:::o;11106:419::-;11272:4;11310:2;11299:9;11295:18;11287:26;;11359:9;11353:4;11349:20;11345:1;11334:9;11330:17;11323:47;11387:131;11513:4;11387:131;:::i;:::-;11379:139;;11106:419;;;:::o;11531:166::-;11671:18;11667:1;11659:6;11655:14;11648:42;11531:166;:::o;11703:366::-;11845:3;11866:67;11930:2;11925:3;11866:67;:::i;:::-;11859:74;;11942:93;12031:3;11942:93;:::i;:::-;12060:2;12055:3;12051:12;12044:19;;11703:366;;;:::o;12075:419::-;12241:4;12279:2;12268:9;12264:18;12256:26;;12328:9;12322:4;12318:20;12314:1;12303:9;12299:17;12292:47;12356:131;12482:4;12356:131;:::i;:::-;12348:139;;12075:419;;;:::o;12500:180::-;12548:77;12545:1;12538:88;12645:4;12642:1;12635:15;12669:4;12666:1;12659:15;12686:191;12726:3;12745:20;12763:1;12745:20;:::i;:::-;12740:25;;12779:20;12797:1;12779:20;:::i;:::-;12774:25;;12822:1;12819;12815:9;12808:16;;12843:3;12840:1;12837:10;12834:36;;;12850:18;;:::i;:::-;12834:36;12686:191;;;;:::o;12883:180::-;12931:77;12928:1;12921:88;13028:4;13025:1;13018:15;13052:4;13049:1;13042:15;13069:410;13109:7;13132:20;13150:1;13132:20;:::i;:::-;13127:25;;13166:20;13184:1;13166:20;:::i;:::-;13161:25;;13221:1;13218;13214:9;13243:30;13261:11;13243:30;:::i;:::-;13232:41;;13422:1;13413:7;13409:15;13406:1;13403:22;13383:1;13376:9;13356:83;13333:139;;13452:18;;:::i;:::-;13333:139;13117:362;13069:410;;;;:::o;13485:180::-;13533:77;13530:1;13523:88;13630:4;13627:1;13620:15;13654:4;13651:1;13644:15;13671:185;13711:1;13728:20;13746:1;13728:20;:::i;:::-;13723:25;;13762:20;13780:1;13762:20;:::i;:::-;13757:25;;13801:1;13791:35;;13806:18;;:::i;:::-;13791:35;13848:1;13845;13841:9;13836:14;;13671:185;;;;:::o;13862:332::-;13983:4;14021:2;14010:9;14006:18;13998:26;;14034:71;14102:1;14091:9;14087:17;14078:6;14034:71;:::i;:::-;14115:72;14183:2;14172:9;14168:18;14159:6;14115:72;:::i;:::-;13862:332;;;;;:::o;14200:180::-;14248:77;14245:1;14238:88;14345:4;14342:1;14335:15;14369:4;14366:1;14359:15;14386:320;14430:6;14467:1;14461:4;14457:12;14447:22;;14514:1;14508:4;14504:12;14535:18;14525:81;;14591:4;14583:6;14579:17;14569:27;;14525:81;14653:2;14645:6;14642:14;14622:18;14619:38;14616:84;;14672:18;;:::i;:::-;14616:84;14437:269;14386:320;;;:::o;14712:171::-;14852:23;14848:1;14840:6;14836:14;14829:47;14712:171;:::o;14889:366::-;15031:3;15052:67;15116:2;15111:3;15052:67;:::i;:::-;15045:74;;15128:93;15217:3;15128:93;:::i;:::-;15246:2;15241:3;15237:12;15230:19;;14889:366;;;:::o;15261:419::-;15427:4;15465:2;15454:9;15450:18;15442:26;;15514:9;15508:4;15504:20;15500:1;15489:9;15485:17;15478:47;15542:131;15668:4;15542:131;:::i;:::-;15534:139;;15261:419;;;:::o;15686:147::-;15787:11;15824:3;15809:18;;15686:147;;;;:::o;15839:114::-;;:::o;15959:398::-;16118:3;16139:83;16220:1;16215:3;16139:83;:::i;:::-;16132:90;;16231:93;16320:3;16231:93;:::i;:::-;16349:1;16344:3;16340:11;16333:18;;15959:398;;;:::o;16363:379::-;16547:3;16569:147;16712:3;16569:147;:::i;:::-;16562:154;;16733:3;16726:10;;16363:379;;;:::o;16748:168::-;16888:20;16884:1;16876:6;16872:14;16865:44;16748:168;:::o;16922:366::-;17064:3;17085:67;17149:2;17144:3;17085:67;:::i;:::-;17078:74;;17161:93;17250:3;17161:93;:::i;:::-;17279:2;17274:3;17270:12;17263:19;;16922:366;;;:::o;17294:419::-;17460:4;17498:2;17487:9;17483:18;17475:26;;17547:9;17541:4;17537:20;17533:1;17522:9;17518:17;17511:47;17575:131;17701:4;17575:131;:::i;:::-;17567:139;;17294:419;;;:::o;17719:170::-;17859:22;17855:1;17847:6;17843:14;17836:46;17719:170;:::o;17895:366::-;18037:3;18058:67;18122:2;18117:3;18058:67;:::i;:::-;18051:74;;18134:93;18223:3;18134:93;:::i;:::-;18252:2;18247:3;18243:12;18236:19;;17895:366;;;:::o;18267:419::-;18433:4;18471:2;18460:9;18456:18;18448:26;;18520:9;18514:4;18510:20;18506:1;18495:9;18491:17;18484:47;18548:131;18674:4;18548:131;:::i;:::-;18540:139;;18267:419;;;:::o;18692:442::-;18841:4;18879:2;18868:9;18864:18;18856:26;;18892:71;18960:1;18949:9;18945:17;18936:6;18892:71;:::i;:::-;18973:72;19041:2;19030:9;19026:18;19017:6;18973:72;:::i;:::-;19055;19123:2;19112:9;19108:18;19099:6;19055:72;:::i;:::-;18692:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1650200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addBatchDividendsUsers(address[],uint256[])": "infinite",
								"addDividendsUser(address,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"burn(address,uint256)": "infinite",
								"claimDividends()": "infinite",
								"claimedDividends(address)": "2869",
								"decimals()": "383",
								"distributeDividends()": "infinite",
								"dividends(address)": "2935",
								"getClaimableDividents(address)": "2918",
								"lastDividendTimestamp()": "2448",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2648",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalDividends()": "2469",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"getTokenHolders()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 654,
									"end": 800,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 654,
									"end": 800,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 654,
									"end": 800,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 654,
									"end": 800,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 654,
									"end": 800,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 654,
									"end": 800,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 654,
									"end": 800,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 654,
									"end": 800,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 654,
									"end": 800,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 737,
									"end": 747,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 760,
									"end": 792,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 766,
									"end": 776,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 760,
									"end": 765,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 760,
									"end": 765,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 765,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 760,
									"end": 792,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 760,
									"end": 792,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 760,
									"end": 792,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 760,
									"end": 792,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 760,
									"end": 792,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 654,
									"end": 800,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3248,
									"end": 3249,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6232,
									"end": 6239,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6314,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6265,
									"end": 6270,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6261,
									"end": 6315,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6393,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 3330,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068e47c4c69cce0f571226e1a5f689007f19a528343b238a12c9308c27a79082b64736f6c634300081e0033",
									".code": [
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "997664D7"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "7DFB3383"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "89D6047D"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "8AD0AAEF"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "2EB21B22"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "2EB21B22"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "6264786C"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "668038E0"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "68306E43"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "3C83302"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3330,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 2371,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1621,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1621,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1621,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 2371,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1621,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 2371,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 454,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 454,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 454,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 808,
											"end": 903,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 808,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 808,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1361,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1361,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2408,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 242,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 242,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 242,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 314,
											"end": 365,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 314,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 314,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2850,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2850,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2850,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1130,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1130,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 418,
											"end": 447,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 418,
											"end": 447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 418,
											"end": 447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 911,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 911,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 2371,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1621,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1707,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1711,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1690,
											"end": 1741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1690,
											"end": 1741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1760,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1760,
											"end": 1773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1760,
											"end": 1773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1777,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1752,
											"end": 1798,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1752,
											"end": 1798,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1838,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1811,
											"end": 1825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1811,
											"end": 1838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1888,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1849,
											"end": 1888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1888,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1923,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1923,
											"end": 1936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1923,
											"end": 1936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1936,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1974,
											"end": 1989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1974,
											"end": 1991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 1991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1974,
											"end": 1991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2046,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2059,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2066,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2066,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2112,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2114,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2105,
											"end": 2115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2158,
											"end": 2164,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2148,
											"end": 2165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2148,
											"end": 2165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2165,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2194,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2195,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2288,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2180,
											"end": 2288,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2272,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2257,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2247,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2238,
											"end": 2257,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2238,
											"end": 2257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2238,
											"end": 2257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2272,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2232,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2216,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2272,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2180,
											"end": 2288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2068,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2071,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2071,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2F588CF4BB0247B0F3F60E06187F92E6FD1DEAABB56E2BCC5672352337871327"
										},
										{
											"begin": 2336,
											"end": 2345,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2362,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2316,
											"end": 2363,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2363,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 2371,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 2371,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 2371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 454,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 490,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 454,
											"end": 490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 903,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 808,
											"end": 903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 884,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 888,
											"end": 894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 878,
											"end": 883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 878,
											"end": 895,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 878,
											"end": 895,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 878,
											"end": 895,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 808,
											"end": 903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1534,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1573,
											"end": 1578,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1580,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1573,
											"end": 1581,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1581,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1590,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1592,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1583,
											"end": 1593,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1593,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1556,
											"end": 1594,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1594,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1556,
											"end": 1594,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1539,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2408,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2491,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2511,
											"end": 2521,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2503,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2503,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2580,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2581,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2585,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2623,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2596,
											"end": 2634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2673,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2663,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2708,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2708,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2787,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "PUSH",
											"source": 6,
											"value": "5EFA67896A23B651B741B525CAACBA039C00CA7853BE3DE8EB1F4269E8669C56"
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2761,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2796,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 242,
											"end": 286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 314,
											"end": 365,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 314,
											"end": 365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2975,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 2976,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1226,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1214,
											"end": 1267,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1214,
											"end": 1267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1304,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1294,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1295,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1304,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 418,
											"end": 447,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 989,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 995,
											"end": 1001,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 983,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 983,
											"end": 1002,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1002,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 983,
											"end": 1002,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 911,
											"end": 1010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3181,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2992,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3042,
											"end": 3058,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3071,
											"end": 3095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3125,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4863,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 4746,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 5049,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 4869,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4994,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4914,
											"end": 4915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4995,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5018,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5019,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5042,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5043,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5336,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5055,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 5160,
											"end": 5164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5138,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 5138,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5126,
											"end": 5166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5266,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5232,
											"end": 5250,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5217,
											"end": 5251,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5276,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5299,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 5211,
											"end": 5299,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5279,
											"end": 5297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5299,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 5211,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5329,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5308,
											"end": 5330,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5471,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 5342,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 5403,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 5403,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5423,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 5403,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 5460,
											"end": 5464,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5452,
											"end": 5458,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5432,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5465,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 5432,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5788,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 5477,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5554,
											"end": 5558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5636,
											"end": 5642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5663,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5686,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 5630,
											"end": 5686,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5666,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5686,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 5630,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5716,
											"end": 5720,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5721,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5696,
											"end": 5721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5696,
											"end": 5721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5780,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5766,
											"end": 5781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5911,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 5794,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5904,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5905,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 6071,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 6128,
											"end": 6134,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6071,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6071,
											"end": 6135,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 6071,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6055,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 6055,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6055,
											"end": 6136,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 6055,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6191,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6171,
											"end": 6192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6223,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6212,
											"end": 6217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6260,
											"end": 6277,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6258,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6304,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6305,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6320,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 6287,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6458,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6444,
											"end": 6459,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6530,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6577,
											"end": 6587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6556,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6593,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 6556,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6544,
											"end": 6594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6623,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6621,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6607,
											"end": 6628,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6607,
											"end": 6628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6482,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6473,
											"end": 6476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6483,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 6418,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6422,
											"end": 6443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 6644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6738,
											"end": 6743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6784,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6764,
											"end": 6791,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 6754,
											"end": 6876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6795,
											"end": 6874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 6795,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6876,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 6754,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6912,
											"end": 6918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6899,
											"end": 6919,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6937,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 7027,
											"end": 7030,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7019,
											"end": 7025,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7012,
											"end": 7016,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7004,
											"end": 7010,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7000,
											"end": 7017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6937,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6937,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6937,
											"end": 7031,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 6937,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6928,
											"end": 7031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6744,
											"end": 7037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 7037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 7037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7354,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 7043,
											"end": 7354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7228,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7202,
											"end": 7208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7229,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7252,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 7196,
											"end": 7252,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 7232,
											"end": 7250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7252,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 7196,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7270,
											"end": 7287,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7262,
											"end": 7287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7262,
											"end": 7287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7342,
											"end": 7346,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 8087,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7377,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7473,
											"end": 7478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 7514,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7571,
											"end": 7577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 7514,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7578,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7514,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 7498,
											"end": 7579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7579,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 7498,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7489,
											"end": 7579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7489,
											"end": 7579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7599,
											"end": 7604,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7634,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7621,
											"end": 7626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7614,
											"end": 7635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7662,
											"end": 7666,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7655,
											"end": 7660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7651,
											"end": 7667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7707,
											"end": 7713,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7720,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7695,
											"end": 7701,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7691,
											"end": 7721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7744,
											"end": 7747,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7736,
											"end": 7742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7748,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7730,
											"end": 7852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7763,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7763,
											"end": 7842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7842,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7763,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7852,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7730,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 7884,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 8081,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7861,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7890,
											"end": 7893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7902,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 8081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7861,
											"end": 8081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7970,
											"end": 7973,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 8032,
											"end": 8035,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 7999,
											"end": 8036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7994,
											"end": 7997,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7987,
											"end": 8037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8066,
											"end": 8070,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8061,
											"end": 8064,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8057,
											"end": 8071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8071,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 8081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7921,
											"end": 7925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7916,
											"end": 7919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 7926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 7926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7861,
											"end": 8081,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 8081,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7861,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7865,
											"end": 7886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 8087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 8087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 8087,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 8087,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 8087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 8087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 8087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 8087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8480,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8110,
											"end": 8480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8227,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8215,
											"end": 8221,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8234,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 8197,
											"end": 8319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 8238,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8319,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 8197,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8361,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8342,
											"end": 8362,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8380,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 8470,
											"end": 8473,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8462,
											"end": 8468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8459,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8447,
											"end": 8453,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8443,
											"end": 8460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8380,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 8380,
											"end": 8474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8380,
											"end": 8474,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 8380,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8480,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8480,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8486,
											"end": 9380,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 8486,
											"end": 9380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 8610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8661,
											"end": 8663,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8649,
											"end": 8658,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8647,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8636,
											"end": 8659,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8632,
											"end": 8664,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8629,
											"end": 8748,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8629,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 8629,
											"end": 8748,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 8667,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 8667,
											"end": 8746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8746,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 8667,
											"end": 8746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8629,
											"end": 8748,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 8629,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8815,
											"end": 8816,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8804,
											"end": 8813,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 8818,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8845,
											"end": 8863,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8837,
											"end": 8843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8834,
											"end": 8864,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8948,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 8831,
											"end": 8948,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8867,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8867,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 8867,
											"end": 8946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8867,
											"end": 8946,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8867,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8948,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 8831,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 9042,
											"end": 9049,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9031,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9018,
											"end": 9040,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8972,
											"end": 9050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9050,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 8972,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8962,
											"end": 9050,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8962,
											"end": 9050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8758,
											"end": 9060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9127,
											"end": 9129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9116,
											"end": 9125,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9112,
											"end": 9130,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9099,
											"end": 9131,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9176,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9150,
											"end": 9156,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9147,
											"end": 9177,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9144,
											"end": 9261,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9144,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 9144,
											"end": 9261,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 9180,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9180,
											"end": 9259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9259,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 9180,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9144,
											"end": 9261,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 9144,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9285,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 9355,
											"end": 9362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9344,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9353,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9285,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 9285,
											"end": 9363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9285,
											"end": 9363,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 9285,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9070,
											"end": 9373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8486,
											"end": 9380,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8486,
											"end": 9380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8486,
											"end": 9380,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8486,
											"end": 9380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8486,
											"end": 9380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8486,
											"end": 9380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9715,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9386,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9445,
											"end": 9451,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9494,
											"end": 9496,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9473,
											"end": 9480,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9465,
											"end": 9497,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9462,
											"end": 9581,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9462,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 9462,
											"end": 9581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 9500,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9500,
											"end": 9579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9579,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 9500,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9462,
											"end": 9581,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 9462,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9620,
											"end": 9621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9645,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 9690,
											"end": 9697,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9670,
											"end": 9679,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9666,
											"end": 9688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9645,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 9645,
											"end": 9698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9645,
											"end": 9698,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 9645,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9635,
											"end": 9698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9635,
											"end": 9698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9715,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 9839,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 9721,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9808,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 9826,
											"end": 9831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9808,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9808,
											"end": 9832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9808,
											"end": 9832,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 9808,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9803,
											"end": 9806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9796,
											"end": 9833,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 9839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 9839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 9839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9845,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 9845,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9938,
											"end": 9942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9978,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 9974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9953,
											"end": 9979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9953,
											"end": 9979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 10057,
											"end": 10058,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10046,
											"end": 10055,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10042,
											"end": 10059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10033,
											"end": 10039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 9989,
											"end": 10060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10060,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 9989,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9845,
											"end": 10067,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9845,
											"end": 10067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9845,
											"end": 10067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9845,
											"end": 10067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9845,
											"end": 10067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10547,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 10073,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10141,
											"end": 10147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10149,
											"end": 10155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10198,
											"end": 10200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10186,
											"end": 10195,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10177,
											"end": 10184,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10173,
											"end": 10196,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10169,
											"end": 10201,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10166,
											"end": 10285,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10166,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 10166,
											"end": 10285,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 10204,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 10204,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10283,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 10204,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10166,
											"end": 10285,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 10166,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10324,
											"end": 10325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10349,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10385,
											"end": 10391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10370,
											"end": 10392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10349,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 10349,
											"end": 10402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10349,
											"end": 10402,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 10349,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10295,
											"end": 10412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10451,
											"end": 10453,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 10522,
											"end": 10529,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10519,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10511,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10498,
											"end": 10520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 10477,
											"end": 10530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10530,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 10477,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10467,
											"end": 10530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10467,
											"end": 10530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10422,
											"end": 10540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10547,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10547,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10073,
											"end": 10547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10553,
											"end": 10728,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10553,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10720,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F204D544B2073656E7420666F72206469766964656E647300000000000000"
										},
										{
											"begin": 10689,
											"end": 10690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10681,
											"end": 10687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10677,
											"end": 10691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10670,
											"end": 10721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10553,
											"end": 10728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10553,
											"end": 10728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 11100,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 10734,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10876,
											"end": 10879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10897,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10961,
											"end": 10963,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 10956,
											"end": 10959,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10897,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 10897,
											"end": 10964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10897,
											"end": 10964,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10897,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10890,
											"end": 10964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10890,
											"end": 10964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10973,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 11062,
											"end": 11065,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10973,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10973,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10973,
											"end": 11066,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 10973,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11091,
											"end": 11093,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11086,
											"end": 11089,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 11100,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 11100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 11100,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 11100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11106,
											"end": 11525,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 11106,
											"end": 11525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11272,
											"end": 11276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11310,
											"end": 11312,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11295,
											"end": 11313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11287,
											"end": 11313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11287,
											"end": 11313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11359,
											"end": 11368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11353,
											"end": 11357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11349,
											"end": 11369,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11345,
											"end": 11346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11343,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11330,
											"end": 11347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11323,
											"end": 11370,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 11513,
											"end": 11517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 11387,
											"end": 11518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11387,
											"end": 11518,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 11387,
											"end": 11518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11379,
											"end": 11518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11379,
											"end": 11518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11106,
											"end": 11525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11106,
											"end": 11525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11106,
											"end": 11525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11106,
											"end": 11525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11531,
											"end": 11697,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 11531,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11671,
											"end": 11689,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F20746F6B656E732069737375656400000000000000000000000000000000"
										},
										{
											"begin": 11667,
											"end": 11668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 11669,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11648,
											"end": 11690,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11531,
											"end": 11697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11531,
											"end": 11697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11703,
											"end": 12069,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 11703,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11845,
											"end": 11848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11866,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 11930,
											"end": 11932,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 11925,
											"end": 11928,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11866,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 11866,
											"end": 11933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11866,
											"end": 11933,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 11866,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11859,
											"end": 11933,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11859,
											"end": 11933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 12035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 12031,
											"end": 12034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 12035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 11942,
											"end": 12035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 12035,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 11942,
											"end": 12035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12060,
											"end": 12062,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12055,
											"end": 12058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12051,
											"end": 12063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12044,
											"end": 12063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12044,
											"end": 12063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11703,
											"end": 12069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11703,
											"end": 12069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11703,
											"end": 12069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11703,
											"end": 12069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12494,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 12075,
											"end": 12494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12241,
											"end": 12245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 12281,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12268,
											"end": 12277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12264,
											"end": 12282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12256,
											"end": 12282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12256,
											"end": 12282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12328,
											"end": 12337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12322,
											"end": 12326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12338,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12314,
											"end": 12315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12312,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12299,
											"end": 12316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12292,
											"end": 12339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12356,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 12482,
											"end": 12486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12356,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 12356,
											"end": 12487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12356,
											"end": 12487,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 12356,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12348,
											"end": 12487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12348,
											"end": 12487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12500,
											"end": 12680,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 12500,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12548,
											"end": 12625,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12545,
											"end": 12546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12538,
											"end": 12626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12645,
											"end": 12649,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 12642,
											"end": 12643,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12635,
											"end": 12650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12669,
											"end": 12673,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12666,
											"end": 12667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12659,
											"end": 12674,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12686,
											"end": 12877,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 12686,
											"end": 12877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12726,
											"end": 12729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 12763,
											"end": 12764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12745,
											"end": 12765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 12745,
											"end": 12765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12745,
											"end": 12765,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 12745,
											"end": 12765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12740,
											"end": 12765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12740,
											"end": 12765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12779,
											"end": 12799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 12797,
											"end": 12798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12779,
											"end": 12799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 12779,
											"end": 12799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12779,
											"end": 12799,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 12779,
											"end": 12799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12774,
											"end": 12799,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12774,
											"end": 12799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12822,
											"end": 12823,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12819,
											"end": 12820,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12808,
											"end": 12824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12808,
											"end": 12824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12843,
											"end": 12846,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12840,
											"end": 12841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12837,
											"end": 12847,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12870,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 12834,
											"end": 12870,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 12850,
											"end": 12868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12870,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 12834,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12686,
											"end": 12877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12686,
											"end": 12877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12686,
											"end": 12877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12686,
											"end": 12877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12686,
											"end": 12877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12883,
											"end": 13063,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 12883,
											"end": 13063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12931,
											"end": 13008,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12928,
											"end": 12929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12921,
											"end": 13009,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13028,
											"end": 13032,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 13025,
											"end": 13026,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13018,
											"end": 13033,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13052,
											"end": 13056,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13049,
											"end": 13050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13042,
											"end": 13057,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13069,
											"end": 13479,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 13069,
											"end": 13479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13109,
											"end": 13116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13132,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 13150,
											"end": 13151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13132,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13132,
											"end": 13152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13132,
											"end": 13152,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 13132,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13127,
											"end": 13152,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13127,
											"end": 13152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13166,
											"end": 13186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 13184,
											"end": 13185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13166,
											"end": 13186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13166,
											"end": 13186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13166,
											"end": 13186,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 13166,
											"end": 13186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13161,
											"end": 13186,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13161,
											"end": 13186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13221,
											"end": 13222,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13218,
											"end": 13219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13214,
											"end": 13223,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 13261,
											"end": 13272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13243,
											"end": 13273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13273,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 13243,
											"end": 13273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13232,
											"end": 13273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13232,
											"end": 13273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13422,
											"end": 13423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13413,
											"end": 13420,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13409,
											"end": 13424,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13406,
											"end": 13407,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13425,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13383,
											"end": 13384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13376,
											"end": 13385,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13356,
											"end": 13439,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 13333,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 13333,
											"end": 13472,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13452,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 13452,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 13452,
											"end": 13470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13452,
											"end": 13470,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 13452,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13333,
											"end": 13472,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 13333,
											"end": 13472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13117,
											"end": 13479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13069,
											"end": 13479,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13069,
											"end": 13479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13069,
											"end": 13479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13069,
											"end": 13479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13069,
											"end": 13479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13485,
											"end": 13665,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 13485,
											"end": 13665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13533,
											"end": 13610,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13530,
											"end": 13531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13630,
											"end": 13634,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 13627,
											"end": 13628,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13620,
											"end": 13635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13654,
											"end": 13658,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13651,
											"end": 13652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13644,
											"end": 13659,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 13856,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 13671,
											"end": 13856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13711,
											"end": 13712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13728,
											"end": 13748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 13746,
											"end": 13747,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13728,
											"end": 13748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13748,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 13728,
											"end": 13748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13723,
											"end": 13748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13723,
											"end": 13748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13762,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 13780,
											"end": 13781,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13762,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13762,
											"end": 13782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13762,
											"end": 13782,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 13762,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13757,
											"end": 13782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13757,
											"end": 13782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13801,
											"end": 13802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13791,
											"end": 13826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 13791,
											"end": 13826,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13806,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 13806,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 13806,
											"end": 13824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13806,
											"end": 13824,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 13806,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13791,
											"end": 13826,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 13791,
											"end": 13826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13848,
											"end": 13849,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13845,
											"end": 13846,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 13850,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 13856,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 13856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 13856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 13856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 13856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13862,
											"end": 14194,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 13862,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13983,
											"end": 13987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14021,
											"end": 14023,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14010,
											"end": 14019,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14006,
											"end": 14024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 14102,
											"end": 14103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14091,
											"end": 14100,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14087,
											"end": 14104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14078,
											"end": 14084,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 14034,
											"end": 14105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 14034,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14115,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 14183,
											"end": 14185,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14172,
											"end": 14181,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14168,
											"end": 14186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14159,
											"end": 14165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14115,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 14115,
											"end": 14187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14115,
											"end": 14187,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 14115,
											"end": 14187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13862,
											"end": 14194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13862,
											"end": 14194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13862,
											"end": 14194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13862,
											"end": 14194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13862,
											"end": 14194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13862,
											"end": 14194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14200,
											"end": 14380,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 14200,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14248,
											"end": 14325,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14245,
											"end": 14246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14326,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14345,
											"end": 14349,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 14342,
											"end": 14343,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14335,
											"end": 14350,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14369,
											"end": 14373,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14366,
											"end": 14367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14359,
											"end": 14374,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14386,
											"end": 14706,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 14386,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14430,
											"end": 14436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14467,
											"end": 14468,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 14461,
											"end": 14465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14457,
											"end": 14469,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14447,
											"end": 14469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14447,
											"end": 14469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14514,
											"end": 14515,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14508,
											"end": 14512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14504,
											"end": 14516,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14535,
											"end": 14553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14525,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 14525,
											"end": 14606,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14591,
											"end": 14595,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 14583,
											"end": 14589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14579,
											"end": 14596,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14569,
											"end": 14596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14569,
											"end": 14596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14525,
											"end": 14606,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 14525,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14653,
											"end": 14655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14645,
											"end": 14651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14642,
											"end": 14656,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 14622,
											"end": 14640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14657,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14616,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 14616,
											"end": 14700,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 14672,
											"end": 14690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 14672,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14616,
											"end": 14700,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 14616,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14437,
											"end": 14706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14386,
											"end": 14706,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14386,
											"end": 14706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14386,
											"end": 14706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14386,
											"end": 14706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14712,
											"end": 14883,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 14712,
											"end": 14883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14852,
											"end": 14875,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F206469766964656E647320746F20636C61696D0000000000000000000000"
										},
										{
											"begin": 14848,
											"end": 14849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14840,
											"end": 14846,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14836,
											"end": 14850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14829,
											"end": 14876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14712,
											"end": 14883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14712,
											"end": 14883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15031,
											"end": 15034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15052,
											"end": 15119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 15116,
											"end": 15118,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 15111,
											"end": 15114,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15052,
											"end": 15119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 15052,
											"end": 15119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15052,
											"end": 15119,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 15052,
											"end": 15119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15045,
											"end": 15119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15045,
											"end": 15119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15128,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 15217,
											"end": 15220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15128,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 15128,
											"end": 15221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15128,
											"end": 15221,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 15128,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15246,
											"end": 15248,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15241,
											"end": 15244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15237,
											"end": 15249,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14889,
											"end": 15255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14889,
											"end": 15255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15427,
											"end": 15431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15465,
											"end": 15467,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15454,
											"end": 15463,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15450,
											"end": 15468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15442,
											"end": 15468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15442,
											"end": 15468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15514,
											"end": 15523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15508,
											"end": 15512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15504,
											"end": 15524,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15500,
											"end": 15501,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15489,
											"end": 15498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15485,
											"end": 15502,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15478,
											"end": 15525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 15668,
											"end": 15672,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 15542,
											"end": 15673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15673,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 15542,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15534,
											"end": 15673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15534,
											"end": 15673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15261,
											"end": 15680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15261,
											"end": 15680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15686,
											"end": 15833,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 15686,
											"end": 15833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15787,
											"end": 15798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15824,
											"end": 15827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15809,
											"end": 15827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15809,
											"end": 15827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15686,
											"end": 15833,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15686,
											"end": 15833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15686,
											"end": 15833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15686,
											"end": 15833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15686,
											"end": 15833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15839,
											"end": 15953,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 15839,
											"end": 15953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15839,
											"end": 15953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15839,
											"end": 15953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15959,
											"end": 16357,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 15959,
											"end": 16357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16118,
											"end": 16121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16139,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 16220,
											"end": 16221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16215,
											"end": 16218,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16139,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 16139,
											"end": 16222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16139,
											"end": 16222,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 16139,
											"end": 16222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16222,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16231,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 16320,
											"end": 16323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16231,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 16231,
											"end": 16324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16231,
											"end": 16324,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 16231,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16349,
											"end": 16350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16344,
											"end": 16347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16340,
											"end": 16351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16333,
											"end": 16351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16333,
											"end": 16351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15959,
											"end": 16357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15959,
											"end": 16357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15959,
											"end": 16357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15959,
											"end": 16357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16363,
											"end": 16742,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 16363,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16547,
											"end": 16550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16569,
											"end": 16716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 16712,
											"end": 16715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16569,
											"end": 16716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 16569,
											"end": 16716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16569,
											"end": 16716,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 16569,
											"end": 16716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16562,
											"end": 16716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16562,
											"end": 16716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16733,
											"end": 16736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 16736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16726,
											"end": 16736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16363,
											"end": 16742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16363,
											"end": 16742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16363,
											"end": 16742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16363,
											"end": 16742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16748,
											"end": 16916,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 16748,
											"end": 16916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16888,
											"end": 16908,
											"name": "PUSH",
											"source": 7,
											"value": "4661696C656420746F2073656E64204D544B0000000000000000000000000000"
										},
										{
											"begin": 16884,
											"end": 16885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16876,
											"end": 16882,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16872,
											"end": 16886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16865,
											"end": 16909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16748,
											"end": 16916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16748,
											"end": 16916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16922,
											"end": 17288,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 16922,
											"end": 17288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17064,
											"end": 17067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17085,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 17149,
											"end": 17151,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 17144,
											"end": 17147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17085,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 17085,
											"end": 17152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17085,
											"end": 17152,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 17085,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17152,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17161,
											"end": 17254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 17250,
											"end": 17253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17161,
											"end": 17254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 17161,
											"end": 17254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17161,
											"end": 17254,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 17161,
											"end": 17254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17279,
											"end": 17281,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17274,
											"end": 17277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17270,
											"end": 17282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17263,
											"end": 17282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17263,
											"end": 17282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16922,
											"end": 17288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16922,
											"end": 17288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16922,
											"end": 17288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16922,
											"end": 17288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17294,
											"end": 17713,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 17294,
											"end": 17713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17460,
											"end": 17464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17498,
											"end": 17500,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17487,
											"end": 17496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17483,
											"end": 17501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17475,
											"end": 17501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17475,
											"end": 17501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17547,
											"end": 17556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17541,
											"end": 17545,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17537,
											"end": 17557,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17533,
											"end": 17534,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17522,
											"end": 17531,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17518,
											"end": 17535,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17511,
											"end": 17558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17575,
											"end": 17706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 17701,
											"end": 17705,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17575,
											"end": 17706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 17575,
											"end": 17706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17575,
											"end": 17706,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 17575,
											"end": 17706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17567,
											"end": 17706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17567,
											"end": 17706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17294,
											"end": 17713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17294,
											"end": 17713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17294,
											"end": 17713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17294,
											"end": 17713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17719,
											"end": 17889,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 17719,
											"end": 17889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17859,
											"end": 17881,
											"name": "PUSH",
											"source": 7,
											"value": "796F752063616E277420696E7075742030783030000000000000000000000000"
										},
										{
											"begin": 17855,
											"end": 17856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17847,
											"end": 17853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17843,
											"end": 17857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17836,
											"end": 17882,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17719,
											"end": 17889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17719,
											"end": 17889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17895,
											"end": 18261,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 17895,
											"end": 18261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18037,
											"end": 18040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18058,
											"end": 18125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 18122,
											"end": 18124,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 18117,
											"end": 18120,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18058,
											"end": 18125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 18058,
											"end": 18125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18058,
											"end": 18125,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 18058,
											"end": 18125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18051,
											"end": 18125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18051,
											"end": 18125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18134,
											"end": 18227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 18223,
											"end": 18226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18134,
											"end": 18227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 18134,
											"end": 18227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18134,
											"end": 18227,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 18134,
											"end": 18227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18252,
											"end": 18254,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18247,
											"end": 18250,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18243,
											"end": 18255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18236,
											"end": 18255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18236,
											"end": 18255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17895,
											"end": 18261,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17895,
											"end": 18261,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17895,
											"end": 18261,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17895,
											"end": 18261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18267,
											"end": 18686,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 18267,
											"end": 18686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18433,
											"end": 18437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18471,
											"end": 18473,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18460,
											"end": 18469,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18456,
											"end": 18474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18448,
											"end": 18474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18448,
											"end": 18474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18520,
											"end": 18529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18514,
											"end": 18518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18510,
											"end": 18530,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18506,
											"end": 18507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18495,
											"end": 18504,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18491,
											"end": 18508,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18484,
											"end": 18531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18548,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 18674,
											"end": 18678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18548,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 18548,
											"end": 18679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18548,
											"end": 18679,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 18548,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18540,
											"end": 18679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18540,
											"end": 18679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18267,
											"end": 18686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18267,
											"end": 18686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18267,
											"end": 18686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18267,
											"end": 18686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 19134,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 18692,
											"end": 19134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18841,
											"end": 18845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18879,
											"end": 18881,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 18868,
											"end": 18877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18864,
											"end": 18882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18856,
											"end": 18882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18856,
											"end": 18882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18892,
											"end": 18963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 18960,
											"end": 18961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18949,
											"end": 18958,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18945,
											"end": 18962,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18936,
											"end": 18942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18892,
											"end": 18963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 18892,
											"end": 18963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18892,
											"end": 18963,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 18892,
											"end": 18963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18973,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 19041,
											"end": 19043,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19030,
											"end": 19039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19026,
											"end": 19044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19017,
											"end": 19023,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18973,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 18973,
											"end": 19045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18973,
											"end": 19045,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 18973,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19055,
											"end": 19127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 19123,
											"end": 19125,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19112,
											"end": 19121,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19108,
											"end": 19126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19099,
											"end": 19105,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19055,
											"end": 19127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 19055,
											"end": 19127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19055,
											"end": 19127,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 19055,
											"end": 19127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 19134,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 19134,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 19134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 19134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 19134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 19134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18692,
											"end": 19134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addBatchDividendsUsers(address[],uint256[])": "6264786c",
							"addDividendsUser(address,uint256)": "8ad0aaef",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"claimDividends()": "668038e0",
							"claimedDividends(address)": "7dfb3383",
							"decimals()": "313ce567",
							"distributeDividends()": "03c83302",
							"dividends(address)": "68306e43",
							"getClaimableDividents(address)": "89d6047d",
							"lastDividendTimestamp()": "2eb21b22",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalDividends()": "997664d7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DividendClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DividendDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addBatchDividendsUsers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addDividendsUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeDividends\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimableDividents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDividendTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0xe3e2194f79d65bf05edb04ac1bc7c3d7de98bc7e8e5eef340285e19b1c949299\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://194441dac6c12d722bf7a59b42dd2334c20a0829e131a3935a4c99e45e5485b5\",\"dweb:/ipfs/QmcJmnYkyHu33swcjU7CT5xpAAP834xkvNd87LatS9g2nh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 945,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "dividends",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 949,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "claimedDividends",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 951,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "totalDividends",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "lastDividendTimestamp",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MyToken": [
							1266
						],
						"Ownable": [
							147
						]
					},
					"id": 1267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1267,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1267,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"194:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "194:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "194:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"201:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "201:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "201:7:6"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1266,
							"linearizedBaseContracts": [
								1266,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "MyToken",
							"nameLocation": "183:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "68306e43",
									"id": 945,
									"mutability": "mutable",
									"name": "dividends",
									"nameLocation": "277:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1266,
									"src": "242:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 944,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 942,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "250:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "242:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 943,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "261:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7dfb3383",
									"id": 949,
									"mutability": "mutable",
									"name": "claimedDividends",
									"nameLocation": "349:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1266,
									"src": "314:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 948,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 946,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "322:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "314:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 947,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "997664d7",
									"id": 951,
									"mutability": "mutable",
									"name": "totalDividends",
									"nameLocation": "433:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1266,
									"src": "418:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "418:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2eb21b22",
									"id": 953,
									"mutability": "mutable",
									"name": "lastDividendTimestamp",
									"nameLocation": "469:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 1266,
									"src": "454:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "454:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2f588cf4bb0247b0f3f60e06187f92e6fd1deaabb56e2bcc5672352337871327",
									"id": 959,
									"name": "DividendDistributed",
									"nameLocation": "525:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "553:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "545:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "569:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "561:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:35:6"
									},
									"src": "519:61:6"
								},
								{
									"anonymous": false,
									"eventSelector": "5efa67896a23b651b741b525caacba039c00ca7853be3de8eb1f4269e8669c56",
									"id": 965,
									"name": "DividendClaimed",
									"nameLocation": "592:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "624:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "608:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "638:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "630:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:38:6"
									},
									"src": "586:60:6"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "749:51:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 979,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "766:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "770:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "766:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "778:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "760:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "760:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "760:32:6"
											}
										]
									},
									"id": 985,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "711:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "722:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 972,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 969,
												"name": "ERC20",
												"nameLocations": [
													"705:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "705:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "705:23:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 974,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "737:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "741:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "737:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 976,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 973,
												"name": "Ownable",
												"nameLocations": [
													"729:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "729:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "729:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "684:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "676:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:39:6"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "749:0:6"
									},
									"scope": 1266,
									"src": "654:146:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "867:36:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "884:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "888:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "878:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "878:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 992,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 991,
												"name": "onlyOwner",
												"nameLocations": [
													"857:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "857:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "857:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "817:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "830:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "822:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "842:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "834:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:28:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:0:6"
									},
									"scope": 1266,
									"src": "808:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "972:38:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "989:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "995:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "983:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "983:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "983:19:6"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1006,
												"name": "onlyOwner",
												"nameLocations": [
													"962:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "962:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "962:9:6"
										}
									],
									"name": "burn",
									"nameLocation": "920:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "933:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "925:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "947:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "939:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:30:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:0:6"
									},
									"scope": 1266,
									"src": "911:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "1203:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1025,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "1222:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1238:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1026,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1230:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1230:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1222:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f752063616e277420696e7075742030783030",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1244:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17",
																"typeString": "literal_string \"you can't input 0x00\""
															},
															"value": "you can't input 0x00"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46750d5392ff492ed0b5c6594c6c958ac23aa3566164ebd0c810d8711694cc17",
																"typeString": "literal_string \"you can't input 0x00\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1214:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1214:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "1214:53:6"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1034,
															"name": "dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "1280:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1036,
														"indexExpression": {
															"id": 1035,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "1290:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1280:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1037,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "1298:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1280:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "1280:24:6"
											}
										]
									},
									"functionSelector": "8ad0aaef",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1022,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1021,
												"name": "onlyOwner",
												"nameLocations": [
													"1193:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1193:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1193:9:6"
										}
									],
									"name": "addDividendsUser",
									"nameLocation": "1139:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1164:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1156:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1178:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1170:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:30:6"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:0:6"
									},
									"scope": 1266,
									"src": "1130:182:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "1487:126:6",
										"statements": [
											{
												"body": {
													"id": 1072,
													"nodeType": "Block",
													"src": "1541:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1064,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1044,
																			"src": "1573:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1066,
																		"indexExpression": {
																			"id": 1065,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "1579:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1573:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1067,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "1583:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1069,
																		"indexExpression": {
																			"id": 1068,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "1591:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1583:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1063,
																	"name": "addDividendsUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "1556:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1556:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1071,
															"nodeType": "ExpressionStatement",
															"src": "1556:38:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "1518:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1057,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "1522:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1528:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1522:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1518:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1073,
												"initializationExpression": {
													"assignments": [
														1053
													],
													"declarations": [
														{
															"constant": false,
															"id": 1053,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1511:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1073,
															"src": "1503:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1052,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1503:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1055,
													"initialValue": {
														"hexValue": "30",
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1503:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1536:3:6",
														"subExpression": {
															"id": 1060,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "1536:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1062,
													"nodeType": "ExpressionStatement",
													"src": "1536:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1498:108:6"
											}
										]
									},
									"functionSelector": "6264786c",
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "onlyOwner",
												"nameLocations": [
													"1477:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1477:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1477:9:6"
										}
									],
									"name": "addBatchDividendsUsers",
									"nameLocation": "1370:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "1420:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1403:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1042,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1403:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1043,
													"nodeType": "ArrayTypeName",
													"src": "1403:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1453:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1436:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1045,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1436:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1046,
													"nodeType": "ArrayTypeName",
													"src": "1436:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:75:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1487:0:6"
									},
									"scope": 1266,
									"src": "1361:252:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "1679:692:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1081,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1698:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1702:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1698:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1710:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1698:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204d544b2073656e7420666f72206469766964656e6473",
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1713:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48",
																"typeString": "literal_string \"No MTK sent for dividends\""
															},
															"value": "No MTK sent for dividends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14c910cd03944006767c962966825fd8f7458d25ee141d8eddb93cfb6a850a48",
																"typeString": "literal_string \"No MTK sent for dividends\""
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1690:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1690:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "1690:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1089,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "1760:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1760:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1776:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1760:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320697373756564",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1779:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22",
																"typeString": "literal_string \"No tokens issued\""
															},
															"value": "No tokens issued"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a6ca11a4ff8948efb7fccf804f011c534e764097b43497ea31af268fc5e8f22",
																"typeString": "literal_string \"No tokens issued\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1752:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1752:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "1752:46:6"
											},
											{
												"expression": {
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1096,
														"name": "totalDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "1811:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1097,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1829:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1833:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1829:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1811:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "1811:27:6"
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1101,
														"name": "lastDividendTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1849:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1102,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1873:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1879:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1873:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1849:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1849:39:6"
											},
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "1909:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1168,
														"src": "1901:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1901:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1108,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1923:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1901:35:6"
											},
											{
												"assignments": [
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "holders",
														"nameLocation": "1964:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1168,
														"src": "1947:24:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1113,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1947:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1114,
															"nodeType": "ArrayTypeName",
															"src": "1947:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1116,
														"name": "getTokenHolders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "1974:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function () view returns (address[] memory)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1974:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1947:44:6"
											},
											{
												"body": {
													"id": 1159,
													"nodeType": "Block",
													"src": "2073:226:6",
													"statements": [
														{
															"assignments": [
																1131
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1131,
																	"mutability": "mutable",
																	"name": "holder",
																	"nameLocation": "2096:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1159,
																	"src": "2088:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2088:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1135,
															"initialValue": {
																"baseExpression": {
																	"id": 1132,
																	"name": "holders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "2105:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1134,
																"indexExpression": {
																	"id": 1133,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "2113:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2105:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2088:27:6"
														},
														{
															"assignments": [
																1137
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1137,
																	"mutability": "mutable",
																	"name": "balance",
																	"nameLocation": "2138:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1159,
																	"src": "2130:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1136,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2130:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1141,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1139,
																		"name": "holder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "2158:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1138,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2148:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2148:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2130:35:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1142,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "2184:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2194:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2184:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1158,
															"nodeType": "IfStatement",
															"src": "2180:108:6",
															"trueBody": {
																"id": 1157,
																"nodeType": "Block",
																"src": "2197:91:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1145,
																					"name": "dividends",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 945,
																					"src": "2216:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1147,
																				"indexExpression": {
																					"id": 1146,
																					"name": "holder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "2226:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2216:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1151,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1148,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "2238:3:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 1149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2242:5:6",
																								"memberName": "value",
																								"nodeType": "MemberAccess",
																								"src": "2238:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1150,
																								"name": "balance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1137,
																								"src": "2250:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2238:19:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1152,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2237:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1153,
																					"name": "totalTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1107,
																					"src": "2261:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2237:35:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2216:56:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1156,
																		"nodeType": "ExpressionStatement",
																		"src": "2216:56:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1123,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "2048:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1124,
															"name": "holders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "2052:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2060:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2052:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2048:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1160,
												"initializationExpression": {
													"assignments": [
														1120
													],
													"declarations": [
														{
															"constant": false,
															"id": 1120,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2041:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1160,
															"src": "2033:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1119,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2033:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1122,
													"initialValue": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2033:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2068:3:6",
														"subExpression": {
															"id": 1127,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "2068:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1129,
													"nodeType": "ExpressionStatement",
													"src": "2068:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2028:271:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2336:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2340:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2336:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1164,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2347:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2353:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2347:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1161,
														"name": "DividendDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "2316:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "EmitStatement",
												"src": "2311:52:6"
											}
										]
									},
									"functionSelector": "03c83302",
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1078,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1077,
												"name": "onlyOwner",
												"nameLocations": [
													"1669:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1669:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1669:9:6"
										}
									],
									"name": "distributeDividends",
									"nameLocation": "1630:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:2:6"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1679:0:6"
									},
									"scope": 1266,
									"src": "1621:750:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "2443:361:6",
										"statements": [
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2462:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1221,
														"src": "2454:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1178,
												"initialValue": {
													"baseExpression": {
														"id": 1174,
														"name": "dividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2471:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1177,
													"indexExpression": {
														"expression": {
															"id": 1175,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2481:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2485:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2481:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2471:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2454:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1180,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "2511:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2520:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2511:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206469766964656e647320746f20636c61696d",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2523:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8",
																"typeString": "literal_string \"No dividends to claim\""
															},
															"value": "No dividends to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94af5d752fac2f61ff1e6457ec1844b18822e647405a3c307061436b3b1c2fe8",
																"typeString": "literal_string \"No dividends to claim\""
															}
														],
														"id": 1179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2503:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2503:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2503:44:6"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1186,
															"name": "dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "2560:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"expression": {
																"id": 1187,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2570:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2574:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2570:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2560:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2584:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2560:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "2560:25:6"
											},
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1193,
															"name": "claimedDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "2596:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1196,
														"indexExpression": {
															"expression": {
																"id": 1194,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2613:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2617:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2613:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2596:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1197,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "2628:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2596:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "2596:38:6"
											},
											{
												"assignments": [
													1201,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "2653:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1221,
														"src": "2648:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1200,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2648:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1209,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2694:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 1202,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2663:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2667:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2663:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2674:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2663:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1205,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "2686:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2663:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2663:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2647:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "2716:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204d544b",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2722:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f",
																"typeString": "literal_string \"Failed to send MTK\""
															},
															"value": "Failed to send MTK"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64f9ca0966e53aeadb4981b9b1cd329b5301d232f2a1c372c4f21cba4be9b8f",
																"typeString": "literal_string \"Failed to send MTK\""
															}
														],
														"id": 1210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2708:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2708:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "2708:35:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1216,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2777:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2781:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2777:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "2789:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "DividendClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "2761:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2761:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "EmitStatement",
												"src": "2756:40:6"
											}
										]
									},
									"functionSelector": "668038e0",
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimDividends",
									"nameLocation": "2417:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:2:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2443:0:6"
									},
									"scope": 1266,
									"src": "2408:396:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "2943:41:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1229,
														"name": "dividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2961:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1231,
													"indexExpression": {
														"id": 1230,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "2971:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2961:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1232,
												"nodeType": "Return",
												"src": "2954:22:6"
											}
										]
									},
									"functionSelector": "89d6047d",
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimableDividents",
									"nameLocation": "2859:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2899:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "2891:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:30:6"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "2934:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2934:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2933:9:6"
									},
									"scope": 1266,
									"src": "2850:134:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "3060:121:6",
										"statements": [
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "holders",
														"nameLocation": "3088:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "3071:24:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1242,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3071:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1243,
															"nodeType": "ArrayTypeName",
															"src": "3071:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3112:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3098:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1245,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3102:7:6",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1246,
															"nodeType": "ArrayTypeName",
															"src": "3102:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3098:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3071:43:6"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1251,
															"name": "holders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "3125:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1253,
														"indexExpression": {
															"hexValue": "30",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3133:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3125:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1254,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3138:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3142:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3138:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3125:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "3125:23:6"
											},
											{
												"expression": {
													"id": 1258,
													"name": "holders",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1244,
													"src": "3166:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1259,
												"nodeType": "Return",
												"src": "3159:14:6"
											}
										]
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenHolders",
									"nameLocation": "3001:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:2:6"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "3042:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1236,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3042:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1237,
													"nodeType": "ArrayTypeName",
													"src": "3042:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:18:6"
									},
									"scope": 1266,
									"src": "2992:189:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "3250:2:6",
										"statements": []
									},
									"id": 1265,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:2:6"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3250:0:6"
									},
									"scope": 1266,
									"src": "3223:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1267,
							"src": "174:3156:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								959,
								965
							]
						}
					],
					"src": "33:3299:6"
				},
				"id": 6
			}
		}
	}
}